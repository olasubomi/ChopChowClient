{"version":3,"sources":["assets/images/CC_Logo_no_bg.png","assets/images/ola_ola_palm_oil.jpg","assets/images/homepage/food_prep.jpg","assets/images/homepage/grocery_bag.jpg","assets/images/logo2.png","constants/ActionTypes.js","reducers/Auth.js","reducers/Common.js","store/index.js","components/Header/Header.js","components/Footer.js","components/Banners/banner.js","components/Banners/banner2.js","components/HomePage/HomePageButtons.js","components/HomePage.js","text_slide.js","components/mealsPage/Mymodal.js","components/mealsPage/product_slider/WithScrollbar.js","util/Api.js","components/mealsPage/MealsPage.js","components/vsm2/Mymodal.js","components/vsm2/product_slider/WithScrollbar.js","components/vsm2/VSMealsPage.js","components/productsPage/ProductsPage.js","components/Login/index.jsx","actions/Auth.js","components/CommonComponents/PageTitle/index.jsx","components/GroceryPage/ProductDetail/ProductModal.js","components/GroceryPage/index.jsx","components/signup/index.jsx","components/forgotpassword/index.jsx","components/resetpassword/index.jsx","MealsPageTextSlider.js","components/mealsPage/MealsPageModal.js","components/mealsPage/PreviewMealsPage.js","components/SuggestMeal.js","components/SuggestProduct.js","components/ViewSuggestedMeals.js","components/AdminPanel/AdminPanel.js","App.js","MainApp.js","reducers/index.js","serviceWorker.js","index.js","assets/images/no_meal_step_image.png"],"names":["module","exports","INIT_STATE","token","JSON","parse","localStorage","getItem","initURL","authUser","state","action","type","payload","role","customer_id","loading","status","message","error","history","createBrowserHistory","routeMiddleware","routerMiddleware","middlewares","thunk","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Header","Component","constructor","props","super","CustomToggle","React","forwardRef","children","onClick","ref","href","e","preventDefault","this","updateLogInStatus","bind","handleLogout","suggestMealPopOver","base_index","topNav_className","isAuthenticated","customerId","username","console","log","setState","setItem","fetch","method","credentials","headers","then","response","json","res","data","catch","err","location","reload","push","handleDashborad","render","myFunction","x","document","getElementById","className","login_on_desktop_navbar","login_on_burger_navbar","alignRight","Toggle","as","id","Menu","Item","eventKey","onSelect","ev","obj","Divider","to","style","padding","color","backgroundColor","borderBottom","src","img_logo","width","alt","placeholder","borderColor","right","display","marginTop","marginRight","justifyContent","marginLeft","border","connect","auth","commonData","withRouter","FooterPagePro","Container","Row","Col","md","textAlign","aria-hidden","fontSize","Date","getFullYear","Banner","product_fetched","height","verticalAlign","backgroundImage","background","backgroundRepeat","backgroundSize","Banner2","HomePageButtons","HomePage","TextSlider","modalIsOpen","increment","checked","index","handleSelect","updateInstructionsDisplayBaseIndex","selectedIndex","event","target","innerText","last_chars","slice","slide_num","Number","instructionData","i","carouselSlides","count_index","length","mealPrep1","step","Carousel","key","Paper","maxHeight","overflow","List","map","mealItem","image","no_mealImg","interval","content","MyModal","decrease","prevState","evnet","increase","openModal","closeModal","func_setMealFlag","func_removeMealFlag","value","mealPrep","ingredientsList","Modal","show","onHide","dialogClassName","centered","closeButton","Body","showThumbs","infiniteLoop","mealImage","label","readTime","cookTime","name","onChange","ingredient","product","marginBottom","WithScrollbar","col_count","selectedItem","parseInt","products","centerMode","centerSlidePercentage","process","base_url","axios","Axios","create","baseURL","defaults","common","MealsPage","onClickMealCard","selected_index","slider_flag","selectedCard_mealData","firstPart_ind","setMealSliderModal","mealSlider_Flag","removeMealSliderModal","onhandleLoadMore","count","currentMealCount","update","innerWidth","innerHeight","addEventListener","selectedCardID","mealList","componentDidMount","get","body","productsList","items","Math","min","tmp_item","j","containerStyle","margin","_id","paddingTop","paddingBottom","intro","product_slider","instructions","newer_ingredient_format","CognitoIdentityClient","require","fromCognitoIdentityPool","s3","S3Client","region","client","identityPoolId","VSMealsPage","getHtml","template","join","getHTML","listMeals","a","send","ListObjectsCommand","Bucket","MaxKeys","numberOfsuggestedMealsToDisplay","Contents","photos","photo","Key","htmlTemplate","innerHTML","getElementsByTagName","setAttribute","alert","ProductSection","storeCollection","store_products_fetched","text","storeList","store_name","store_products","entries","productsMenu","storeProductsIndex","productValue","product_name","trigger","product_image","product_price","modal","closeOnDocumentClick","contentStyle","align","store_image","maxWidth","Login","handleChange","handleClose","dialogue_open_flag","email","password","messageErr","messageSuccess","componentWillReceiveProps","nextProps","openFlag","backdrop","size","Title","Button","Form","Control","autoComplete","Label","column","variant","userSignIn","mapDispatchToProps","dispatch","post","customerID","PageTitle","title","ProductModal","gotoViewPage","productID","url","product_img","position","top","left","zIndex","onCloseClicked","GroceryPage","_isMounted","productNamesForTypeahead","Map","customerList","Authentication","messageErrCreate","showAlert","messageAlert","deletedItemId","selectedProduct","idsItems","deletedItemsId","lasIdListState","valueProductName","valueProductImage","valueProductPrice","valueProductSize","valuePricePerOunce","errormsg","typeAheadAdded","product_modal_flg","handleProductClick","_img","_name","flag","getCustomerList","setTimeout","handleShowDeleteItem","filter","item","handleDeleteList","handleClickTypeahead","selected","isNaN","options","Array","from","keys","Alert","messageVisible","stopPropagation","fluid","customer_grocery_product_item","startsWith","Card","Text","sizes","handleAddItemToCart","Spinner","animation","SignUp","phone","showModal","emailNotification","currentTarget","delay","formSubmit","test","split","account","domainParts","some","part","submitForm","stringify","xs","lg","onSubmit","Group","required","controlId","Check","ButtonToolbar","ResetPassword","password1","password2","search","replace","formData","Object","assign","isItReset","FormData","SuggestMeal","ingredientsQuantityMeasurements","booleanOfDisplayOfDialogBoxConfirmation","openProductDetailsModal","individualProductDisplay","onTextFieldChange","onInputChange","onUpdateMealImage","undefined","files","mealImageName","allowedImageExtensions","exec","URL","createObjectURL","onhandleInstructionImg","chunk1Content","chunk2Content","chunk3Content","chunk4Content","chunk5Content","chunk6Content","imageElementId","videoElementId","video","play","onUpdateInstructionImg","ind","temp_instructionImageOrVideoArray","instructionimagesAndVideos","handleProductNameInput","val","tmpcurrProductIndexInDBsProductsList","productNames","element","toLowerCase","indexOf","currProductIndexInDBsProductsList","currentIngredient","deleteNewIngredientFromNewProductPopUp","array","ingredientStrings","removeFromGroup","ingredientGroupList","tmpNewProductsList","new_product_ingredients","splice","handleKitchenUtensilInputName","suggestedUtensils","handleCategoryDropdownChange","suggestedCategories","sendSuggestedMealToDB","mealName","prepTime","servings","chef","tips","all_ingredients_formatted","tmp_ingredient","productName","productImgFile","measurementQuantity","quantity","measurement","new_measurements","productImgPath","properIngredientStringSyntax","tmp_slider_data","measurements","new_categories","categories","new_kitchen_utensils","kitchenUtensils","instructionGroupData","contentNameToContentImageOrVideoMapForS3","contentKey","append","currInstructionChunk","instructionChunk1","instructionChunk2","instructionChunk3","instructionChunk4","instructionChunk5","instructionChunk6","submitable_recipe_chunk","instructionChunk","keyValueData","mealContentName","singleTitleTest","suggestMealForm","filename","config","ingredientNames","currentIngredientMeasurement","currentIngredientQuantity","currentProductImgSrc","currentProductDisplayIndex","currentStore","productImg_path","suggested_stores","stepSlides","instructionSteps","dataName","handleIngredientMeasurement","addIngredientToMeal","updateChef","updateTip","handleAddInstructionStep","handleInstructionTitle","handleUtensilsDropdownChange","allMealNames","categoriesFromDBList","category_name","chefName","chip","deleteTip","tipsList","handleAddIngredientChip","handleDeleteIngredientChip","tmpcurrMeasurementIndexInDBsMeasurementList","chunkIndex","particularArray","handleDeleteInstructionsStep","arraySteps","handleDeleteUtensilsChip","handleAddCategoryChip","handleDeleteCategoryChip","ingredientValue","quantityValue","measurementValue","currIngredientObject","productIndex","theme","createMuiTheme","palette","primary","green","categoryList","availableLocations","boxShadow","noValidate","encType","Autocomplete","option","freeSolo","renderInput","params","TextField","fullWidth","accept","multiline","disableRipple","onAdd","onDelete","flex","multiple","controls","newValue","ThemeProvider","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","SuggestProduct","productsImg_path","onTextFieldClick","imgSrc","loading_imgSrc","img_change_flag","onhandleProductImg","productImgSrc","instructionImgData","instructionImgPath","onHandleIngredientItem","array3","onHandleInstructionItem","instructionGroupList","onUpdateIngredientImg","tmp_ingredientData","tmp_ingredientItem","tmp1","productImgData","tmp_instructionData","tmp","imgdata","imgpath","handleIngredientDropdownChange","product_ind","handleProductName","includes","find","productImgSetting_flag","addInstructionList","instructionsChip","productLabel","productImgForm","img_count1","productImg_paths","productImg_config","formatted_ingredient1","n1","instructionImgForm","img_count","instructionImg_paths","instructionImg_config","instrutionImg_paths","n","categoryChips","productsPopulated","handleIngredientQuantity","handleAddCategoryStep","currProductObject","columns","minWidth","minWi859dth","LightTooltip","withStyles","tooltip","shadows","Tooltip","ViewSuggestedMeals","updateSuggestItem","mealRole","selected_id","suggestMealRole","mealLabel","formatted_ingredient","tmp_inst_groupList","temp","parsed_ingredients","last_ingredient","handleUpdateSubmit","set","onhandleSendData","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","handleDeleteMealItem","handleClickOpen","parsed_instructionData","parsed_categories","ingredientData","handleSelectAllClick","newSelecteds","mealData_list","handleClick","newSelected","concat","mealImages_list","specificMealImage","REACT_APP_S3_REGION","REACT_APP_CHOPCHOWAPP_USER_AWS_KEY","REACT_APP_CHOPCHOWAPP_USER_AWS_SECRET","mealsList","comp_instructions","instructionContent","mimetype","overflowWrap","index1","classes","numSelected","rowCount","root","Toolbar","clsx","highlight","Typography","component","fontWeight","endIcon","TableContainer","container","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","TableBody","row","isItemSelected","isSelected","labelId","hover","aria-checked","tabIndex","placement","IconButton","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","button","spacing","unit","leftIcon","rightIcon","iconSmall","AdminPanel","handleOnClickItems","userRole","img_oil","App","productImageLink","groceryList","locationAddressComponent","getUser","userToken","exact","path","pathname","setInitUrl","store","initialState","createStore","combineReducers","router","connectRouter","Auth","Common","applyMiddleware","configureStore","MainApp","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52199708.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CC_Logo_no_bg.23a343fa.png\";","module.exports = __webpack_public_path__ + \"static/media/ola_ola_palm_oil.70ad3e22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food_prep.920586b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grocery_bag.6702032b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo2.8340d35f.png\";","export const FETCH_START = 'fetch_start';\nexport const FETCH_SUCCESS = 'fetch_success';\nexport const FETCH_ERROR = 'fetch_error';\n\nexport const SIGNIN_USER = 'signin_user';\nexport const SIGNIN_USER_SUCCESS = 'signin_user_success';\nexport const SIGNOUT_USER = 'signout_user';\nexport const SIGNOUT_USER_SUCCESS = 'signout_user_success';\nexport const INIT_URL = 'init_url';\nexport const USER_DATA = 'user_data';\nexport const USER_TOKEN_SET = 'user_token_set';\nexport const USER_ROLE = 'user_role_set';\nexport const CUSTOMER_ID = 'customer_id';\n\nexport const SEARCH_TITLE = 'search_title';\nexport const CART_LIST = 'cart_list';\nexport const TRENDING_VIDEOS = 'trending_videos';\nexport const WATCHING_VIDEOS = 'watching_videos';\n\nexport const CATEGORY_LIST = 'category_list';\n\nexport const JAWBONE_HANDLE = 'jawbone_handle';\n\n\n","import { INIT_URL, SIGNOUT_USER_SUCCESS, USER_DATA, USER_TOKEN_SET, USER_ROLE, CUSTOMER_ID,EMAIL_VERIFICATION_MESSAGE } from \"../constants/ActionTypes\";\n\nconst INIT_STATE = {\n    token: JSON.parse(localStorage.getItem('token')),\n    initURL: '',\n    authUser: null,\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case INIT_URL:\n            return {\n                ...state,\n                initURL: action.payload\n            };\n        case SIGNOUT_USER_SUCCESS: {\n            return {\n                ...state,\n                token: null,\n                authUser: null,\n                initURL: ''\n            }\n        }\n        case USER_DATA: {\n            return {\n                ...state,\n                authUser: action.payload,\n            };\n        }\n        case USER_TOKEN_SET: {\n            return {\n                ...state,\n                token: action.payload,\n            };\n        }\n        case USER_ROLE: {\n            return {\n                ...state,\n                role: action.payload,\n            };\n        }\n        case CUSTOMER_ID: {\n            return {\n                ...state,\n                customer_id: action.payload,\n            };\n        }\n        default:\n            return state;\n    }\n}","import { FETCH_ERROR, FETCH_START, FETCH_SUCCESS, HIDE_MESSAGE, SHOW_MESSAGE, EMAIL_VERIFICATION_MESSAGE } from '../constants/ActionTypes'\n\nconst INIT_STATE = {\n    loading: false,\n    status: false,\n    message: '',\n    error: \"\",\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case FETCH_START: {\n            return {\n                ...state,\n                loading: true,\n                error: '',\n                message: '',\n            };\n        }\n        case FETCH_SUCCESS: {\n            return {\n                ...state,\n                status: true,\n                loading: false,\n                message: action.payload || '',\n                error: '',\n            };\n        }\n        case FETCH_ERROR: {\n            return {\n                ...state,\n                status: false,\n                loading: false,\n                message: '',\n                error: action.payload || ''\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport reducers from '../reducers/index';\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nexport const history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nlet middlewares = [thunk, routeMiddleware, createLogger()];\nif (process.env.NODE_ENV === 'production') {\n    middlewares = [thunk, routeMiddleware];\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(initialState) {\n    const store = createStore(reducers(history), initialState,\n        composeEnhancers(applyMiddleware(...middlewares)));\n    return store;\n}\n","import React, { Component } from \"react\";\nimport { Link  } from \"react-router-dom\";\nimport img_logo from \"../../assets/images/CC_Logo_no_bg.png\"\nimport './header.css';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n// import axios from '../../util/Api';\n\n//////////////////////////////////////////////////////////////////////\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateLogInStatus = this.updateLogInStatus.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n\n    this.state = {\n      suggestMealPopOver: false,\n      base_index: 0,\n      topNav_className: \"w3-bar w3-dark-grey w3-green topnav\",\n      isAuthenticated: false,\n      customerId: null,\n      username: null,\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  updateLogInStatus(customerId, username) {\n    console.log(\"updates log in status before\");\n    this.setState({ isAuthenticated: true });\n    this.setState({ customerId: customerId });\n    this.setState({ username: username });\n\n    console.log(\"updates log in status after\");\n    console.log(\"customerID is:\" + customerId);\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n    <a href=\"/\" ref={ref} onClick={(e) => { e.preventDefault();  onClick(e); }}>\n      {children}\n      &#x25bc;\n    </a>\n  ));\n\n  //////////////////////////////////////////////////////////////////////\n  handleLogout(e) {\n    if(e === \"6\")\n    {\n      //clear cookie cache\n      window.localStorage.setItem(\"userToken\", null);\n      window.localStorage.setItem(\"userRole\", null);\n\n      // var url = \"/api/logout\";\n      var url = `https://chopchowdev.herokuapp.com/api/logout`;\n\n      fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          response.json().then((res) => {\n            console.log(\"logout response is:\");\n            console.log(res);\n            console.log(\"should print body\");\n            console.log(res.data);\n            if (res.data === \"success\") {\n              console.log(\"comes to turn off authentication state\");\n              this.setState({ isAuthenticated: false });\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"fails to authenticate app page\");\n          console.log(err);\n        });\n\n      this.setState({ isAuthenticated: false });\n      window.location.reload(false);\n    }\n    else if(e === \"4\"){\n      this.props.history.push('/SuggestMeal');\n    }\n  }\n\n\n  handleDashborad(){\n    this.props.history.push('/admin');\n  }\n\n\n  //////////////////////////////////////////////////////////////////////\n  render() {\n    const username = this.props.authUser;\n    const isAuthenticated = this.props.status;\n\n    /* Toggle between adding and removing the \"responsive\" class to topnav when the user clicks on the icon */\n    function myFunction() {\n      var x = document.getElementById(\"mobileNavbar\");\n      console.log(x);\n      if (x.className === \"mobileNavbar\") {\n        x.className += \" visible\";\n      } else {\n        x.className = \"mobileNavbar\";\n      }\n    }\n\n    var login_on_desktop_navbar;\n    var login_on_burger_navbar;\n\n    if (isAuthenticated) {\n      login_on_desktop_navbar = (\n        <li className=\"nav-item\">\n          <Dropdown alignRight>\n            <Dropdown.Toggle as={this.CustomToggle} id=\"dropdown-custom-components\">\n                {username}\n            </Dropdown.Toggle>\n            <Dropdown.Menu >\n              <Dropdown.Item eventKey=\"1\" onSelect={(ev, obj)=>this.handleDashborad()}>Profile</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"2\" onSelect={(ev, obj)=>this.handleDashborad()}> Dashboard/orders</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"3\" onSelect={(ev, obj)=>this.handleDashborad()}>Support</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"4\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Suggest Meal</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"5\" onSelect={(ev, obj)=>this.handleDashborad()}>Switch to driver mode</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"6\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Log out</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </li>\n      );\n\n      login_on_burger_navbar = (\n        <li className=\"nav-item\">\n          <Dropdown>\n            <Dropdown.Toggle className=\"user-item\" as={this.CustomToggle} id=\"dropdown-custom-components\">\n                {username}\n            </Dropdown.Toggle>\n            <Dropdown.Menu >\n              <Dropdown.Item eventKey=\"1\" onSelect={(ev, obj)=>this.handleDashborad()}>Profile</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"2\" onSelect={(ev, obj)=>this.handleDashborad()}> Dashboard/orders</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"3\" onSelect={(ev, obj)=>this.handleDashborad()}>Support</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"4\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Suggest Meal</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"5\" onSelect={(ev, obj)=>this.handleDashborad()}>Switch to driver mode</Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"6\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Log out</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </li>\n      );\n\n    } else {\n      login_on_desktop_navbar = (\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"nav-link px-2\">Log In / Register </Link>\n        </li>\n      );\n\n      login_on_burger_navbar = (\n        <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\n          <Link to=\"/login\" className=\"nav-link px-2\"  style={{ color: \"#FFFFFF\" }} >Log In / Register</Link>\n        </li>\n      );\n    }\n\n    return (\n      <div className=\"header-wraper\">\n        <nav\n          className=\"navbar navbar-expand-md fixed-top-sm justify-content-start flex-nowrap navbar-light\"\n          style={{backgroundColor: \"#FFFFFF\", borderBottom: \"1px solid #fd7e14\"}}\n        >\n          {/* Desktop Navbar */}\n          <div className=\"header-panel w-100\">\n            <div className=\"header-left \">\n              <Link to=\"/\" className=\"logo_tag navbar-brand \">\n                <img src={img_logo} width=\"60px\"  alt=\"\"/>\n              </Link>\n              <div className=\" form-inline navbar-first\" style={{ padding: \"14px 16px\"}}>\n                <div className=\"input-group \" >\n                  <input className=\"form-control \" placeholder=\"Search meal or category\"/>\n                  <span className=\"input-group-append\">\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" style={{ backgroundColor: \"#fd7e14\", borderColor: \"#fd7e14\", }} >\n                      <i className=\"fa fa-search\" style={{ color: \"#FFFFFF\" }}></i>\n                    </button>\n                  </span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"header-right navbar-first\">\n              <ul className=\"navbar-nav flex-row\">\n                <li className=\"nav-item\">\n                  <Link to=\"/grocery\" className=\"nav-link px-3\">Grocery List</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/SuggestMeal\" className=\"nav-link px-3\">Suggest Meal</Link>\n                </li>\n                {login_on_desktop_navbar}                \n              </ul>              \n            </div>\n          </div>\n\n          <Link to=\"#\" className=\"icon navbar-toggle\" onClick={() => { console.log(\"Comes thru here\"); myFunction(); }}  >\n            <i className=\"fa fa-bars\" style={{ color: \"#AAAAAA\", right: \"1%\" }}></i>\n          </Link>          \n        </nav>\n\n\n        {/* Burger navbar */}\n        <div className=\"mobileNavbar\" id=\"mobileNavbar\" style={{ display: \"none\" }} >\n          <div className=\"mobileNavbar-menu\">\n            <span className=\"input-group-append\" style={{ marginTop:\"23px\",  marginRight:\"15px\"  , justifyContent:\"flex-end\"}}> \n              <Link to=\"#\" className=\"icon navbar-toggle\" onClick={() => { console.log(\"Comes thru here\"); myFunction(); }}  >\n                  <i className=\"fa fa-bars\" style={{ color: \"white\", marginLeft:\"10px\", padding: \"10px 17px\" }}></i>\n              </Link>\n            </span>\n\n            <ul className=\"navbar-nav\">\n              <li style={{ padding: \"5px 16px\", borderBottom: \"1px solid #FFFFFF\" }}>              \n                <div className='search_bar'>\n                  <form >\n                    <input className='form-control' placeholder='Search meal or category' style={{backgroundColor: \"#fd7e14\", border: \"1px solid #FFFFFF\", }}/>\n                    <span className=\"search_bar__icon\">\n                      <div className=\"btn btn-outline-secondary\" style={{backgroundColor: \"#FFFFFF\", borderColor: \"#fd7e14\", }}>\n                        <i className=\"fa fa-search \" style={{ color: \"#fd7e14\"}} ></i>\n                      </div>\n                    </span>\n                  </form>\n                </div>\n              </li>\n\n              {login_on_burger_navbar}\n              <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\n                <Link to=\"/grocery\" className=\"nav-link px-2\" style={{ color: \"#FFFFFF\" }}>Grocery List</Link>\n              </li>\n              <li className=\"nav-item\" style={{padding: \"14px 16px\", borderBottom: \"1px solid #FFFFFF\", }}>\n                <Link to=\"/SuggestMeal\" className=\"nav-link px-2\" style={{ color: \"#FFFFFF\" }}>Suggest Meal</Link>\n              </li>\n              <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\n                <Link to=\"/v2\" className=\"nav-link px-2\" style={{ color: \"#FFFFFF\" }}>Home</Link>\n              </li>              \n              <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\n                <Link to=\"/products\" className=\"nav-link px-2\" style={{ color: \"#FFFFFF\" }} > Stores </Link>\n              </li>\n              <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\n                <Link to=\"/products\"  className=\"nav-link px-2\"  style={{ color: \"#FFFFFF\" }}>Receipes</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <nav className=\"navbar navbar-expand-md  navbar-light navbar-second\" style={{ backgroundColor: \"#EEEEEE\" }}>\n          <div className=\"navbar-collapse collapse pt-2 pt-md-0\" id=\"navbar2\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\" style={{ marginRight: \"50%\" }}>\n                <Link to=\"/home\" className=\"nav-link px-2\"> Home </Link>\n              </li>\n              <li className=\"nav-item\" style={{ marginRight: \"50%\" }}>\n                <Link to=\"/products\" className=\"nav-link px-2\"> Stores </Link>\n              </li>\n              <li className=\"nav-item\" style={{ marginRight: \"50%\" }}>\n                <Link to=\"/v2\" className=\"nav-link px-2\"> Receipes </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth, commonData }) => {\n  const { authUser, role, customer_id } = auth;\n  const {status }  = commonData;\n  return { authUser, role, customer_id, status }\n};\n\nexport default connect(mapStateToProps, ()=>({}))(withRouter(Header));","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport img_logo from \"../assets/images/CC_Logo_no_bg.png\";\nimport './Footer.css';\n\nconst FooterPagePro = () => {\n  return (\n    <Container className=\"footer-wraper\" >      \n      <Row style={{ width: \"100%\" }}>\n        <hr\n          className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\n          style={{ width: \"100%\" }}\n        />\n          <Col md={3} className=\"footer-colmun\">\n            <h6 className=\"text-uppercase font-weight-bold\"  style={{ color: \"gray\" }}>\n                <strong>Services</strong>\n            </h6>\n            <hr\n              className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\n              style={{ width: \"100px\" }}\n            />\n            <p><a href=\"#!\">Recipes</a></p>\n            <p><a href=\"#!\">GroceryList</a></p>\n            <p><a href=\"#!\">Food Products</a></p>\n            <p><a href=\"#!\">Kitchen Products</a></p>\n            <p><a href=\"#!\">Household Products</a></p>\n          </Col>\n          <Col md={3} className=\"footer-colmun\">\n              <h6 className=\"text-uppercase font-weight-bold\"  style={{ color: \"gray\" }}>\n                  <strong>Resources</strong>\n              </h6>\n              <hr\n                className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\n                style={{ width: \"100px\" }}\n              />\n              <p><a href=\"#!\">Login/ My Account</a></p>\n              <p><a href=\"#!\">Sign Up</a></p>\n              <p><a href=\"#!\">Supplier Home</a></p>\n              <p><a href=\"#!\">Shipping + Returns</a></p>\n              <p><a href=\"#!\">FAQ + Support</a></p>\n              <p><a href=\"#!\">Contact</a></p>\n          </Col>\n          <Col md={3} className=\"footer-colmun\">\n            <h6 className=\"text-uppercase font-weight-bold\"  style={{ color: \"gray\" }}>\n                <strong>Company</strong>\n            </h6>\n            <hr\n              className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\n              style={{ width: \"100px\" }}\n            />\n            <p><a href=\"#!\" className=\"fa mr-3\" > About Us</a></p>\n            <p><a href=\"#!\" className=\"fa mr-3\" > Careers</a></p>\n            <p><a href=\"#!\" className=\"fa mr-3\" > Partner</a></p>\n            <p><a href=\"#!\" className=\"fa mr-3\" > Terms of Service</a></p>\n            <p><a href=\"#!\" className=\"fa mr-3\" > Privacy Policy</a></p>\n          </Col>\n          <Col md={3} className=\"footer-colmun\" style={{ textAlign: \"center\" }}>\n            <img src={img_logo} width=\"100px\" alt=\"\"/>\n            <div className=\"logo-text\">Adding convenience to home made mealsTM</div>\n            <div style={{ marginTop: \"20px\" }}>  \n              <i className=\"fa fa-facebook-square m-2\" aria-hidden=\"true\"  style={{ fontSize: \"30px\" }}></i>\n              <i className=\"fa fa-instagram m-2\" aria-hidden=\"true\" style={{ fontSize: \"30px\" }}></i>\n            </div>\n            <div className=\"\"> &copy; {new Date().getFullYear()} Copyright:{\" \"}\n             <a href=\"https://www.awokorpenterprises.com\"> ChopChowSD </a></div>\n          </Col>\n        </Row>\n    </Container>\n  );\n};\n\nexport default FooterPagePro;\n","import React, { Component } from \"react\";\nimport background from \"../../assets/images/homepage/food_prep.jpg\";\nimport './banner.css';\nimport { Link } from \"react-router-dom\";\n\n\nclass Banner extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            product_fetched: false,\n        };\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div style={{\n                    height: \"510px\",\n                    verticalAlign: \"top\",\n                    backgroundImage: `url(${background})`,\n                    backgroundRepeat: \"no-repeat\",\n                    // backgroundSize: \"100%\",\n                    backgroundColor: \"transparent\",\n                    backgroundSize: \"cover\"\n                }}\n\n                >\n                    {/* <!-- <h1>Book a Consultation</h1> --> */}\n                    <div className=\"banner_spacing\"></div>\n\n                    <p className=\"banner_text\">\n                        <b>\n                            WELL-ESTABLISHED<br></br>\n                            LOCAL AND<br></br>\n                            INTERNATIONAL<br></br>\n                            FOOD SUPPLIERS<br></br>\n                            <u>\n                                <Link to=\"/products\" className=\"nav-link px-2\">\n                                    LEARN MORE\n                                </Link>\n\n                            </u>\n                        </b>\n                    </p>\n                </div>\n            </div>\n        )\n    };\n\n}\n\nexport default Banner;","import React, { Component } from \"react\";\nimport background from \"../../assets/images/homepage/grocery_bag.jpg\";\nimport './banner2.css';\nimport { Link  } from \"react-router-dom\";\n\nclass Banner2 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            product_fetched: false,\n        };\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div style={{\n                    height: \"510px\",\n                    verticalAlign: \"top\",\n                    backgroundImage: `url(${background})`,\n                    backgroundRepeat: \"no-repeat\",\n                    // backgroundSize: \"100%\",\n                    backgroundColor: \"transparent\",\n                    backgroundSize: \"cover\"\n                }}\n\n                >\n                    {/* <!-- <h1>Book a Consultation</h1> --> */}\n                    <div className=\"banner2_spacing\"></div>\n                    <div className=\"banner2container\">\n                        <p className=\"banner2_text\">\n                            <b>\n                                HOME COOK<br></br>\n                                INTERNATIONAL FOODS<br></br>\n                                <button className=\"banner2_button\">\n                                     <Link to=\"/products\" className=\"nav-link px-2\">SEE RECIPES</Link>\n                                </button>\n                            </b>\n                        </p>\n                    </div>\n\n                </div>\n            </div>\n        )\n    };\n\n}\n\nexport default Banner2;","import React, { Component } from \"react\";\nimport { Link  } from \"react-router-dom\";\nimport './HomePageButtons.css';\n\n\nclass HomePageButtons extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product_fetched: false,\n    };\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n\n<div className=\"row\">\n        <button className=\"homepage_button\" onClick={\"./v2\"}>\n          <Link to=\"/SuggestMeal\" className=\"nav-link px-2\">Suggest A Meal</Link>\n          </button>\n      </div>\n      </div>\n    )\n  };\n\n}\n\nexport default HomePageButtons;","import React, { Component } from \"react\";\nimport Banner from \"./Banners/banner\"\nimport Banner2 from \"./Banners/banner2\"\nimport HomePageButtons from \"./HomePage/HomePageButtons\"\n\nclass HomePage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product_fetched: false,\n    };\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Banner/>\n        <br></br>\n        <HomePageButtons/>\n        <br></br>\n        <Banner2/>\n      </div>\n    )\n  };\n\n}\n\nexport default HomePage;","import React, { Component } from \"react\";\nimport { Carousel,  } from \"react-bootstrap\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./text_slider.css\";\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport no_mealImg from '../src/assets/images/no_meal_step_image.png';\n\nclass TextSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      increment: 0,\n      checked: false,\n      base_index: 0,\n      index: 0\n    };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.updateInstructionsDisplayBaseIndex = this.updateInstructionsDisplayBaseIndex.bind(\n      this\n    );\n  }\n\n  handleSelect(selectedIndex) {\n    this.setState({ index: selectedIndex + 1 });\n  }\n\n  updateInstructionsDisplayBaseIndex(event) {\n    console.log(event.target.innerText);\n    var button = event.target.innerText;\n    // var regExp = \"/^w+[ ]/d  $/\";\n    // var slide_index = button.match(regExp);\n    //console.log(slide_index);\n    var last_chars = button.slice(6, 7);\n    var slide_num = Number(last_chars);\n    this.setState({ base_index: slide_num * 3 });\n    //var base_index = slide_num*3;\n    //console.log(\"Updating base index on click to: \" +this.state.base_index);\n  }\n\n  render() {\n    const { instructionData } = this.props;\n \n    // const mealPrep1 = instructionData[0].step;\n    // const meal_background = instructionData[0].image;\n    var carouselSlides = [];\n    var i;\n\n    var count_index = 1;\n    \n    for (i = 0; i < instructionData.length ; i++) {\n      const mealPrep1 = instructionData[i].step;\n\n      if(i!==0){\n        count_index += instructionData[i-1].step.length;\n      }\n\n      carouselSlides.push(\n        <Carousel.Item key={i} style={{'height':\"300px\"}} className=\"instruction_slider_page\">\n          <Paper style={{maxHeight: 200, overflow: 'auto'}} className = \"mealPrepChunk\">\n              <List>\n                <div className=\"ml-2\">\n                {\n                  mealPrep1.map((mealItem, index)=>(\n                    <div key={index}>\n                      {index+count_index}. {mealItem} \n                      <p></p> \n                    </div>   \n                  ))\n                }\n                </div>\n                <p/>\n                 <img\n                  className=\"img-responsive imageHeighgt\"\n                  src={instructionData[i].image !==null? instructionData[i].image: no_mealImg}\n                  alt=\"First slide\"\n                  style ={{height:\"auto\", width:\"80%\", marginLeft:\"10%\"}}\n                />\n              </List>\n            </Paper>\n         \n          {/* <Carousel.Caption>\n            \n          </Carousel.Caption> */}\n        </Carousel.Item>\n      )\n    }\n\n    return (\n\n      <div>\n        <b>Instructions</b>< br></br>\n          <Carousel className=\"instruction-slider\" onSelect={this.handleSelect} interval={null}>          \n            {carouselSlides}\n          </Carousel>\n      </div>\n\n    );\n  }\n}\nexport default TextSlider;","import React, { Component } from \"react\";\n// import Modal from \"react-modal\";\n// import HeartCheckbox from 'react-heart-checkbox';\n// import Slider from \"react-animated-slider\";\n// import \"react-animated-slider/build/horizontal.css\";\n// import { Carousel } from 'react-responsive-carousel';\n// import ImagePopup from \"./ImagePopup\";\nimport { Modal } from \"react-bootstrap\";\n// import {Button} from 'react-bootstrap/Button';\nimport TextSlider from \"../../text_slide\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\n// import \"./Mymodal.scoped.scss\";\nimport \"../../App.css\";\n\nconst content = [1, 2];\nclass MyModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      increment: 0,\n      checked: false,\n      index: 0\n    };\n    this.openModal = this.openModal.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n  decrease = () => {\n    if (this.state.increment > 0) {\n      this.setState(prevState => ({ increment: prevState.increment - 1 }));\n    }\n  };\n\n  onClick = (evnet, props) => {\n    this.setState({ checked: !this.state.checked });\n  };\n\n  increase = () => {\n    this.setState({ increment: this.state.increment + 1 });\n  };\n\n  openModal() {\n    this.props.func_setMealFlag();\n    this.setState({ modalIsOpen: true });\n  }\n\n  // afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   this.subtitle.style.color = \"#f00\";\n  // }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n    this.props.func_removeMealFlag();\n  }\n\n  handleSelect(selectedIndex, e) {\n    this.setState({ index: selectedIndex });\n  }\n  render() {\n    // const { checked } = this.state;\n    const { value, mealPrep, ingredientsList } = this.props;\n\n    return (\n      <>\n        <Modal\n          show = {this.state.modalIsOpen}\n          onHide = { this.closeModal }\n          dialogClassName=\"modal-90w\"\n          centered\n        >\n          <Modal.Header closeButton style={{'borderBottom': '30px', 'padding': '0px'}}/> \n          <Modal.Body style={{ padding: \"0px\" }}> \n            <div className=\"container\">\n              <div className=\"row\" style={{ width: \"100%\"}}>\n                <div className=\"detail-firstCol col-md-5 col-sm-12\" >\n                  <Carousel showThumbs={false} infiniteLoop={false} style={{width:\"96%\" }}>\n                    {content.map(index => (\n                      <img style={{ height: \"250px\" }} alt=\"pp\" key={index} src={value.mealImage} />\n                    ))}                    \n                  </Carousel>\n                  <br />\n                  <div className=\"col-md-12 col-xs-12\">\n                    <h3> {value.label}</h3>\n                    <div>\n                      {value.readTime} mins read | {value.cookTime} mins to prepare\n                    </div>\n                    <div> \n                      <button  style={{ backgroundColor: \"grey\",color: \"white\"}} >\n                        Compare items\n                      </button>\n                    </div>\n                    <br />\n                  </div>\n                </div>\n                \n                <div className=\"col-md-6 col-xs-12\">\n                  <div className=\"row col-md-6 col-xs-12\" style={{ width: \"100%\"}}> Meal Quantity &nbsp;\n                    <div className=\"def-number-input number-input\" style={{ backgroundColor: \"lightgrey\" }}>\n                      <button onClick={this.decrease} className=\"minus\"></button>\n                      <input className=\"quantity\" name=\"quantity\" value={this.state.increment}  onChange={() => console.log(\"change\")}  type=\"number\"/>\n                      <button onClick={this.increase} className=\"plus\"></button>\n                    </div>                    \n                  </div>\n\n                  <br />\n                  <div className=\"row col-md-6 col-sm-12\"><b>Ingredients</b></div>                  \n                  <div className=\"row ingredient-section\" >\n                      { ingredientsList &&\n                        ingredientsList.map(ingredient => (\n                          <div className=\"col-md-6 col-sm-12\" key={value.label + ingredient.product}>\n                            <input type=\"checkbox\" value=\"\" />{\" \"+ ingredient.product} <br />\n                          </div>\n                        ))} \n                  </div>    \n\n                  <button className=\"btn-addToCard\" style={{ marginBottom: \"20px\"}}>Add to Cart</button>\n                  <TextSlider instructionData={mealPrep} value={value} />\n                </div>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n        <div id ={value.name}>\n          <button\n            className = \"detail-step-btn\"\n            style={{ backgroundColor: \"orange\"}}\n            key={value.id+value.label} onClick={this.openModal}>\n              See Full Recipe\n          </button>\n        </div>\n      </>\n    );\n  }\n}\nexport default MyModal;\n","import React, { Component } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport no_mealImg from '../../../assets/images/no_meal_step_image.png';\n// import \"./WithScrollbar.scss\";\n\nexport default class WithScrollbar extends Component {\n  constructor() {\n    super();\n\n    // this.state = {  width: 0 };\n    // window.addEventListener(\"resize\", this.update);\n  }\n\n  // update = () => {\n  //   this.setState({  width: window.innerWidth });\n  //   let count = 1;\n  //   if (this.state.width > 1200) count = 4;\n  //   else if(this.state.width > 1000 && this.state.width < 1200) count = 3;\n  //   else if(this.state.width > 800 && this.state.width < 1000) count = 2;\n\n  //   if(this.props.products === null && this.state.width > 800) count = 4;\n  //   else if(this.props.products.length < 4 && this.state.width > 800) count = 4; //Math.min(count, this.props.products.length);\n  // };\n\n  render() {\n    let col_count = this.props.col_count;\n\n    return (\n        <Carousel className=\"withScroll_slider\" showThumbs={false} infiniteLoop={false} selectedItem = { parseInt(this.props.products.length /2) } centerMode={true} centerSlidePercentage={100 / (1.4*col_count)}>\n          {this.props.products.map((ingredient, index) => (\n            <div key={index}>                    \n                <img src={ingredient.image!==\"\"? ingredient.image: no_mealImg} alt={ingredient.ingredient} height=\"200px\" width=\"auto\"/>\n                <p style={{fontSize:\"20px\"}}>{ingredient.ingredient}</p>\n            </div>\n          ))}\n            \n        </Carousel>\n    );\n  }\n}\n","import Axios from 'axios';\n\n\nconsole.error(\"______ process.env.NODE_ENV ____\", process.env.NODE_ENV)\n// let base_url = `http://localhost:3000/api/`;\nlet base_url = `https://chopchowdev.herokuapp.com/api/`;    \n\nif (process.env.NODE_ENV !== \"development\") {\n    base_url = `https://chopchowdev.herokuapp.com/api/`;\n}\n\nlet axios = Axios.create({\n    baseURL: base_url,  //YOUR_API_URL HERE\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nconst token = JSON.parse(localStorage.getItem('token'));\nconsole.error(\"__ token __\", token);\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\nexport default axios;\n","import React, { Component } from \"react\";\nimport MyModal from \"./Mymodal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\";\n// import \"./MealsPage.scoped.scss\";\nimport { Row } from 'react-bootstrap'\nimport axios from '../../util/Api';\n\nclass MealsPage extends Component {\n  // Mongo\n  entries;\n\n  constructor(props) {\n    super(props);\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      selectedCard_mealData: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n\n      mealList:null,\n      col_count:1\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    this.update();\n\n    console.log(\"Comes in meal pages component did mount\");\n    // var url = \"https://chopchowdev.herokuapp.com/api/get-meals\";\n    var url = \"/get-meals\"\n\n    \n    // axios(url)\n    //   .then(res => res.text())\n    //   .then(body => {\n      axios.get(url).then((body) => {\n        var productsList = body.data;\n        if(productsList && productsList.data.length !== 0){\n          console.log(\"shows products does return\");\n          console.log(productsList.data.length);\n          let products = [];\n          for (var i = 0; i < productsList.data.length; i++) {\n            products.push(productsList.data[i]);\n          }\n          this.setState({ products: products})\n        }\n        else{\n          console.log(\"shows products do not return\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onClickMealCard = ( i, col_count )=>{\n    if(i === this.state.selected_index) this.setState({slider_flag: !this.state.slider_flag})\n    else this.setState({slider_flag: true})\n\n    this.setState({ selected_index: i});\n    this.setState({ selectedCard_mealData: this.state.products[i]});\n    this.setState({ modalIsOpen: true });  \n    this.setState({ firstPart_ind: (parseInt((i )/ col_count)+1)*col_count});   \n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  setMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: true});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  removeMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: false});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onhandleLoadMore = () => {\n    let count = this.state.currentMealCount;\n    if(count>= this.state.products.length)   this.setState({currentMealCount: this.state.products.length});\n    else this.setState({currentMealCount: count + 10 });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  update = () => {\n    let col_count = 1;\n    if (window.innerWidth > 1200) col_count = 4;\n    else if(window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;\n    else if(window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n\n    if(this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4;\n    // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n    this.setState({col_count: col_count});\n  };\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const {selectedCard_mealData} = this.state;\n    const items = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount);\n\n    if(this.state.products.length>0){\n      // Meal Cards displayed before selected card\n      for (let i = 0; i< Math.min(count, this.state.firstPart_ind); i+= this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= Math.min(count, this.state.firstPart_ind)) break;\n          const value = this.state.products[i+j];  \n          tmp_item.push(\n            <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n            <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n              <div style={containerStyle}>\n                <div style={{ textAlign:\"center\" }}>\n                  <img src={value.mealImage} className=\"images\" style={{ width: \"200px\", height: \"200px\" }} alt=\"/\"></img>\n                </div>\n                <div>\n                  <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                  <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                  <span style={{ color: \"black\" }}></span>\n                </div>              \n              </div>\n            </div>\n          </div>\n          )\n        }\n\n        items.push(\n          <Row key={i}> {tmp_item}</Row>\n        )\n      }\n\n      // Meal card for selected card ONLY including Selected Card ingredient images on display\n      if(selectedCard_mealData && this.state.slider_flag){\n        items.push(\n          <Row key={Math.min(count, this.state.firstPart_ind)}>\n            <div className=\"col-sm-12\" style={{background:\"#ffffff\"}} key=\"1000001\">\n              <div style={{width: \"95%\", margin:\"auto\"}}>\n                <div className =\"detail-card-explain\" id={selectedCard_mealData._id} >\n                    <div style={{fontSize:\"18px\", paddingTop:\"20px\", paddingBottom:\"20px\"}}>{selectedCard_mealData.intro}\n                    </div>\n                  </div>\n\n                  <div id={selectedCard_mealData._id + \"products\"}>                  \n                    <WithScrollbar products={selectedCard_mealData.product_slider} col_count={this.state.col_count}/>\n                  </div>\n\n                  <MyModal \n                    value={selectedCard_mealData}\n                    mealPrep={selectedCard_mealData.instructions}\n                    ingredientsList={selectedCard_mealData.newer_ingredient_format }\n                    func_setMealFlag = {this.setMealSliderModal}\n                    func_removeMealFlag = {this.removeMealSliderModal}\n                  />\n                </div>\n            </div>\n          </Row>\n        )\n      }\n     \n      // Meal Cards displayed after selected card\n      for (let i = Math.min(count, this.state.firstPart_ind); i< count; i+=this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= count) break;\n            const value = this.state.products[i+j];   \n            tmp_item.push(\n              <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n                <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n                  <div style={containerStyle}>\n                    <div style={{ textAlign:\"center\" }}>\n                      <img\n                        src={value.mealImage}\n                        className=\"images\"\n                        style={{ width: \"200px\", height: \"200px\" }}\n                        alt=\"/\"\n                      ></img>\n                    </div>\n                    <div>\n                      <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                      <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                      <span style={{ color: \"black\" }}></span>\n                    </div>              \n                  </div>\n\n                </div>\n              </div>\n            )\n        }\n       \n        items.push(\n          <Row key={i+1}>{tmp_item}</Row>\n        );\n      }\n    }\n    \n    return (\n      <div className=\"meals-Page\">\n        <div id=\"title\" className=\"meal-title\"> <b>Meals</b> </div>\n        <div className=\"mealPage-container\">\n            {items}        \n        </div>\n        <section className=\"loadmore-section\">\n          <button className=\"btn-loadmore\" onClick={()=>this.onhandleLoadMore()}>Load More</button>\n        </section>\n      </div>\n    )\n  };\n}\n\nexport default MealsPage;\n\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};\n","import React, { Component } from \"react\";\n// import Modal from \"react-modal\";\n// import HeartCheckbox from 'react-heart-checkbox';\n// import Slider from \"react-animated-slider\";\n// import \"react-animated-slider/build/horizontal.css\";\n// import { Carousel } from 'react-responsive-carousel';\n// import ImagePopup from \"./ImagePopup\";\nimport { Modal } from \"react-bootstrap\";\n// import {Button} from 'react-bootstrap/Button';\nimport TextSlider from \"../../text_slide\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\n// import \"./Mymodal.scoped.scss\";\nimport \"../../App.css\";\n\nconst content = [1, 2];\nclass MyModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      increment: 0,\n      checked: false,\n      index: 0\n    };\n    this.openModal = this.openModal.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n  decrease = () => {\n    if (this.state.increment > 0) {\n      this.setState(prevState => ({ increment: prevState.increment - 1 }));\n    }\n  };\n\n  onClick = (evnet, props) => {\n    this.setState({ checked: !this.state.checked });\n  };\n\n  increase = () => {\n    this.setState({ increment: this.state.increment + 1 });\n  };\n\n  openModal() {\n    this.props.func_setMealFlag();\n    this.setState({ modalIsOpen: true });\n  }\n\n  // afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   this.subtitle.style.color = \"#f00\";\n  // }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n    this.props.func_removeMealFlag();\n  }\n\n  handleSelect(selectedIndex, e) {\n    this.setState({ index: selectedIndex });\n  }\n  render() {\n    // const { checked } = this.state;\n    const { value, mealPrep, ingredientsList } = this.props;\n\n    return (\n      <>\n        <Modal\n          show = {this.state.modalIsOpen}\n          onHide = { this.closeModal }\n          dialogClassName=\"modal-90w\"\n          centered\n        >\n          <Modal.Header closeButton style={{'borderBottom': '30px', 'padding': '0px'}}/> \n          <Modal.Body style={{ padding: \"0px\" }}> \n            <div className=\"container\">\n              <div className=\"row\" style={{ width: \"100%\"}}>\n                <div className=\"detail-firstCol col-md-5 col-sm-12\" >\n                  <Carousel showThumbs={false} infiniteLoop={false} style={{width:\"96%\" }}>\n                    {content.map(index => (\n                      <img style={{ height: \"250px\" }} alt=\"pp\" key={index} src={value.mealImage} />\n                    ))}                    \n                  </Carousel>\n                  <br />\n                  <div className=\"col-md-12 col-xs-12\">\n                    <h3> {value.label}</h3>\n                    <div>\n                      {value.readTime} mins read | {value.cookTime} mins to prepare\n                    </div>\n                    <div> \n                      <button  style={{ backgroundColor: \"grey\",color: \"white\"}} >\n                        Compare items\n                      </button>\n                    </div>\n                    <br />\n                  </div>\n                </div>\n                \n                <div className=\"col-md-6 col-xs-12\">\n                  <div className=\"row col-md-6 col-xs-12\" style={{ width: \"100%\"}}> Meal Quantity &nbsp;\n                    <div className=\"def-number-input number-input\" style={{ backgroundColor: \"lightgrey\" }}>\n                      <button onClick={this.decrease} className=\"minus\"></button>\n                      <input className=\"quantity\" name=\"quantity\" value={this.state.increment}  onChange={() => console.log(\"change\")}  type=\"number\"/>\n                      <button onClick={this.increase} className=\"plus\"></button>\n                    </div>                    \n                  </div>\n\n                  <br />\n                  <div className=\"row col-md-6 col-sm-12\"><b>Ingredients</b></div>                  \n                  <div className=\"row ingredient-section\" >\n                      { ingredientsList &&\n                        ingredientsList.map(ingredient => (\n                          <div className=\"col-md-6 col-sm-12\" key={value.label + ingredient.product}>\n                            <input type=\"checkbox\" value=\"\" />{\" \"+ ingredient.product} <br />\n                          </div>\n                        ))} \n                  </div>    \n\n                  <button className=\"btn-addToCard\" style={{ marginBottom: \"20px\"}}>Add to Cart</button>\n                  <TextSlider instructionData={mealPrep} value={value} />\n                </div>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n        <div id ={value.name}>\n          <button\n            className = \"detail-step-btn\"\n            style={{ backgroundColor: \"orange\"}}\n            key={value.id+value.label} onClick={this.openModal}>\n              See Full Recipe\n          </button>\n        </div>\n      </>\n    );\n  }\n}\nexport default MyModal;\n","import React, { Component } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport no_mealImg from '../../../assets/images/no_meal_step_image.png';\n// import \"./WithScrollbar.scss\";\n\nexport default class WithScrollbar extends Component {\n  constructor() {\n    super();\n\n    // this.state = {  width: 0 };\n    // window.addEventListener(\"resize\", this.update);\n  }\n\n  // update = () => {\n  //   this.setState({  width: window.innerWidth });\n  //   let count = 1;\n  //   if (this.state.width > 1200) count = 4;\n  //   else if(this.state.width > 1000 && this.state.width < 1200) count = 3;\n  //   else if(this.state.width > 800 && this.state.width < 1000) count = 2;\n\n  //   if(this.props.products === null && this.state.width > 800) count = 4;\n  //   else if(this.props.products.length < 4 && this.state.width > 800) count = 4; //Math.min(count, this.props.products.length);\n  // };\n\n  render() {\n    let col_count = this.props.col_count;\n\n    return (\n        <Carousel className=\"withScroll_slider\" showThumbs={false} infiniteLoop={false} selectedItem = { parseInt(this.props.products.length /2) } centerMode={true} centerSlidePercentage={100 / (1.4*col_count)}>\n          {this.props.products.map((ingredient, index) => (\n            <div key={index}>                    \n                <img src={ingredient.image!==\"\"? ingredient.image: no_mealImg} alt={ingredient.ingredient} height=\"200px\" width=\"auto\"/>\n                <p style={{fontSize:\"20px\"}}>{ingredient.ingredient}</p>\n            </div>\n          ))}\n            \n        </Carousel>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport MyModal from \"./Mymodal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\";\n// import \"./MealsPage.scoped.scss\";\nimport { Row } from 'react-bootstrap';\nimport axios from '../../util/Api';\nimport { S3Client, ListObjectsCommand } from \"@aws-sdk/client-s3\";\n\n//No need to Initialize the Amazon Cognito credentials provider\n// Because this loads all AWS libraries and we can simply connect to s3 as below\n// AWS.config.region = 'us-west-1'; // Region\n// AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n//     IdentityPoolId: 'us-west-1:4aa53863-5b7b-484c-8474-b95bc4710bbf',\n// });\n\n/**\n * We still want to create a new template that will allow for individual retrieval of images as neccessary for vsm admin, vsm users and meals page.\n */\n\n// Load the required clients and packages for aws js sdk client side \nconst { CognitoIdentityClient } = require(\"@aws-sdk/client-cognito-identity\");\nconst {\n  fromCognitoIdentityPool,\n} = require(\"@aws-sdk/credential-provider-cognito-identity\");\n\n\n// Initialize the Amazon Cognito credentials provider\nconst REGION = \"us-west-1\"; //e.g., 'us-east-1'\nconst s3 = new S3Client({\n  region: REGION,\n  credentials: fromCognitoIdentityPool({\n    client: new CognitoIdentityClient({ region: REGION }),\n    identityPoolId: \"us-west-1:4aa53863-5b7b-484c-8474-b95bc4710bbf\", // IDENTITY_POOL_ID e.g., eu-west-1:xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxx\n  }),\n});\n\nclass VSMealsPage extends Component {\n  // Mongo\n  entries;\n\n  constructor(props) {\n    super(props);\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      selectedCard_mealData: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n\n      mealList:null,\n      col_count:1\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    this.update();\n};\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onClickMealCard = ( i, col_count )=>{\n    if(i === this.state.selected_index) this.setState({slider_flag: !this.state.slider_flag})\n    else this.setState({slider_flag: true})\n\n    this.setState({ selected_index: i});\n    this.setState({ selectedCard_mealData: this.state.products[i]});\n    this.setState({ modalIsOpen: true });  \n    this.setState({ firstPart_ind: (parseInt((i )/ col_count)+1)*col_count});   \n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  setMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: true});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  removeMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: false});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onhandleLoadMore = () => {\n    let count = this.state.currentMealCount;\n    if(count>= this.state.products.length)   this.setState({currentMealCount: this.state.products.length});\n    else this.setState({currentMealCount: count + 10 });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  update = () => {\n    let col_count = 1;\n    if (window.innerWidth > 1200) col_count = 4;\n    else if(window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;\n    else if(window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n\n    if(this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4;\n    // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n    this.setState({col_count: col_count});\n  };\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const {selectedCard_mealData} = this.state;\n    const items = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount);\n\n    if(this.state.products.length>0){\n      // Meal Cards displayed before selected card\n      for (let i = 0; i< Math.min(count, this.state.firstPart_ind); i+= this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= Math.min(count, this.state.firstPart_ind)) break;\n          const value = this.state.products[i+j];  \n          tmp_item.push(\n            <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n            <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n              <div style={containerStyle}>\n                <div style={{ textAlign:\"center\" }}>\n                  <img src={value.mealImage} className=\"images\" style={{ width: \"200px\", height: \"200px\" }} alt=\"/\"></img>\n                </div>\n                <div>\n                  <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                  <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                  <span style={{ color: \"black\" }}></span>\n                </div>              \n              </div>\n            </div>\n          </div>\n          )\n        }\n\n        items.push(\n          <Row key={i}> {tmp_item}</Row>\n        )\n      }\n\n      // Meal card for selected card ONLY including Selected Card ingredient images on display\n      if(selectedCard_mealData && this.state.slider_flag){\n        items.push(\n          <Row key={Math.min(count, this.state.firstPart_ind)}>\n            <div className=\"col-sm-12\" style={{background:\"#ffffff\"}} key=\"1000001\">\n              <div style={{width: \"95%\", margin:\"auto\"}}>\n                <div className =\"detail-card-explain\" id={selectedCard_mealData._id} >\n                    <div style={{fontSize:\"18px\", paddingTop:\"20px\", paddingBottom:\"20px\"}}>{selectedCard_mealData.intro}\n                    </div>\n                  </div>\n\n                  <div id={selectedCard_mealData._id + \"products\"}>                  \n                    <WithScrollbar products={selectedCard_mealData.product_slider} col_count={this.state.col_count}/>\n                  </div>\n\n                  <MyModal \n                    value={selectedCard_mealData}\n                    mealPrep={selectedCard_mealData.instructions}\n                    ingredientsList={selectedCard_mealData.newer_ingredient_format }\n                    func_setMealFlag = {this.setMealSliderModal}\n                    func_removeMealFlag = {this.removeMealSliderModal}\n                  />\n                </div>\n            </div>\n          </Row>\n        )\n      }\n     \n      // Meal Cards displayed after selected card\n      for (let i = Math.min(count, this.state.firstPart_ind); i< count; i+=this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= count) break;\n            const value = this.state.products[i+j];   \n            tmp_item.push(\n              <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n                <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n                  <div style={containerStyle}>\n                    <div style={{ textAlign:\"center\" }}>\n                      <img\n                        src={value.mealImage}\n                        className=\"images\"\n                        style={{ width: \"200px\", height: \"200px\" }}\n                        alt=\"/\"\n                      ></img>\n                    </div>\n                    <div>\n                      <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                      <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                      <span style={{ color: \"black\" }}></span>\n                    </div>              \n                  </div>\n\n                </div>\n              </div>\n            )\n        }\n       \n        items.push(\n          <Row key={i+1}>{tmp_item}</Row>\n        );\n      }\n    }\n    else{\n      console.log(\"Open space to code in here\");\n      items.push(<div id = 'viewer'> </div>);\n    }\n\n\n    /**\n     * s3 logic to call amazon\n     * \n     */\n    // A utility function to create HTML.\nfunction getHtml(template) {\n  return template.join(\"\\n\");\n}\n// Make the getHTML function available to the browser\nwindow.getHTML = getHtml;\n\n// List the photo albums that exist in the bucket\nvar albumBucketName = \"chopchowmeals\"; //BUCKET_NAME\nconst listMeals = async () => {\n  try {\n    const data = await s3.send(\n      new ListObjectsCommand({ Bucket: albumBucketName, MaxKeys:1 })\n    );\n\n      var productsList = data;\n      var numberOfsuggestedMealsToDisplay = productsList.Contents.length;\n      if(productsList && numberOfsuggestedMealsToDisplay !== 0){\n        console.log(\"suggested meals do return with length of:\");\n        console.log(numberOfsuggestedMealsToDisplay);\n        let products = [];\n\n        var href = \"https://s3.\" + REGION + \".amazonaws.com/\";\n        var bucketUrl = href + albumBucketName + \"/\";\n        var photos = data.Contents.map(function (photo) {\n          // var photoKey = photo.Key;\n          // var photoUrl = bucketUrl + encodeURIComponent(photoKey);\n          return getHtml([\n            \"<span>\",\n            \"<div>\",\n            \"<br/>\",\n            '<img style=\"width:128px;height:128px;\" src=\"' + bucketUrl + photo.Key + '\"/>',\n            \"</div>\",\n            \"<div>\",\n            // \"<span>\",\n            // photoKey.replace(albumPhotosKey, \"\"),\n            // \"</span>\",\n            \"</div>\",\n            \"</span>\",\n          ]);\n        });\n        var message = photos.length\n          ? \"<p>The following photos are present.</p>\"\n          : \"<p>There are no photos in this album.</p>\";\n        var htmlTemplate = [\n          \"<div>\",\n          '<button onclick=\"listAlbums()\">',\n          \"Back To albums\",\n          \"</button>\",\n          \"</div>\",\n          // \"<h2>\",\n          // \"Album: \" + albumName,\n          // \"</h2>\",\n          message,\n          \"<div>\",\n          getHtml(photos),\n          \"</div>\",\n          // \"<h2>\",\n          // \"End of album: \" + albumName,\n          // \"</h2>\",\n          \"<div>\",\n          '<button onclick=\"listAlbums()\">',\n          \"Back To albums\",\n          \"</button>\",\n          \"</div>\",\n        ];\n        document.getElementById(\"viewer\").innerHTML = getHtml(htmlTemplate);\n        document\n          .getElementsByTagName(\"img\")[0]\n          .setAttribute(\"style\", \"display:none;\");\n    \n      }\n      else{\n        console.log(\"shows products do not return\");\n      }\n  console.log(data);\n} catch (err) {\n  return alert(\"There was an error listing your meals: \" + err.message);\n}\n};\nlistMeals();\n// Make the listMeals function available to the browser\nwindow.listMeals = listMeals;\n\n    \n    return (\n      <div className=\"meals-Page\">\n        <div id=\"title\" className=\"meal-title\"> <b>Meals</b> </div>\n        <div className=\"mealPage-container\">\n            {items}        \n        </div>\n        <section className=\"loadmore-section\">\n          <button className=\"btn-loadmore\" onClick={()=>this.onhandleLoadMore()}>Load More</button>\n        </section>\n      </div>\n    )\n  };\n}\n\nexport default VSMealsPage;\n\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};\n","import React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\n\nclass ProductSection extends Component {\nstoreCollection = []\n\nconstructor(props) {\n    super(props);\n    this.state = {\n      store_products_fetched : false\n    };\n  }\n\ncomponentDidMount(){\n    console.log(\"Comes in product pages component will mount\")\n    var url = \"https://chopchowdev.herokuapp.com/get_store_products\" // for production\n    // var url = \"http://localhost:5000/get_store_products\"\n\n     fetch(url)\n        .then(res => res.text())\n        .then(body => {\n            var storeList = JSON.parse(body);\n             for(var i = 0 ; i < storeList.length; i++){\n                console.log(\"Inner fetch loop\");\n                console.log(storeList[i]);\n                this.storeCollection.push(storeList[i]);\n                console.log(storeList[i].store_name)\n            }\n\n            this.setState({store_products_fetched:true});\n\n\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n        console.log(\"reaches end of product pages component will mount\");\n}\n\n        render() {\n            var store_products = []\n            console.log(this.storeCollection);\n            for (const  [index, value] of this.storeCollection.entries()){\n                var productsMenu = []\n                // use index to remove warning \n                console.log(index);\n                // console.log(value);\n\n                for (const [storeProductsIndex, productValue] of value.products.entries()) {\n                    console.log(\"Inner for loop\");\n                    //const element = array[index];\n                    console.log(storeProductsIndex);\n                    console.log(productValue.product_name);\n\n                    //productsMenu.push(productValue.product_name)\n                    var key = value.store_name+productValue.product_name\n                    productsMenu.push(\n                        <div className=\"col-sm-12 col-md-6 col-lg-4 mealContainer\"  key = {key} >\n                            <div>\n                                <div style={containerStyle}> \n                                    <Popup trigger={\n                                        <div id = {productValue.id} style={containerStyle}>\n                                            <img src={productValue.product_image} className=\"images\" style={{width:\"100%\"}} alt={productValue.id}></img>\n                                            <div id=\"textbox\">\n                                                <p className=\"alignleft\">{productValue.product_name}</p>\n                                                <p className=\"alignright\"  style={{color: \"green\"}}>${productValue.product_price}</p>\n                                            </div> \n                                        </div> \n                                    } modal closeOnDocumentClick contentStyle={contentStyle}>\n                                        {/* Inside Pop - up */}\n                                        <div>\n                                            {productValue.product_name}\n                                            <br></br>\n                                            Availability\n                                        </div>\n\n                                        <div className=\"container\">\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-6\"><b>\n                                                <img src={productValue.product_image} alt='info' style={{ width:\"100%\", height:\"100%\", align:\"center\"}}></img>\n\n                                                    </b>\n                                                </div> \n                                                <div className=\"col-sm-6\"><b>\n                                                    Availabile<br></br>\n                                                    Variations:<br></br>\n                                                    Price:\n                                                    </b>\n                                                </div> \n                                            </div>\n                                        </div>\n\n                                        <span>View Product</span>&nbsp;|&nbsp;<span>Update Product</span>&nbsp;|&nbsp;<span>Add To Cart..</span>\n                                        <hr></hr>\n                                    </Popup>\n                                </div>\n                            </div>\n                        </div>\n                    )\n\n                }\n\n                store_products.push(\n                    <div key={value.store_name}>\n                        <hr></hr>\n                        <img src={value.store_image} className=\"images\" style={{width:\"10%\"}} alt={value.id}></img>\n                        <b>{value.store_name}</b>\n\n                            <br></br>\n                        <div className=\"container\">\n                            \n                           <div className=\"row \">\n                           {productsMenu}\n                           </div>\n                       </div>\n                        <hr></hr>\n                    </div>\n                )\n\n\n            }\n\n\n\n            return (\n                <div>                    \n                    <div id=\"title\"><b>Our Products</b></div>\n                    {store_products}\n                </div>\n            );\n        }\n}\n\nconst containerStyle = {\n    //font: \"50px\",\n    display: \"inline-block\",\n    width: \"100%\",\n    height: \"100%\",\n    \n}\n\nconst contentStyle = {\n    // borderRadius: \"25px\",\n    maxWidth: \"100vw\",\n    maxHeight: \"100vh\",\n    overflow: \"scroll\"\n    // width: \"90%\",\n    // height: \"50%\",\n    \n    };\n\n    // storeCollection = [\n    //     {\n    //         store_name: \"Lizy Gidy\",\n    //         store_image: '/images/store_pics/lizy_gidy.jpg',\n    //         products:[{\n    //             product_name: \"Garri\",\n    //             product_image: '/images/products/garri.jpg',\n    //             product_price: 8.99,\n    //             variations:[\"Ijebu Garri\", \"Ghana Garri\",\"Yellow Garri\"],\n    //             sizes:[\"50lbs\"]\n    //         },{\n    //         product_name:\"Palm Oil\",\n    //         product_image: '/images/products/ola_ola_palm_oil.jpg',\n    //         product_price: 8.99,\n    //         sizes:[\"64 oz\",\"32 oz\",\"17.6 choleterol free\", \"35.2\",\"105.60\"],\n    //         respective_prices:[ 19.99,10.99,7.99,13.99,29.00]\n    //         },{\n    //         product_name:\"Beans\",\n    //         product_image: '/images/products/beans.jpeg',\n    //         product_price: 12.00,\n    //         variations:[\"Brown Beans\",\"Honey Beans\"],\n    //         sizes:[\"2 lbs\"],\n    //         price_per_ounce: 3.2\n    //         }\n    //     ]},\n    //     {\n    //         store_name:\"African Carribean Market\",\n    //         store_image: '/images/store_pics/african_carribean_storefront_people.jpg',\n    //         products:[{\n    //             product_name:\"Palm Oil\",\n    //             product_image: '/images/products/ola_ola_palm_oil.jpg',\n    //             product_price: 8.99,\n    //             variations:[\"Ola-Ola Palm Oil\",\"Omni Red Palm Oil 100% unrefined\"],\n    //             sizes:[\"1.32 Gallons\",\"0.9 Gallons\",\"50lbs\" ],\n    //             price_per_gallon: 3.00,\n    //             price_per_pound: 0.30\n    \n    //         },{\n    //             product_name:\"Beans\",\n    //             product_image: '/images/products/beans.jpg',\n    //             product_price: 2.25,\n    //             variations:[ \"Black Eyes Peas\",\"Whole Green Peas\",\"Pinto Beans\",\"Red Kidney Beans\",\"Large Lime Beans\"],\n    //             sizes: \"0.5 L\"       \n    //         },{\n    //             product_name:\"Egusi\",\n    //             product_image: '/images/products/egusi.jpg',\n    //             product_price: 9.95,\n    //             sizes:\"5 Lbs\"\n    //         },{\n    //         product_name:\"Garri\",\n    //         product_image: '/images/products/garri.jpg',\n    //         product_price: 8.99,\n    //         variations:[\"Ijebu Garri\",\"Ghana Garri\",\"Yellow Garri\"],\n    //         sizes:\"50lbs\"\n    //         }]\n    //     }     \n    // ]\n\n\nexport default ProductSection;","import React from \"react\";\nimport \"./style.css\";\nimport { Form, Button, Container, Modal, Row, Col } from \"react-bootstrap\";\n// import Axios from \"axios\";\nimport { connect } from 'react-redux';\nimport { userSignIn } from '../../actions';\nimport { withRouter } from \"react-router-dom\";\n\n///////////////////////////////////////////////////////////////////////////////////\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      messageErr: false,\n      messageSuccess: false,\n      dialogue_open_flag: true\n    };\n  }\n\n///////////////////////////////////////////////////////////////////////////////////\n  handleChange = ({ target: { value, name } }) => this.setState({ [name]: value });\n\n///////////////////////////////////////////////////////////////////////////////////\n  handleClose = () => this.setState({dialogue_open_flag: false});\n\n  componentWillReceiveProps(nextProps){\n    const { openFlag } = nextProps;\n    this.setState({dialogue_open_flag: openFlag});\n\n    if (nextProps.authUser && nextProps.customer_id) {\n        this.props.history.push('/grocery');\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  render() {\n    const { email, password} = this.state;    \n    return (      \n      <Container>\n            <Modal show={this.state.dialogue_open_flag} onHide={this.handleClose} className=\"text-center custom-card1\" backdrop=\"static\" size=\"lg\" centered>\n            <Modal.Header closeButton>\n              <Modal.Title className=\"text-center\" >Log In to View your Grocery List</Modal.Title>\n            </Modal.Header>\n              <Modal.Body>\n                <Row>\n                  <Col md={5}>\n                    <Button className=\"fb-btn mb-3 px-3 py-2\">Login In with Facebook</Button>\n                    <Button className=\"google-btn px-3 py-2\">Login In with Google</Button>\n                  </Col>\n                  <Col md={1} className=\"or\">or</Col>\n                  <Col md={6} className=\"d-block right-panel\">\n                    <Form>\n                      <Form.Control \n                        type=\"text\" name=\"email\" value={email} placeholder=\"Your Email or Username\" \n                        onChange={this.handleChange}\n                        className=\"login__form__input1\" autoComplete=\"username\"\n                      />\n                      <Form.Control \n                        type=\"password\" name=\"password\"\n                        value={password} placeholder=\"Your password\"\n                        onChange={this.handleChange}\n                        className=\"login__form__input\" autoComplete=\"current-password\"\n                        />\n                      <Form.Label className=\"lbl_text text-left\" column md={12}><a className=\"forget\" href=\"/forgotpass\">Forgot Password?</a></Form.Label>\n                      <Button variant=\"primary\" className=\"mb-1 float-left login-button\" \n                        onClick={(ev) => {\n                            ev.preventDefault();\n                            this.props.userSignIn({ email: this.state.email, password: this.state.password });\n                        }}>Login</Button>\n\n                      <Form.Label className=\"lbl_text mt-4 text-right pb-0\" column md={12}>\n                        Don't have an account? <a className=\"signup\" href=\"/signup\">Sign Up</a>\n                      </Form.Label>\n                      <Form.Label className=\"lbl_text text-right pt-0\" column md={12}>\n                        or <a className=\"continue\" href=\"/v2\">continue as guest</a>\n                      </Form.Label>\n                    </Form>\n                  </Col>\n                </Row>\n              </Modal.Body>\n            </Modal>        \n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth, commonData }) => {\n  const { authUser, role, customer_id } = auth;\n  const {status }  = commonData;\n  return { authUser, role, customer_id, status }\n};\n\nconst mapDispatchToProps = { userSignIn };\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\n","import {\n    FETCH_ERROR,\n    FETCH_START,\n    FETCH_SUCCESS,\n    INIT_URL,\n    SIGNOUT_USER_SUCCESS,\n    USER_DATA,\n    USER_TOKEN_SET,\n    USER_ROLE,\n    CUSTOMER_ID,\n} from \"../constants/ActionTypes\";\nimport axios from '../util/Api';\n\nexport const setInitUrl = (url) => {\n    return {\n        type: INIT_URL,\n        payload: url\n    };\n};\n\nexport const userSignUp = ({ name, email, password }) => {\n    console.log(name, email, password);\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.post('/register', {\n            name: name,\n            email: email,\n            password: password\n        }\n        ).then(({ data }) => {\n            console.log(\"__ SignUp api res __ : \", data);\n            localStorage.setItem(\"token\", JSON.stringify(data.token));\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: USER_TOKEN_SET, payload: data.token });\n            dispatch({ type: USER_ROLE, payload: data.role });\n            // dispatch({ type: USER_DATA, payload: data.user });\n            // dispatch({ type: CUSTOMER_ID, payload: data.customerID });\n        }).catch(err => {\n            console.error(\"xxx userSignUp Request ERROR xxx\");\n            console.log(err.response.status);\n            if (err.response.status === 422) {\n                dispatch({ type: FETCH_ERROR, payload: \"Email address was already taken. If you are owner, please proceed to login with this email.\" });\n            }\n        });\n    }\n};\n\nexport const userSignIn = ({ email, password }) => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        dispatch({ type: USER_TOKEN_SET, payload: null });\n        dispatch({ type: USER_DATA, payload: null });\n        axios.post('/login', {\n            email: email,\n            password: password,\n        }\n        ).then(({ data }) => {\n            console.log(\" ___ userSignIn RESPONSE ___ \", data);\n            localStorage.setItem(\"userToken\", data.token);\n            localStorage.setItem(\"userRole\", data.role);\n\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: USER_TOKEN_SET, payload: data.token });\n            dispatch({ type: USER_ROLE, payload: data.role });\n            // dispatch({ type: USER_DATA, payload: data.username });\n            // dispatch({ type: CUSTOMER_ID, payload: data.customerID });\n            console.log(\" ___ userSignIn customerID \", data.customerID);\n\n        }).catch(err => {\n            console.error(\"xxx userSignIn Request ERROR xxx\", err);\n            dispatch({ type: FETCH_ERROR, payload: \"Error during user sign in request\" });\n        });\n    }\n};\n\nexport const getUser = () => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.get('/authenticate-app-page',\n        ).then(({ data }) => {\n            console.log(\" ___ getUser RESPONSE ___ \", data);\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: USER_DATA, payload: data.username });\n            dispatch({ type: CUSTOMER_ID, payload: data.data });\n\n        }).catch(err => {\n            console.error(\"xxx getUser Request ERROR xxx\", err);\n            dispatch({ type: FETCH_ERROR, payload: \"Error during get me request with this token\" });\n            dispatch({ type: SIGNOUT_USER_SUCCESS });\n        });\n    }\n};\n\nexport const changePassword = (payload) => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.post('/change-password', payload).then(({ data }) => {\n            console.log(\" Change Password API RES ->> \", data);\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n            dispatch({ type: FETCH_SUCCESS, payload: \"Password was changed successfully.\" });\n            dispatch({ type: USER_TOKEN_SET, payload: data.token });\n            dispatch({ type: USER_DATA, payload: data.user });\n        }).catch(err => {\n            console.error(\"xxx changePassword Request ERROR xxx\", err.response);\n            dispatch({ type: FETCH_ERROR, payload: \"Password is not matched\" });\n        });\n    }\n};\n\nexport const cancelSubscription = () => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.get('/unsubscribe').then(({ data }) => {\n            console.log(\" Unsubscrieb API RES ->> \", data);\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + data.token;\n            dispatch({ type: FETCH_SUCCESS, payload: \"Subscription was cancelled successfully.\" });\n            dispatch({ type: USER_TOKEN_SET, payload: data.token });\n            dispatch({ type: USER_DATA, payload: data.user });\n        }).catch(err => {\n            console.error(\"xxx cancel subscription Request ERROR xxx\", err.response);\n            dispatch({ type: FETCH_ERROR, payload: \"Error during cancel subscription request.\" });\n        });\n    }\n}\nexport const userSignOut = () => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.get('/logout',\n        ).then(({ data }) => {\n            localStorage.removeItem(\"token\");\n            dispatch({ type: FETCH_SUCCESS });\n            dispatch({ type: SIGNOUT_USER_SUCCESS });\n        }).catch(err => {\n            console.error(\"xxx userSignOut Request ERROR xxx\", err);\n            dispatch({ type: FETCH_ERROR, payload: \"Error during user sign out request\" });\n        });\n    }\n};\n\nexport const resendEmail = () => {\n    return (dispatch) => {\n        dispatch({ type: FETCH_START });\n        axios.get('/email/resend')\n            .then(({ data }) => {\n                console.log(\" resend email api success: \", data.message)\n                dispatch({ type: FETCH_SUCCESS, payload: data.message });\n            })\n            .catch(err => {\n                console.error(\"xxx resendEmail Request ERROR xxx\", err);\n                dispatch({ type: FETCH_ERROR, payload: \"Error during request to resend email\" });\n            });\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n    \nexport default function PageTitle(props) {\n  const { title } = props;\n  return <h2 className=\"pageTitle\">{title}</h2>;\n}\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n","import React from 'react';\n// import './ProductModal.scss';\nimport {  Row, Col} from \"react-bootstrap\";\nimport { withRouter } from 'react-router-dom';\n\nclass ProductModal extends React.Component {\n    gotoViewPage = (customerId, productID) => {\n        const url = `/product-detail/${customerId}/${productID}`;\n        this.props.history.push(url);\n    }\n    render() {\n        const { product_img, product_name, productID, customerId} = this.props.state;\n        return (\n            <div style={{\n                position: \"fixed\",\n                top: \"0px\",\n                left: \"0px\",\n                width: \"100vw\",\n                height: \"100vh\",\n                backgroundColor: \"rgba(255,255,255,0.6)\",\n                zIndex: \"9999\"\n            }}>\n                <div style={{ display: \"flex\", height: \"100%\" }}>\n                    <div className=\"product-detail-modal\">\n                        <div className=\"product-detail-panel\">\n                            <div className=\"close-btn\" style={{ fontSize: \"12px\", textAlign: \"right\" }}  onClick={this.props.onCloseClicked}>\n                                <i className=\"fa fa-remove\"></i>\n                            </div>\n                            <Row>\n                                <Col md={6} style={{ textAlign: \"center\" }}>\n                                    <img src={product_img} width=\"100%\" className=\"product-img\" alt=\"\"/>\n                                </Col>\n                                <Col md={6}>\n                                    <div className=\"detail-info-panel\" style={{ marginLeft: \"10px\", marginRight: \"20px\" }}>\n                                        <div className=\"product-name\">{product_name}</div>\n                                        <div className=\"product-name-descript\">Description Lorem Ipsum Dolor Sit Amet</div>\n                                        <div className=\"product-size-panel\">\n                                            <div className=\"product-info\" >\n                                                <div className=\"product-size-item\">32 oz tub (Medium)-$9.99</div>\n                                                <div className=\"product-size-place\">from Lizi Gidi Market</div>\n                                            </div>\n                                            <div>\n                                                <input type=\"text\" className=\"product-count\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"product-size-panel\">\n                                            <div className=\"product-info\" >\n                                                <div className=\"product-size-item\">32 oz tub (Medium)-$9.99</div>\n                                                <div className=\"product-size-place\">from Lizi Gidi Market</div>\n                                            </div>\n                                            <div>\n                                                <input type=\"text\" className=\"product-count\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"product-price-panel\">\n                                            <div className=\"price-item\">Delivery (select one):</div>\n                                            <div className=\"price-value\"><a href=\"/\">Next Day Delivery</a> - $10.00</div>\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"btn-panel\">\n                                <Col md={6} style={{ textAlign: \"center\" }}>\n                                    <button className=\"product-btn\"  onClick={() => this.gotoViewPage(customerId, productID)} >View Item</button>\n                                </Col>\n                                <Col md={6} style={{ textAlign: \"center\" }}>\n                                    <button className=\"product-btn\">Add To Card</button>\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default withRouter(ProductModal);\n","import React from \"react\";\nimport \"./style.css\";\nimport PageTitle from \"../CommonComponents/PageTitle\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Container, Alert, Card, Col, Row, Button } from \"react-bootstrap\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport ProductDetail from './ProductDetail/ProductModal'\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport axios from '../../util/Api';\n\n//////////////////////////////////////////////////////////////////////\nclass GroceryPage extends React.Component {\n  // Mongo\n  _isMounted = false;\n  products = [];\n  productNamesForTypeahead = new Map();\n\n  state = {\n    customerList: null,\n    Authentication: false,\n    customerId: null,\n    email: \"\",\n    password: \"\",\n\n    messageErr: false,\n    messageSuccess: false,\n    messageErrCreate: false,\n    showAlert: false,\n    messageAlert: \"\",\n\n    variant: \"\",\n    productID: \"\",\n    deletedItemId: null,\n    selectedProduct: null,\n    idsItems: null,\n    deletedItemsId: null,\n    lasIdListState: null,\n    valueProductName: \"\",\n    valueProductImage: \"\",\n    valueProductPrice: \"\",\n    valueProductSize: \"\",\n    valuePricePerOunce: \"\",\n    errormsg: \"\",\n    typeAheadAdded: false,\n\n    product_img: null,\n    product_name:\"\",\n    product_modal_flg :false,\n  };\n\n  //////////////////////////////////////////////////////////////////////\n  handleChange = ({ target: { value, name } }) =>\n    this.setState({ [name]: value });\n\n  //////////////////////////////////////////////////////////////////////\n  handleProductClick = (_img, _name,productID, flag) =>{\n    if(flag){\n      this.setState({ product_img: `/images/products/${_img}`, product_name: _name, product_modal_flg:true , productID: productID});\n    }else{\n      this.setState({ product_img: _img, product_name: _name , product_modal_flg:true, productID: productID});\n    }\n  }\n  onCloseClicked = () => {\n    this.setState({ product_modal_flg: false });\n  }\n\n//////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      const { authUser, customer_id } = this.props;\n      this.setState({ Authentication: authUser });\n      this.setState({ customerId: customer_id });\n      this.getCustomerList(customer_id);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  componentWillReceiveProps(nextProps) {\n    // checks if user is already logged in in app.\n    const { authUser, customer_id } = nextProps;\n    this.setState({ Authentication: authUser });\n\n    if (authUser !== null) {\n      this.setState({ customerId: customer_id });\n      this.getCustomerList(customer_id);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  getCustomerList = (customerId) => {\n    var url = `/getCustomerGroceryList/${customerId}`;\n    // var url = `http://localhost:5000/api/getCustomerGroceryList/${customerId}`\n    // var url = `https://chopchowdev.herokuapp.com/api/getCustomerGroceryList/${customerId}`;\n    axios(url)\n      .then(({data}) => {\n        this.setState({ customerList: data.data });\n      })      \n      .catch(() => {\n        this.setState(\n          {\n            messageAlert:\"Authentication Error while fetching your grocery list...\",\n            showAlert: true,\n            variant: \"danger\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 8000)\n        );\n      });    \n  };\n\n  //////////////////////////////////////////////////////////////////////\n  handleShowDeleteItem = (productID) => {\n    this.setState({ deletedItemId: productID });\n    const { customerId, deletedItemId } = this.state;\n    // var url = `https://chopchowdev.herokuapp.com/api/remove-item/${productID}/${customerId}`\n    var url = `./api/remove-item/${productID}/${customerId}`;\n\n    fetch(url, {\n      method: \"DELETE\",\n      // headers: {\n      //   Accept: 'application/json',\n      //   'Content-Type': 'application/json',\n      // },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((response) => {\n        this.setState(\n          {\n            messageAlert: \"deleted successfully\",\n            showAlert: true,\n            variant: \"success\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 3500)\n        );\n        this.setState((prevState) => {\n          // delete item on client side\n          const newValueData = prevState.customerList.filter(\n            // do we need catch sttmnt for filter\n            (item) => item.id !== deletedItemId\n          );\n          return { customerList: newValueData };\n        });\n        console.log(\"Delets item\");\n        this.componentDidMount();\n      })\n      .catch(() => {\n        this.setState(\n          {\n            messageAlert: \"Internal Server Error while deleting item\",\n            showAlert: true,\n            variant: \"danger\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 8000)\n        );\n      });\n  };\n\n  //////////////////////////////////////////////////////////////////////\n  handleDeleteList = () => {\n    console.log(\"Comes in deletes list\");\n    const { customerId } = this.state;\n    var url = `https://chopchowdev.herokuapp.com/api/remove-list/${customerId}`;\n    // var url = `./api/remove-list/${customerId}`\n\n    fetch(url, {\n      method: \"DELETE\",\n      // headers: {\n      //   'Content-Type': 'application/json',\n      // }\n    })\n      .then((response) => {\n        console.log(\"delete response is: \");\n        console.log(response);\n        console.log(response.json);\n        this.setState(\n          {\n            messageAlert: \"deleted successfully\",\n            showAlert: true,\n            variant: \"success\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 3500)\n        );\n\n        this.setState({ customerList: [] });\n        this.componentDidMount();\n        console.log(\"deletes list\");\n        return response.json();\n      })\n      .catch(() => {\n        console.log(\"caught an error while deleting list\");\n        this.setState(\n          {\n            messageAlert: \"Internal Server Error while deleting list\",\n            showAlert: true,\n            variant: \"danger\",\n          },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: \"\", showAlert: false });\n            }, 8000)\n        );\n      });\n  };\n\n  //////////////////////////////////////////////////////////////////////\n  handleClickTypeahead = (selected) => {\n    this.setState({ selectedProduct: selected });\n    // var arrayOfProductNames = Array.from(this.productNamesForTypeahead.keys());\n    this.productNamesForTypeahead.get(selected);\n\n    // var index = arrayOfProductNames.findIndex((el) => el === selected[0]);\n    var productID = this.productNamesForTypeahead.get(selected[0]);\n    console.log(\"productID is: \" + productID);\n    console.log(\"customer id is: \" + this.state.customerId);\n    if (!isNaN(productID)) {\n      // var url = `https://chopchowdev.herokuapp.com/api/addTypeaheadDataToCustomerGroceryList/${productID}/${this.state.customerId}`\n      var url = `./api/addTypeaheadDataToCustomerGroceryList/${productID}/${this.state.customerId}`;\n      fetch(url, {\n        method: \"POST\",\n      }).then((response) => {\n        if (response) {\n          this.setState(\n            {\n              messageAlert: \"product added successfully\",\n              showAlert: true,\n              variant: \"success\",\n            },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: \"\", showAlert: false });\n              }, 3500)\n          );\n          console.log(\"Comes in handleClickTypeahead's then on client side\");\n          this.componentDidMount();\n        }\n      });\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////\n  render() {\n    const { showAlert, variant, messageAlert, customerList } = this.state;\n\n    console.log(\"Authentication, \", this.state.Authentication);\n    console.log(\"customerId, \", this.state.customerId);\n    console.log(\"customerList, \", this.state.customerList);\n\n    console.log(\"Props:\", this.props)\n  \n\n    return (\n      <>\n        <Typeahead\n          // multiple\n          options={Array.from(this.productNamesForTypeahead.keys())}\n          placeholder=\"Add products to your grocery list here..\"\n          id=\"typeahead\"\n          onChange={(selected) => {\n            this.handleClickTypeahead(selected);\n          }}\n        />\n\n        {/* Display alert if there is any issue loading grocery page */}\n        <Alert show={showAlert} key={1} variant={variant}>\n          {messageAlert}\n        </Alert>\n\n\n        <h2>Your Grocery Cart</h2>\n\n\n        {this.state.messageVisible ? (\n          <div>\n            you can not add in this item because it is already in customers\n            grocery list\n          </div>\n        ) : null}\n        {this.state.Authentication ? (\n          <>\n          <PageTitle title=\" Your Grocery List\" />\n            <div>\n              <Button\n                  className=\"yourlist__buttonDeleteList\"\n                  variant=\"danger\"\n                  onClick={(e) => { e.stopPropagation(); this.handleDeleteList();}}>\n                  Delete List Items\n              </Button>\n\n              <br></br>\n              <Container className=\"page__container\" fluid>\n                {/* display grocery list, for any authenticated customer */}\n                {\n                customerList ? (\n                  customerList.map((customer_grocery_product_item) => {\n                    let productID = customer_grocery_product_item.id;\n                    console.log(\"customer_grocery_product_item:\", customer_grocery_product_item.product_image)\n                    return (\n                      // <>\n                      <Row display=\"inline-flex\" key = {customer_grocery_product_item.id} >\n                        <Col key={customer_grocery_product_item.id}>\n                          {/* check for private or public images (can be used for suggest meal) */}\n                          {customer_grocery_product_item.product_image.startsWith('https://') ? (\n                              <img\n                                src={customer_grocery_product_item.product_image}\n                                alt=\"product_img \"\n                                className=\"card-img\"\n                                onClick = {() => this.handleProductClick(customer_grocery_product_item.product_image, customer_grocery_product_item.product_name, productID, false)}\n                              />\n                            ) : (\n                              <img\n                                src={`/images/products/${customer_grocery_product_item.product_image}`}\n                                alt=\"product_img \"\n                                className=\"card-img\"\n                                onClick = {() => this.handleProductClick(customer_grocery_product_item.product_image, customer_grocery_product_item.product_name, productID, true)}\n                              />\n                            )}\n                        </Col>\n\n                        <Col>\n                          <Card.Title className=\"grocery_item_card-header\">\n                            Product Name :{\" \"}\n                            {customer_grocery_product_item.product_name}\n                          </Card.Title>\n                          <Card.Text>\n                            Product Price :{\" \"}\n                            {customer_grocery_product_item &&\n                              customer_grocery_product_item.product_price}\n                            <br></br>\n                            Product Size : {customer_grocery_product_item.sizes}\n                          </Card.Text>\n                        </Col>\n\n                        <Col>\n                          <Button onClick={(e) => { e.stopPropagation(); this.handleAddItemToCart(productID);  }} >\n                            {\" \"}  Add To Cart\n                          </Button>\n                        </Col>\n                        <Col>\n                          <i\n                            className=\"fa fa-remove\"\n                            onClick={(e) => {e.stopPropagation();this.handleShowDeleteItem(\n                                customer_grocery_product_item.id\n                              );\n                            }}\n                          ></i>\n                        </Col>\n                      </Row>\n                    );\n                  })\n                ) : (\n                    \n                    <div> Your grocery cart looks empty.\n                      <Spinner animation=\"border\" variant=\"info\" />\n                    </div>\n                  )}\n              </Container>\n            </div>\n          </>\n        ) : (\n            <>\n              {/* <Login /> */}\n              <div>\n                Log into to view your saved grocery list.\n            </div>\n            </>\n          )}\n\n\n\n        {\n          this.state.product_modal_flg && \n          <ProductDetail state = { this.state } onCloseClicked={this.onCloseClicked} />\n        }\n      </>\n    );\n  }\n}\nconst mapStateToProps = ({ auth }) => {\n  const { authUser, role, customer_id } = auth;\n  return { authUser, role, customer_id }\n};\n\nexport default connect(mapStateToProps, ()=>({}))(withRouter(GroceryPage));","import React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\nimport { setTimeout } from 'timers';\n\nexport default class SignUp extends React.Component {\n  state = {\n    email: '',\n    phone: '',\n    username: '',\n    password: '',\n    messageErr: false,\n    messageSuccess: false,\n    showModal: true,\n    emailNotification: false\n  };\n\n\n  handleChange = (e) => {\n    let name = e.currentTarget.name;\n    let value = e.currentTarget.value;\n    name === \"emailNotification\" ? this.setState({emailNotification: e.currentTarget.checked}) : this.setState({ [name]: value });\n\n  }\n\n\n  handleClose = (delay) => {\n    setTimeout(() => {\n      this.props.history.push('/grocery');\n    }, delay || 0);\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    //validate email\n    let email = this.state.email;\n    if (email !== \"\" && /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/.test(email) ){\n      var [account, address] = email.split('@'); \n      var domainParts = address.split('.');\n\n      if(  email.length < 256 && account.length < 64 && domainParts.some(function (part) {\n        return part.length < 63;\n      })){\n        this.setState({ messageErr: '' });\n\n          this.submitForm();\n      }else{\n        this.setState({ messageErr: 'Please enter a valid email.' });\n      }\n    }\n    else{\n      if((this.state.phone.length >= 10 && this.state.phone.length <=30) && this.state.username && this.state.password) {\n        this.setState({ messageErr: '' });\n\n        this.submitForm();\n      }\n      else{\n        this.setState({ messageErr: 'Please enter a valid phone number or email.' });\n      }\n    }\n  }\n  \n  submitForm = () => {\n    console.log(\"state,\", this.state);\n    var url = 'https://chopchowdev.herokuapp.com/api/signupuser';\n    fetch(url, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    }).then(response => {\n        if (response.status === 400 || response.status === 404) {\n          this.setState({ messageErr: 'Bad Request , Check username or password ...' });\n        } else if (response.status === 401) {\n          this.setState({ messageErr: 'You are unauthorized' });\n        } else if (response.status >= 500) {\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n        } else {\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'You are signed up! ' });\n          this.handleClose(5000);\n        }\n      })\n  };\n\n  render() {\n    return (\n<Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal registerme\" backdrop=\"static\">\n  <Modal.Header closeButton>\n    <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n      <div>Sign Up</div>\n      <span style={{ fontSize: '11pt' }}>Already have an account?  \n      <Link className=\"link-guest-word\" to=\"/login\">Login</Link></span>\n    </Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg>\n          <Form className=\"\" onSubmit={this.formSubmit}>\n            <Form.Group>\n                <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      value={this.state.email}\n                      placeholder=\"Your email\"\n                      onChange={this.handleChange}\n                      autoComplete = \"username\"\n                    />\n                  <Form.Label>Or</Form.Label>\n                <Form.Control\n                      type=\"tel\"\n                      name=\"phone\"\n                      value={this.state.phone}\n                      placeholder=\"Your Phone Number\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <hr/>\n                  <Form.Group>\n                  <Form.Control\n                      type=\"text\"\n                      name=\"username\"\n                      value={this.state.username}\n                      placeholder=\"Username\"\n                      onChange={this.handleChange}\n                      required\n                    />\n                    <Form.Label></Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      placeholder=\"Create a Password\"\n                      onChange={this.handleChange}\n                      autoComplete = \"new-password\"\n                      required\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formHorizontalCheck\">\n                    <Form.Label></Form.Label>\n                    <Form.Check onChange={this.handleChange} name=\"emailNotification\" label=\"Sign Up for Email Notifications\" />\n                  </Form.Group>\n                  <p className=\"msg-success\">{this.state.messageSuccess}</p>\n                  <p className=\"msg-err\">{this.state.messageErr}</p>\n                  <ButtonToolbar>\n                    <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Sign Up</Button>\n                  </ButtonToolbar>\n                  <Link className=\"\" to=\"/signup\">or Sign up as driver</Link>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n\n}\n","import React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\nimport { setTimeout } from 'timers';\n\nexport default class ResetPassword extends React.Component {\n  state = {\n    email: '',\n    username: '',\n    messageErr: false,\n    messageSuccess: false,\n    showModal: true,\n  };\n\n\n  handleChange = (e) => {\n    let name = e.currentTarget.name;\n    let value = e.currentTarget.value;\n    this.setState({ [name]: value });\n  }\n\n\n  handleClose = (delay) => {\n    setTimeout(() => {\n      this.props.history.push('/');\n    }, delay || 0);\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    if((this.state.email || this.state.username)) {\n      this.submitForm();\n    } else {\n      this.setState({ messageErr: 'Please enter correct data.' });\n    }\n  };\n\n  submitForm = () => {\n    fetch('https://chopchowdev.herokuapp.com/api/forgotpass', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    }).then(response => {\n      console.log(response)\n        if (response.status === 400 || response.status === 404) {\n          this.setState({ messageErr: 'Bad Request , Your username or email does not exist.' });\n        } else if (response.status === 401) {\n          this.setState({ messageErr: 'you are UnAuthorized' });\n        } else if (response.status >= 500) {\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n        } else {\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'Please check your inbox for more details! ' });\n          this.handleClose(5000);\n        }\n      })\n  };\n\n  render() {\n\n  return (\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n          <div>Forgot Password</div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg>\n              <Form className=\"\" onSubmit={this.formSubmit}>\n                <Form.Group>\n                    <Form.Control\n                          type=\"text\"\n                          name=\"email\"\n                          value={this.state.email}\n                          placeholder=\"Your email\"\n                          onChange={this.handleChange}\n                        />\n                      <Form.Label>Or</Form.Label>\n                    \n                      </Form.Group>\n                      \n                      <Form.Group>\n                      <Form.Control\n                          type=\"text\"\n                          name=\"username\"\n                          value={this.state.username}\n                          placeholder=\"Username\"\n                          onChange={this.handleChange}\n                        />\n                        <Form.Label></Form.Label>\n                        \n                      </Form.Group>\n                      <Form.Label>We will sent you a link to reset your password.</Form.Label>\n\n                      <p className=\"msg-success\">{this.state.messageSuccess}</p>\n                      <p className=\"msg-err\">{this.state.messageErr}</p>\n                      <ButtonToolbar>\n                        <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Reset</Button>\n                      </ButtonToolbar>\n                      \n                    </Form>\n                  </Col>\n                </Row>\n              </Container>\n            </Modal.Body>\n          </Modal>\n        )\n  }\n\n}\n","import React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\nimport { setTimeout } from 'timers';\n\nexport default class ResetPassword extends React.Component {\n  state = {\n    password1: '',\n    password2: '',\n    messageErr: false,\n    messageSuccess: false,\n    showModal: true,\n  };\n\n\n  handleChange = (e) => {\n    let name = e.currentTarget.name;\n    let value = e.currentTarget.value;\n    this.setState({ [name]: value });\n  }\n\n\n  handleClose = (delay) => {\n    setTimeout(() => {\n      this.props.history.push('/grocery');\n    }, delay || 0);\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    if((this.state.password1 || this.state.password2)) {\n      this.submitForm();\n    } else {\n      this.setState({ messageErr: 'Please enter correct data.' });\n    }\n  };\n\n  submitForm = () => {\n    let token = this.props.location.search.replace('?', '').split('=')[1];\n    let formData = Object.assign({}, this.state, {token})\n    fetch('/api/resetpass', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    }).then(response => {\n        if (response.status === 400 || response.status === 404) {\n          this.setState({ messageErr: 'Bad Request , Check username or email ... !!' });\n        } else if (response.status === 401) {\n          this.setState({ messageErr: 'you are UnAuthorized' });\n        } else if (response.status >= 500) {\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n        } else {\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'Please check your inbox for more details! ' });\n          this.handleClose(5000);\n        }\n      })\n  };\n\n  render() {\n\nlet isItReset = this.props.location.search.replace('?', '').split('=');\nif(isItReset.length > 1) {\n  isItReset = isItReset[1];\n  return (\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n          <div>Reset Password</div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg>\n              <Form className=\"\" onSubmit={this.formSubmit}>\n              <Form.Group>\n              <Form.Control type=\"hidden\" name=\"token\" value={isItReset} />\n                <Form.Control\n                          type=\"password\"\n                          name=\"password1\"\n                          value={this.state.password1}\n                          placeholder=\"New Password\"\n                          onChange={this.handleChange}\n                        />\n                    \n                      </Form.Group>\n                      <Form.Label></Form.Label>\n                      <Form.Group>\n                      <Form.Control\n                          type=\"password\"\n                          name=\"password2\"\n                          value={this.state.password2}\n                          placeholder=\"Retype Password\"\n                          onChange={this.handleChange}\n                        />\n                        <Form.Label></Form.Label>\n                        \n                      </Form.Group>\n                      \n                      <p className=\"msg-success\">{this.state.messageSuccess}</p>\n                      <p className=\"msg-err\">{this.state.messageErr}</p>\n                      <ButtonToolbar>\n                        <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Reset</Button>\n                      </ButtonToolbar>\n                      \n                    </Form>\n                  </Col>\n                </Row>\n              </Container>\n            </Modal.Body>\n          </Modal>\n        );\n} else {\n  return (\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n          <div>Something wrong with yout token please try again.</div>\n        </Modal.Title>\n      </Modal.Header>\n      \n          </Modal>\n        )\n  \n}\n\n\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Carousel,  } from \"react-bootstrap\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./text_slider.css\";\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport no_mealImg from '../src/assets/images/no_meal_step_image.png';\n\nclass MealsPageTextSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      increment: 0,\n      checked: false,\n      base_index: 0,\n      index: 0\n    };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.updateInstructionsDisplayBaseIndex = this.updateInstructionsDisplayBaseIndex.bind(\n      this\n    );\n  }\n\n  handleSelect(selectedIndex) {\n    this.setState({ index: selectedIndex + 1 });\n  }\n\n  updateInstructionsDisplayBaseIndex(event) {\n    console.log(event.target.innerText);\n    var button = event.target.innerText;\n    // var regExp = \"/^w+[ ]/d  $/\";\n    // var slide_index = button.match(regExp);\n    //console.log(slide_index);\n    var last_chars = button.slice(6, 7);\n    var slide_num = Number(last_chars);\n    this.setState({ base_index: slide_num * 3 });\n    //var base_index = slide_num*3;\n    //console.log(\"Updating base index on click to: \" +this.state.base_index);\n  }\n\n  render() {\n    const { instructionData } = this.props;\n \n    // const mealPrep1 = instructionData[0].step;\n    // const meal_background = instructionData[0].image;\n    var carouselSlides = [];\n    var i;\n\n    var count_index = 1;\n    \n    if(instructionData != undefined){\n    for (i = 0; i < instructionData.length ; i++) {\n      const mealPrep1 = instructionData[i].step;\n\n      if(i!==0){\n        count_index += instructionData[i-1].step.length;\n      }\n\n      carouselSlides.push(\n        <Carousel.Item key={i} style={{'height':\"300px\"}} className=\"instruction_slider_page\">\n          <Paper style={{maxHeight: 200, overflow: 'auto'}} className = \"mealPrepChunk\">\n              <List>\n                <div className=\"ml-2\">\n                {\n                  mealPrep1.map((mealItem, index)=>(\n                    <div key={index}>\n                      {index+count_index}. {mealItem} \n                      <p></p> \n                    </div>   \n                  ))\n                }\n                </div>\n                <p/>\n                 <img\n                  className=\"img-responsive imageHeighgt\"\n                  src={instructionData[i].image !==null? instructionData[i].image: no_mealImg}\n                  alt=\"First slide\"\n                  style ={{height:\"auto\", width:\"80%\", marginLeft:\"10%\"}}\n                />\n              </List>\n            </Paper>\n         \n          {/* <Carousel.Caption>\n            \n          </Carousel.Caption> */}\n        </Carousel.Item>\n      )\n    }\n  }\n\n    return (\n\n      <div>\n        <b>Instructions</b>< br></br>\n          <Carousel className=\"instruction-slider\" onSelect={this.handleSelect} interval={null}>          \n            {carouselSlides}\n          </Carousel>\n      </div>\n\n    );\n  }\n}\nexport default MealsPageTextSlider;","import React, { Component } from \"react\";\n// import Modal from \"react-modal\";\n// import HeartCheckbox from 'react-heart-checkbox';\n// import Slider from \"react-animated-slider\";\n// import \"react-animated-slider/build/horizontal.css\";\n// import { Carousel } from 'react-responsive-carousel';\n// import ImagePopup from \"./ImagePopup\";\nimport { Modal } from \"react-bootstrap\";\n// import {Button} from 'react-bootstrap/Button';\nimport MealsPageTextSlider from \"../../MealsPageTextSlider\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\n// import \"./Mymodal.scoped.scss\";\nimport \"../../App.css\";\n\nconst content = [1, 2];\nclass MealsPageModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      increment: 0,\n      checked: false,\n      index: 0\n    };\n    this.openModal = this.openModal.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n  decrease = () => {\n    if (this.state.increment > 0) {\n      this.setState(prevState => ({ increment: prevState.increment - 1 }));\n    }\n  };\n\n  onClick = (evnet, props) => {\n    this.setState({ checked: !this.state.checked });\n  };\n\n  increase = () => {\n    this.setState({ increment: this.state.increment + 1 });\n  };\n\n  openModal() {\n    this.props.func_setMealFlag();\n    this.setState({ modalIsOpen: true });\n  }\n\n  // afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   this.subtitle.style.color = \"#f00\";\n  // }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n    this.props.func_removeMealFlag();\n  }\n\n  handleSelect(selectedIndex, e) {\n    this.setState({ index: selectedIndex });\n  }\n  render() {\n    // const { checked } = this.state;\n    const { value, mealPrep, ingredientsList } = this.props;\n\n    return (\n      <>\n        <Modal\n          show = {this.state.modalIsOpen}\n          onHide = { this.closeModal }\n          dialogClassName=\"modal-90w\"\n          centered\n        >\n          <Modal.Header closeButton style={{'borderBottom': '30px', 'padding': '0px'}}/> \n          <Modal.Body style={{ padding: \"0px\" }}> \n            <div className=\"container\">\n              <div className=\"row\" style={{ width: \"100%\"}}>\n                <div className=\"detail-firstCol col-md-5 col-sm-12\" >\n                  {/* <Carousel showThumbs={false} infiniteLoop={false} style={{width:\"96%\" }}>\n                    {content.map(index => (\n                      <img style={{ height: \"250px\" }} alt=\"pp\" key={index} src={value.mealImage} />\n                    ))}                    \n                  </Carousel> */}\n                  <br />\n                  <div className=\"col-md-12 col-xs-12\">\n                    {/* <h3> {value.label}</h3> */}\n                    <div>\n                      {/* {valu÷e.readTime} mins read | {value.cookTime} mins to prepare */}\n                    </div>\n                    <div> \n                      <button  style={{ backgroundColor: \"grey\",color: \"white\"}} >\n                        Compare items\n                      </button>\n                    </div>\n                    <br />\n                  </div>\n                </div>\n                \n                <div className=\"col-md-6 col-xs-12\">\n                  <div className=\"row col-md-6 col-xs-12\" style={{ width: \"100%\"}}> Meal Quantity &nbsp;\n                    <div className=\"def-number-input number-input\" style={{ backgroundColor: \"lightgrey\" }}>\n                      <button onClick={this.decrease} className=\"minus\"></button>\n                      <input className=\"quantity\" name=\"quantity\" value={this.state.increment}  onChange={() => console.log(\"change\")}  type=\"number\"/>\n                      <button onClick={this.increase} className=\"plus\"></button>\n                    </div>                    \n                  </div>\n\n                  <br />\n                  <div className=\"row col-md-6 col-sm-12\"><b>Ingredients</b></div>                  \n                  <div className=\"row ingredient-section\" >\n                      { ingredientsList &&\n                        ingredientsList.map(ingredient => (\n                          <div className=\"col-md-6 col-sm-12\" key={value.label + ingredient.product}>\n                            <input type=\"checkbox\" value=\"\" />{\" \"+ ingredient.product} <br />\n                          </div>\n                        ))} \n                  </div>    \n\n                  <button className=\"btn-addToCard\" style={{ marginBottom: \"20px\"}}>Add to Cart</button>\n                  <MealsPageTextSlider instructionData={mealPrep} value={value} />\n                </div>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n        {/* <div id ={value.name}> */}\n          {/* <button\n            className = \"detail-step-btn\"\n            style={{ backgroundColor: \"orange\"}}\n            key={value.id+value.label} onClick={this.openModal}> */}\n              See Full Recipe\n          {/* </button> */}\n        {/* </div> */}\n      </>\n    );\n  }\n}\nexport default MealsPageModal;\n","import React, { Component } from \"react\";\nimport MealsPageModal from \"./MealsPageModal\";\nimport WithScrollbar from \"./product_slider/WithScrollbar\";\n// import \"./MealsPage.scoped.scss\";\nimport { Row } from 'react-bootstrap'\nimport axios from '../../util/Api';\n\nclass PreviewMealsPage extends Component {\n  // Mongo\n  entries;\n\n  constructor(props) {\n    super(props);\n\n    window.addEventListener(\"resize\", this.update);\n    this.state = {\n      products: [],\n      width: 0,\n      firstPart_ind: 12,\n      slider_flag: false,\n      meal_data: null,\n      selected_index: 0,\n      selectedCardID: \"\",\n\n      mealSlider_Flag: false,\n      currentMealCount: 12,\n\n      mealList:null,\n      col_count:1\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n  // store props values into state, along with display and close functionality\n  // add productList props into products state\n\n  this.update();\n\n  console.log(\"Comes in meal pages component did mount\");\n\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  onClickMealCard = ( i, col_count )=>{\n    if(i === this.state.selected_index) this.setState({slider_flag: !this.state.slider_flag})\n    else this.setState({slider_flag: true})\n\n    this.setState({ selected_index: i});\n    this.setState({ meal_data: this.state.products[i]});\n    this.setState({ modalIsOpen: true });  \n    this.setState({ firstPart_ind: (parseInt((i )/ col_count)+1)*col_count});   \n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  setMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: true});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  removeMealSliderModal=()=>{\n    this.setState({mealSlider_Flag: false});\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  update = () => {\n    let col_count = 1;\n    if (window.innerWidth > 1200) col_count = 4;\n    else if(window.innerWidth > 900 && window.innerWidth < 1200) col_count = 3;\n    else if(window.innerWidth > 500 && window.innerWidth < 900) col_count = 2;\n\n    if(this.state.products === null && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4;\n    // if(this.state.products.length < 4 && window.innerWidth > 500 && window.innerHeight > 500) col_count = 4; //Math.min(count, this.props.products.length);\n\n    this.setState({col_count: col_count});\n  };\n\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    const {meal_data} = this.state;\n    const {meal_name, mealPrep} = this.props;\n    const meal_preview = [];\n    let count = Math.min(this.state.products.length, this.state.currentMealCount);\n     \n      // Meal Cards displayed after selected card\n      for (let i = Math.min(count, this.state.firstPart_ind); i< count; i+=this.state.col_count) {\n        const tmp_item = []\n        for(let j = 0; j<this.state.col_count; j++)\n        {\n          if(i+j>= count) break;\n            const value = this.state.products[i+j];   \n            tmp_item.push(\n              <div key={i+j} className={`col-sm-${12/ this.state.col_count} mealContainer`} style={{ justifyContent:\"center\"}}>\n                <div className=\"meal-card\" onClick={()=>this.onClickMealCard(i+j, this.state.col_count)}>\n                  <div style={containerStyle}>\n                    <div style={{ textAlign:\"center\" }}>\n                      <img\n                        src={value.mealImage}\n                        className=\"images\"\n                        style={{ width: \"200px\", height: \"200px\" }}\n                        alt=\"/\"\n                      ></img>\n                    </div>\n                    <div>\n                      <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\n                      <span style={{ color: \"grey\" }}>View Details | {value.cookTime}  mins to prepare</span>\n                      <span style={{ color: \"black\" }}></span>\n                    </div>              \n                  </div>\n\n                </div>\n              </div>\n            )\n        }\n        meal_preview.push(\n          <Row key={i+1}>{tmp_item}</Row>\n        );\n      }\n    // }\n    \n    return (\n      <div className=\"meals-Page\">\n        <div id=\"title\" className=\"meal-title\"> <b>Preview</b> </div>\n        <div className=\"mealPage-container\">\n            {/* {meal_preview}     */}\n            <MealsPageModal \n                    value={meal_name}\n                    mealPrep={mealPrep}\n                    // mealPrep={meal_data.instructions}\n                    // ingredientsList={meal_data.newer_ingredient_format }\n                    func_setMealFlag = {this.setMealSliderModal}\n                    func_removeMealFlag = {this.removeMealSliderModal}\n            />    \n        </div>\n      </div>\n    )\n  };\n}\n\nexport default PreviewMealsPage;\n\nconst containerStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  height: \"100%\"\n};\n","import React, { Component, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ChipInput from \"material-ui-chip-input\";\n// import Chip from \"@material-ui/core/Chip\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"; // createFilterOptions,\n// import axios from 'axios';\nimport axios from '../util/Api';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Dialog, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport PreviewMealsPage from \"./mealsPage/PreviewMealsPage\";\n\n// import ProductsPageModal from \"./ProductsPageModal\";\nvar FormData = require('form-data');\n\n// var fs = require('fs');\n\n\nclass SuggestMeal extends Component {\n  ingredientsQuantityMeasurements = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mealName: \"\",\n      mealImage: \"\",\n      mealImageName: \"\",\n      intro: \"\",\n\n      ingredientNames: [],\n      // do we need product group list AND strings ?\n      ingredientGroupList: [],\n      // store product names of inputted strings to compare with db products\n      ingredientStrings: [],\n      // do we want to use current ingredient formats ? Yes.\n      currentIngredient: \"\",\n      currentIngredientMeasurement: \"\",\n      currentIngredientQuantity: \"\",\n      currentProductImgSrc: null,\n      currentProductDisplayIndex: 0,\n\n      currentStore: \"\",\n\n      // we need to update how we create image paths\n      productImg_path: \"\",\n      // product_ind: 0,\n      // this is similar to how we will check for new Products from existing products\n\n      // new_product_ingredients: [{\n      //   productName: \"\",\n      //   productImgFile: undefined,\n      //   productImgPath: null,\n      //   // these are added to ingredient packets on submit, and not relevant in product object details\n      //   quantity: 0,\n      //   measurement: null,\n      // }],\n      new_product_ingredients: [],\n\n      suggested_stores: [],\n\n      currProductIndexInDBsProductsList: -1,\n      // currStoreIndexIfExistsInProductsList: -1,\n\n\n      suggestedUtensils: [],\n\n      cookTime: 0,\n      prepTime: 0,\n\n      stepSlides: [],\n\n      instructionChunk6: {\n        title: \"\",\n        instructionSteps: [],\n        dataName: \"\"\n      },\n      instructionChunk1: {\n        title: \"\",\n        instructionSteps: [],\n        dataName: \"\"\n      },\n      instructionChunk2: {\n        title: \"\",\n        instructionSteps: [],\n        dataName: \"\"\n      },\n      instructionChunk3: {\n        title: \"\",\n        instructionSteps: [],\n        dataName: \"\"\n      },\n      instructionChunk4: {\n        title: \"\",\n        instructionSteps: [],\n        dataName: \"\"\n      },\n      instructionChunk5: {\n        title: \"\",\n        instructionSteps: [],\n        dataName: \"\"\n      },\n\n      chunk1Content: \"\",\n      chunk2Content: \"\",\n      chunk3Content: \"\",\n      chunk4Content: \"\",\n      chunk5Content: \"\",\n      chunk6Content: \"\",\n\n      // do we want all the instruction variables ?\n      // instructionGroupList:[],\n\n      instructionimagesAndVideos: [],\n\n      chef: \"\",\n      suggestedCategories: [],\n      servings: 0,\n      tips: [],\n\n      booleanOfDisplayOfDialogBoxConfirmation: false,\n    };\n\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(this);\n    // this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\n    this.updateChef = this.updateChef.bind(this);\n    this.updateTip = this.updateTip.bind(this);\n    this.handleAddInstructionStep = this.handleAddInstructionStep.bind(this);\n    this.handleInstructionTitle = this.handleInstructionTitle.bind(this);\n\n    this.handleUtensilsDropdownChange = this.handleUtensilsDropdownChange.bind(this);\n    // this.openProductDetailsModal = this.openProductDetailsModal.bind(this);\n    this.handleProductNameInput = this.handleProductNameInput.bind(this);\n    // this.handleStoreNameInput = this.handleStoreNameInput.bind(this);\n\n    // this.getProductIndex = this.getProductIndex.bind(this);\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n\n    // get all Meal Names***\n    var url = \"/get-meals\";\n    axios.get(url).then((body) => {\n      var mealList = body.data;\n      if (mealList && mealList.data.length !== 0) {\n        console.log(\"returns GET of ALL MEALS \");\n        for (var i = 0; i < mealList.data.length; i++) {\n          this.props.allMealNames.push(mealList.data[i].label);\n        }\n      } else {\n        console.log(\"get all meal names function does not return\");\n      }\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    console.log(this.allMealNames);\n    // get all store names*, if NEW products section exists.\n\n    // can redux resolve this for us by checking if we recently called this in cache or from another page ??\n    // var url = \"/get-all-products\";\n    url = \"https://chopchowdev.herokuapp.com/get-all-products\";\n\n    // axios.get(url).then((body) => {\n    //   this.productsList = body.data;\n    //   if (this.productsList && this.productsList.data.length !== 0) {\n    //     console.log(\"returns GET ALL PRODUCTS \");\n    //     for (var i = 0; i < this.productsList.data.length; i++) {\n    //       this.productNames.push(this.productsList.data[i].product_name);\n    //       this.productImageLink.push(this.productsList.data[i].product_image);\n    //     }       \n    //   } else {\n    //     console.log(\"get all products function does not return\");\n    //   }\n    // })\n    // .catch((err) => {\n    //   console.log(err);\n    // });\n\n    //----get category meals-------------------------\n    url = \"/get-all-categories\";\n    axios.get(url).then((body) => {\n      var categoriesFromDBList = body.data;\n      if (categoriesFromDBList && categoriesFromDBList.data.length !== 0) {\n        console.log(\"returns GET of ALL Categories \");\n\n        for (var i = 0; i < categoriesFromDBList.data.length; i++) {\n          this.props.categories.push(categoriesFromDBList.data[i].category_name);\n        }\n        console.log(\"PRINTING UPDATED CATEGORIES LIST\");\n      } else {\n        console.log(\"get all products function does not return\");\n      }\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleClose = () => {\n    this.setState({ booleanOfDisplayOfDialogBoxConfirmation: false });\n    // close out of state tracker..\n    // productDisplayBooleansOutOfState[index] = false;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  openProductDetailsModal = (index) => {\n    // toggle products page visibility for product to be Edited.\n    // this.productDisplayBooleansOutOfState[this.state.ingredientGroupList.length] = false;\n    // this.productDisplayBooleansOutOfState[index] = true;\n\n    // var tmpIngredientGroupList = this.state.ingredientGroupList;\n    // tmpIngredientGroupList[index].display = true;\n    // tmpIngredientGroupList[currentProductDisplayIndex].display = false;\n    // this.setState({ingredientGroupList: tmpIngredientGroupList});\n    console.log(\"Comes in toggle product details div id. Index is : \" + index);\n\n    var individualProductDisplay = document.getElementById(\"ProductAdditionalDataDisplayed\");\n    console.log(individualProductDisplay);\n\n    if (individualProductDisplay.style.display === \"block\") {\n      individualProductDisplay.style.display = \"none\";\n    }\n    else {\n      individualProductDisplay.style.display = \"block\";\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onTextFieldChange = (e) => {\n    console.log(\"Comes in on text field change; \");\n\n    console.log(\" \" + [e.target.id] + \" \" + e.target.value);\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onInputChange = (e) => {\n    console.log(\"Comes in on text field change; \");\n\n    console.log(\" \" + [e.target.id] + \" \" + e.target.value);\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateMealImage = (event) => {\n    if (event.target.files[0] === undefined) return;\n    this.setState({ mealImage: event.target.files[0], mealImageName: event.target.files[0].name });\n\n    // Allowing file type\n    var allowedImageExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.)$/i;\n\n    if (allowedImageExtensions.exec(event.target.files[0].name)) {\n      //display meals main image or videoin suggest meal\n      var image = document.getElementById(\"MealsMainImages\");\n      image.style.display = \"block\";\n      image.src = URL.createObjectURL(event.target.files[0]);\n\n      console.log(event.target.files[0]);\n      console.log(event.target.files[0].name);\n\n\n      console.log(allowedImageExtensions.exec(event.target.files[0].name));\n\n      // console.log(URL.createObjectURL(event.target.files[0]));\n    }\n    else {\n      alert(\"Invalid image type\");\n    }\n\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onhandleInstructionImg = (event, id) => {\n    if (event.target.files[0] === undefined) return;\n\n    console.log(\"uploading recipeChunkImageOrVideo content looks like below: \");\n    console.log(event.target.files[0]);\n\n    switch (id) {\n      case 1:\n        this.setState({ chunk1Content: event.target.files[0] });\n        break;\n      case 2:\n        this.setState({ chunk2Content: event.target.files[0] });\n        break;\n      case 3:\n        this.setState({ chunk3Content: event.target.files[0] });\n        break;\n      case 4:\n        this.setState({ chunk4Content: event.target.files[0] });\n        break;\n      case 5:\n        this.setState({ chunk5Content: event.target.files[0] });\n        break;\n      case 6:\n        this.setState({ chunk6Content: event.target.files[0] });\n        break;\n      default:\n      // ..do nothing\n    }\n\n    // this.setState({ instructionimagesAndVideos: recipeChunkImageOrVideo });\n\n\n    // Allowing file type\n    var allowedImageExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.)$/i;\n    var allowedVideoExtensions = /(\\.mp4|\\.m4v|\\.)$/i;\n\n    var imageElementId = \"chunk\" + (id) + \"Image\";\n    var videoElementId = \"chunk\" + (id) + \"Video\";\n    var image = document.getElementById(imageElementId);\n    var video = document.getElementById(videoElementId);\n\n    // console.log(allowedImageExtensions.exec(event.target.files[0].name));\n\n    // we need to keep track of wether an image or video was last uploaded and use the last one only.\n    if (allowedImageExtensions.exec(event.target.files[0].name)) {\n      //display meals main image or videoin suggest meal\n      image.style.display = \"block\";\n      video.style.display = \"none\";\n\n      image.src = image.src = URL.createObjectURL(event.target.files[0]);\n    }\n    else if (allowedVideoExtensions.exec(event.target.files[0].name)) {\n      //display meals main image or videoin suggest meal\n      video.style.display = \"block\";\n      image.style.display = \"none\";\n\n      // var video_source = document.getElementById(videoElementId+'Source');\n      // video_source.src =  URL.createObjectURL(event.target.files[0]);\n      video.src = URL.createObjectURL(event.target.files[0]);\n\n      video.play();\n      // console.log(URL.createObjectURL(event.target.files[0]));\n      console.log(event.target.files[0]);\n    }\n    else {\n      alert('Invalid file type');\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////\n  onUpdateInstructionImg = (event, ind) => {\n    if (event.target.files[0] === null) return;\n\n    // const tmp_instructionData = this.state.instructionGroupList;\n    // const tmp_instructionItem = tmp_instructionData[ind];\n\n    const temp_instructionImageOrVideoArray = this.state.instructionimagesAndVideos;\n    // const individual_ImageOrVideo = temp_instructionImageOrVideoArray[ind];\n\n    // tmp_instructionData[ind] = tmp;\n    temp_instructionImageOrVideoArray[ind] = event.target.files[0];\n\n    // this.setState({instructionGroupList: tmp_instructionData});\n    this.setState({ instructionimagesAndVideos: temp_instructionImageOrVideoArray });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  updateChef() {\n    var chefName = document.getElementById(\"chef\").value;\n    this.setState({ chef: chefName })\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  updateTip(chip) {\n    // var mealTip = document.getElementById(\"tips\").value;\n    let tipsList = this.state.tips;\n    this.setState({ tips: [...this.state.tips, chip] })\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  deleteTip(chip) {\n    // var mealTip = document.getElementById(\"tips\").value;\n    let tipsList = this.state.tips;\n\n    var index = tipsList.indexOf(chip);\n    if (index !== -1) {\n      tipsList.splice(index, 1);\n      this.setState({ tips: tipsList });\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////////\n  handleProductNameInput = (event, val) => {\n\n    console.log(\"In handleProductNameInput . \\n val is: \" + val);\n    if (val !== undefined && val !== null) {\n      // CHECK IF INPUT MATCHES ANY PRODUCT ALREADY IN DB and\n      // set currProductIndexInDBsProductsList variable \n      const searchResult = this.props.productNames.map(function callback(element) { if (element.toLowerCase() === (val.toLowerCase())) { return true; } else { return false; } });\n      const tmpcurrProductIndexInDBsProductsList = searchResult.indexOf(true);\n      console.log(\"Curr Product Index If Exists In Products List is: \\n\" + tmpcurrProductIndexInDBsProductsList);\n\n      // check if product name is an existing product\n      // set product existense to index, so one will not need to edit\n      this.setState({ currProductIndexInDBsProductsList: tmpcurrProductIndexInDBsProductsList });\n\n      // set current ingredient to input Product regardless\n      // console.log(\"Event is: \\n\"+ event.target);\n      if (event != null && event.target.value !== null) {\n        this.setState({ currentIngredient: event.target.innerHTML });\n\n      } else {\n        this.setState({ currentIngredient: val });\n      }\n    }\n    else {\n      console.log('val is null or undefined');\n    }\n  }\n\n  // getProductIndex(){\n  //   this.productDisplayBooleansOutOfState.map(function(key, value){\n  //     if(value == true){\n  //       return key;\n  //     }\n  //   })\n  // };\n  ///////////////////////////////////////////////////////////////////////////////////////\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddIngredientChip(chip) {\n    this.setState({\n      ingredientStrings: [...this.state.ingredientStrings, chip],\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  deleteNewIngredientFromNewProductPopUp = (ind) => {\n    var array = this.state.ingredientStrings;\n    var removeFromGroup = this.state.ingredientGroupList;\n    var tmpNewProductsList = this.state.new_product_ingredients;\n    // dont we need to get the specific index from new products list and ingredient group list ?\n    if (ind !== -1) {\n      array.splice(ind, 1);\n      removeFromGroup.splice(ind, 1);\n      tmpNewProductsList.splice(ind, 1);\n      this.setState({ ingredientStrings: array, ingredientGroupList: removeFromGroup, new_product_ingredients: tmpNewProductsList });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteIngredientChip(chip) {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var removeFromGroup = this.state.ingredientGroupList;\n\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      removeFromGroup.splice(index, 1);\n\n      this.setState({ ingredientStrings: array, ingredientGroupList: removeFromGroup });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  // handleIngredientQuantity(event) {\n  //   console.log(event.target.value);\n  //   this.setState({ currentIngredientQuantity: event.target.value });\n  // }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleIngredientMeasurement(event, val) {\n    // if (event.target.value) {\n    //   this.setState({ currentIngredientMeasurement: event.target.value });\n    // } else {\n    //   this.setState({ currentIngredientMeasurement: \"\" });\n    // }\n\n    console.log(\"In handleIngredientMeasurement . \\n val is: \" + val);\n\n    if (val !== null && val !== undefined) {\n      // CHECK IF INPUT MATCHES ANY PRODUCT ALREADY IN DB and\n      // set currProductIndexInDBsProductsList variable \n      const searchResult = this.props.measurements.map(function callback(element) { if (element.toLowerCase() === (val.toLowerCase())) { return true; } else { return false; } });\n      const tmpcurrMeasurementIndexInDBsMeasurementList = searchResult.indexOf(true);\n      console.log(\"Curr Product Index If Exists In Products List is: \\n\" + tmpcurrMeasurementIndexInDBsMeasurementList);\n\n      // check if product name is an existing product\n      // set product existense to index, so one will not need to edit\n      // this.setState({ currProductIndexInDBsProductsList: tmpcurrMeasurementIndexInDBsMeasurementList });\n\n      // set current ingredient to input Product regardless\n      // console.log(\"Event is: \\n\"+ event.target);\n      if (event != null && event.target.value !== null) {\n        this.setState({ currentIngredientMeasurement: event.target.innerHTML });\n\n      } else {\n        this.setState({ currentIngredientMeasurement: val });\n      }\n    }\n    else {\n      console.log('val is null!');\n    }\n  }\n\n\n\n\n  handleInstructionTitle(event, chunkIndex) {\n    console.log(\"Index is : \" + chunkIndex);\n    let chip = event.target.value;\n    console.log(\"Chip is : \" + chip);\n\n    let particularArray;\n\n    switch (chunkIndex) {\n      case 1:\n        particularArray = this.state.instructionChunk1;\n        particularArray.title = chip;\n        this.setState({ instructionChunk1: particularArray });\n        break;\n      case 2:\n        particularArray = this.state.instructionChunk2;\n        particularArray.title = chip;\n        this.setState({ instructionChunk2: particularArray });\n        break;\n      case 3:\n        particularArray = this.state.instructionChunk3;\n        particularArray.title = chip;\n        this.setState({ instructionChunk3: particularArray });\n        break;\n      case 4:\n        particularArray = this.state.instructionChunk4;\n        particularArray.title = chip;\n        this.setState({ instructionChunk4: particularArray });\n        break;\n      case 5:\n        particularArray = this.state.instructionChunk5;\n        particularArray.title = chip;\n        this.setState({ instructionChunk5: particularArray });\n        break;\n      case 6:\n        particularArray = this.state.instructionChunk6;\n        particularArray.title = chip;\n        this.setState({ instructionChunk6: particularArray });\n        break;\n      default:\n      // ..do nothing\n    }\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddInstructionStep(chip, chunkIndex) {\n\n    var particularArray;\n\n    console.log(\"Index is : \" + chunkIndex);\n\n    switch (chunkIndex) {\n      case 1:\n        particularArray = this.state.instructionChunk1;\n        particularArray.instructionSteps = [...this.state.instructionChunk1.instructionSteps, chip]\n        this.setState({ instructionChunk1: particularArray });\n        break;\n      case 2:\n        particularArray = this.state.instructionChunk2;\n        particularArray.instructionSteps = [...this.state.instructionChunk2.instructionSteps, chip]\n        this.setState({ instructionChunk2: particularArray });\n        break;\n      case 3:\n        particularArray = this.state.instructionChunk3;\n        particularArray.instructionSteps = [...this.state.instructionChunk3.instructionSteps, chip]\n        this.setState({ instructionChunk3: particularArray });\n        break;\n      case 4:\n        particularArray = this.state.instructionChunk4;\n        particularArray.instructionSteps = [...this.state.instructionChunk4.instructionSteps, chip]\n        this.setState({ instructionChunk4: particularArray });\n        break;\n      case 5:\n        console.log(\"Comes in here too\");\n        particularArray = this.state.instructionChunk5;\n        particularArray.instructionSteps = [...this.state.instructionChunk5.instructionSteps, chip]\n        this.setState({ instructionChunk5: particularArray });\n        break;\n      case 6:\n        particularArray = this.state.instructionChunk6;\n        particularArray.instructionSteps = [...this.state.instructionChunk6.instructionSteps, chip]\n        this.setState({ instructionChunk6: particularArray });\n        break;\n      default:\n      // ..do nothing\n    }\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteInstructionsStep(chip, chunkIndex) {\n    console.log(\"In delete instruction step/chip\")\n    console.log(\"Chip is \" + chip);\n    console.log(\"Index is \" + chunkIndex);\n\n    let particularArray;\n    let index;\n    let arraySteps;\n\n    switch (chunkIndex) {\n      case 1:\n        particularArray = this.state.instructionChunk1; // make a separate copy of the array\n        arraySteps = particularArray.instructionSteps\n        index = arraySteps.indexOf(chip);\n        if (index !== -1) {\n          arraySteps.splice(index, 1);\n          particularArray.instructionSteps = arraySteps;\n          console.log(\"new array : \\n\"+ particularArray);\n          this.setState({ instructionChunk1: particularArray });\n        }\n        break;\n      case 2:\n        particularArray = this.state.instructionChunk2; // make a separate copy of the array\n        arraySteps = particularArray.instructionSteps\n        index = arraySteps.indexOf(chip);\n        if (index !== -1) {\n          arraySteps.splice(index, 1);\n          particularArray.instructionSteps = arraySteps;\n          this.setState({ instructionChunk2: particularArray });\n        }\n        break;\n      case 3:\n        particularArray = this.state.instructionChunk3; // make a separate copy of the array\n        arraySteps = particularArray.instructionSteps\n        index = arraySteps.indexOf(chip);\n        if (index !== -1) {\n          arraySteps.splice(index, 1);\n          particularArray.instructionSteps = arraySteps;\n          this.setState({ instructionChunk3: particularArray });\n        }\n        break;\n      case 4:\n        particularArray = this.state.instructionChunk4; // make a separate copy of the array\n        arraySteps = particularArray.instructionSteps\n        index = arraySteps.indexOf(chip);\n        if (index !== -1) {\n          arraySteps.splice(index, 1);\n          particularArray.instructionSteps = arraySteps;\n          this.setState({ instructionChunk4: particularArray });\n        }\n        break;\n      case 5:\n        particularArray = this.state.instructionChunk5; // make a separate copy of the array\n        arraySteps = particularArray.instructionSteps\n        index = arraySteps.indexOf(chip);\n        if (index !== -1) {\n          arraySteps.splice(index, 1);\n          particularArray.instructionSteps = arraySteps;\n          this.setState({ instructionChunk5: particularArray });\n        }\n        break;\n      case 6:\n        particularArray = this.state.instructionChunk6; // make a separate copy of the array\n        arraySteps = particularArray.instructionSteps\n        index = arraySteps.indexOf(chip);\n        if (index !== -1) {\n          arraySteps.splice(index, 1);\n          particularArray.instructionSteps = arraySteps;\n          this.setState({ instructionChunk6: particularArray });\n        }\n        break;\n      default:\n      // ..do nothing\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleKitchenUtensilInputName = (val) => {\n    this.setState({ suggestedUtensils: val });\n\n    // causees error when testing in request payload\n    // var tmpKitchenUtenails = [...this.state.suggestedUtensils]\n    // this.setState({ suggestedUtensils: [tmpKitchenUtenails, val] });\n  }\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleUtensilsDropdownChange(event) {\n    if (event.target.value) {\n      this.setState({ suggestedUtensils: [...this.state.suggestedUtensils, event.target.value] });\n    } else {\n      this.setState({ suggestedUtensils: [...this.state.suggestedUtensils, event.target.innerHTML] });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteUtensilsChip(chip) {\n    var array = [...this.state.suggestedUtensils]; // make a separate copy of the array\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ suggestedUtensils: array });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddCategoryChip(chip) {\n    this.setState({ suggestedCategories: [...this.state.suggestedCategories, chip] });\n\n    // new categories are created and handled on submit meal simply\n\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleCategoryDropdownChange = (val) => {\n    this.setState({ suggestedCategories: val });\n    // below setstate causes an error to make each new set a sum of all previous.\n    // this.setState({ suggestedCategories: [...this.state.suggestedCategories, val] });\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteCategoryChip(chip) {\n    var array = [...this.state.suggestedCategories]; // make a separate copy of the array\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ suggestedCategories: array });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  addIngredientToMeal(event) {\n    console.log(\"COMES IN addIngredientToMeal\");\n    event.preventDefault();\n    var properIngredientStringSyntax;\n    var ingredientValue = document.getElementById(\"currentIngredient\").value;\n    var quantityValue = document.getElementById(\"currentIngredientQuantity\").value;\n    // best to get the measurement from the state\n    // perhaps becuse inner html is defined before state is updated\n    // var measurementValue = this.state.currentIngredientMeasurement;\n    var measurementValue = document.getElementById(\"currentIngredientMeasurement\").value;\n\n\n    if (ingredientValue === \"\") { window.alert(\"Enter an ingredient to add to meal\"); return; }\n    // update ingredient string syntax for no quantity or no measurement.\n    if (quantityValue === \"\") {\n      properIngredientStringSyntax = ingredientValue;\n    } else if (measurementValue === \"\" && quantityValue !== \"\") {\n      // MAKE sure we are using the right and tested variables to display the right type of string at all times.\n      properIngredientStringSyntax = \"\" + quantityValue + \" \" + ingredientValue;\n    } else {\n      properIngredientStringSyntax =\n        \"\" + quantityValue + \" \" + measurementValue +\n        \" of \" + ingredientValue;\n    }\n    console.log(properIngredientStringSyntax);\n\n    // This is the Object for an Ingredient of a Known Product\n    var currIngredientObject = {\n      // productName: this.state.currentIngredient,  \n      productName: ingredientValue,\n      // productImgFile: this.state.currentProductImgSrc,\n      productImgPath: null,\n      // display: this.state.currProductIndexInDBsProductsList,\n      // availableLocations: [],\n\n      // these are added to ingredient packets on submit, and not relevant in product object details\n      quantity: quantityValue,\n      measurement: measurementValue,\n      properIngredientStringSyntax: properIngredientStringSyntax\n    };\n\n    console.log(\"current state of product index at Add Ingredient To Meal is : \\n\" + this.state.currProductIndexInDBsProductsList);\n\n    const searchResult = this.props.productNames.map(function callback(element) { if (element.toLowerCase() === (ingredientValue.toLowerCase())) { return true; } else { return false; } });\n    const tmpcurrProductIndexInDBsProductsList = searchResult.indexOf(true);\n    console.log(\"Curr Product Index If Exists In Products List is: \\n\" + tmpcurrProductIndexInDBsProductsList);\n\n\n    if (tmpcurrProductIndexInDBsProductsList !== -1) {\n      console.log(\"using already existing product object from db\");\n\n      // necessary, but we first need to get the index of the product\n      // to assign the path to current object productImageLink\n      // if we are able to get this ingredient id then we can pass its image\n      // index in products list is different from that of ingredients group list\n\n      // currIngredientObject.productImgPath = this.productImageLink[this.state.currProductIndexInDBsProductsList];\n      console.log(\"DOES NOT ADD to new _product_ingredients\");\n\n    }\n    else {\n      console.log(\"ADDs to new_product_ingredients\");\n\n      console.log(\"creating new product object\");\n\n      // edit product details for new product object\n      // currIngredientObject.productImgFile = null;\n      currIngredientObject.productIndex = 0;\n      // currIngredientObject.calories = 0;\n\n      // append String to new Products array if not\n      // var tmpNewProducts = [...this.state.new_product_ingredients];\n      // var tmpNewProducts = this.state.new_product_ingredients;\n      // var updatedProductList = [tmpNewProducts, currIngredientObject];\n\n      // this.setState({ new_product_ingredients: updatedProductList })\n      this.setState({ new_product_ingredients: [...this.state.new_product_ingredients, currIngredientObject] });\n    }\n\n    this.setState({ ingredientGroupList: [...this.state.ingredientGroupList, currIngredientObject] });\n    // after adding product to ingredient group list\n    // reset current product img src and path to null, and same for current ingredient inputs\n    // this.setState({ currentProductImgSrc: null, productImg_path: \"\" });\n    this.setState({ currentIngredient: \"null\", currentIngredientQuantity: '', currentIngredientMeasurement: \"null\" });\n    this.setState({ currentIngredient: \"\", currentIngredientMeasurement: \"\" });\n    this.handleAddIngredientChip(properIngredientStringSyntax);\n\n    //  Resetting inner html directly to clear ingredient inputs without changing state\n    // document.getElementById(\"currentIngredient\").value = 'NewPs';\n    // document.getElementById(\"currentIngredientQuantity\").value = 8;\n    // document.getElementById(\"currentIngredientMeasurement\").value = 'Removed';\n\n  }\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  sendSuggestedMealToDB = async (e) => {\n    const { mealName, prepTime, cookTime, mealImage, mealImageName, intro, servings, chef, new_product_ingredients, ingredientStrings, ingredientGroupList, suggestedCategories, tips, suggestedUtensils, } = this.state;\n\n    // handle edge case meal name, ingredienrs or image upload required to submit form\n    if (mealName === \"\") { console.log(\"meal label blank\"); return; }\n    // if (ingredientStrings.length === 0) { window.alert(\"Suggested meal requires adding at least one ingredient to submit\"); return; }\n    if (mealImage === null || mealImage === undefined) { window.alert(\"You didn't add suggested meal image\"); return; }\n\n    // Handle instruction/product images to create url for product images on server\n    /*Loop through Ingredients meal data\n    Check if all products listed exist in the database.\n    If not, let server create placeholder before submitting to db.\n    Get list of new products and new Categories\n\n    This for loop is making sure we are building a product_slider.\n    we could probably merge this in the above for loop easily, but we want to call this path function,\n    so lets figure out what its even doing!*/\n\n    const all_ingredients_formatted = [];\n    const product_slider = [];\n    const new_products = [];\n    let i = 0;\n    for (i = 0; i < new_product_ingredients.length; i++) {\n      // store ingredient format to submit ingredient product objects\n      var tmp_ingredient = {\n        // name and optional image added to new product,\n        // we can add remainder products data after testing current\n        ingredient: new_product_ingredients[i].productName,\n        image: new_product_ingredients[i].productImgFile\n      };\n\n      // handle quantity measurement list\n      var measurementQuantity = {\n        quantity: ingredientGroupList[i].quantity,\n        measurement: ingredientGroupList[i].measurement,\n      }\n\n      // no need for handlers since this is created on submit!\n      this.ingredientsQuantityMeasurements.push(measurementQuantity);\n\n      // new_products.push(tmp_ingredient);\n      // product_slider.push(tmp_slider_data);\n    }\n\n    let new_measurements = [];\n    for (i = 0; i < ingredientGroupList.length; i++) {\n      // store ingredient format to submit ingredient product objects\n      var tmp_ingredient = {\n        // name and optional image added to new product,\n        // we can add remainder products data after testing current\n        productName: ingredientGroupList[i].productName,\n        quantity: ingredientGroupList[i].quantity,\n        measurement: ingredientGroupList[i].measurement,\n        productImgPath: ingredientGroupList[i].productImgPath,\n        properIngredientStringSyntax: ingredientGroupList[i].properIngredientStringSyntax\n      };\n\n      all_ingredients_formatted.push(tmp_ingredient);\n      console.log(tmp_ingredient);\n\n      const tmp_slider_data = {\n        ingredient: ingredientGroupList[i].product,\n        image: ingredientGroupList[i].productImgPath,\n        display: ingredientGroupList[i].display,\n      };\n      // store product slider format to submit slider object to meal\n      product_slider.push(tmp_slider_data);\n\n\n      // get new_Measurements from inputted ingredient packets\n      if (ingredientGroupList[i].measurement !== \"\") {\n        let index = this.props.measurements.indexOf(ingredientGroupList[i].measurement);\n        if (index === -1) new_measurements.push(ingredientGroupList[i].measurement);\n      }\n    }\n    //-------------to make new category data ------------------------------------------\n    // get list of new categories to submit to mongo\n    let new_categories = [];\n    for (i = 0; i < suggestedCategories.length; i++) {\n      // check if categories already exist, only add new categories to db,\n      // though all will still be attached to meal, as mentioned\n      let index = this.props.categories.indexOf(suggestedCategories[i]);\n      if (index === -1) new_categories.push(suggestedCategories[i]);\n    }\n\n    let new_kitchen_utensils = [];\n    for (i = 0; i < suggestedUtensils.length; i++) {\n      // check if categories already exist, only add new categories to db,\n      // though all will still be attached to meal, as mentioned\n      let index = this.props.kitchenUtensils.indexOf(suggestedUtensils[i]);\n      if (index === -1) new_kitchen_utensils.push(suggestedUtensils[i]);\n    }\n\n    //prepare Meal data to Mongo and Recipe Steps Images and Video content to s3\n    const instructionGroupData = [];\n    const contentNameToContentImageOrVideoMapForS3 = new FormData();\n    console.log(\"Meal name:\");\n    console.log(this.state.mealName);\n\n    // max recipe chunks is 6\n    for (i = 0; i < 6; i++) {\n      var contentKey = 'instructionChunkContent' + (i + 1);\n      console.log(this.state.instructionimagesAndVideos[i]);\n      // add image or video to recipecontent array\n      if (this.state.instructionimagesAndVideos[i] !== undefined) {\n        console.log(\"Comes in here to send individual content\");\n        console.log(this.state.instructionimagesAndVideos[i]);\n        // contentNameToContentImageOrVideoMapForS3.append( \"mealContentName\" , contentKey);\n        contentNameToContentImageOrVideoMapForS3.append(contentKey, this.state.instructionimagesAndVideos[i]);\n        // var fsReadStream = fs.createReadStream(this.state.instructionimagesAndVideos[i])\n        // console.log(fsReadStream);\n        // contentNameToContentImageOrVideoMapForS3.append( \"Content\", fs.readFile(contentKey, this.state.instructionimagesAndVideos[i],  function(err, data){\n        //   // Display the file content\n        //   console.log(data);\n        // }));\n        // contentNameToContentImageOrVideoMapForS3.append( \"Content\", fs.createReadStream(URL.createObjectURL(this.state.instructionimagesAndVideos[i])));\n        // contentNameToContentImageOrVideoMapForS3.append( \"mealContent\", this.state.instructionimagesAndVideos[i]);\n        console.log(contentNameToContentImageOrVideoMapForS3);\n        //pass json as object rather than as file in json\n        // const jsonFormattedMap = Object.fromEntries(contentNameToContentImageOrVideoMapForS3);\n        // console.log(jsonFormattedMap);\n      }\n\n\n\n      let currInstructionChunk = [];\n      // let chunkContent;\n      switch (i) {\n        case 1:\n          currInstructionChunk = this.state.instructionChunk1;\n          // dataname = this.state.chunk1Content.filename;\n          break;\n        case 2:\n          currInstructionChunk = this.state.instructionChunk2;\n          // chunkContent = this.state.chunk2Content;\n          break;\n        case 3:\n          currInstructionChunk = this.state.instructionChunk3;\n          // chunkContent = this.state.chunk3Content;\n          break;\n        case 4:\n          currInstructionChunk = this.state.instructionChunk4;\n          // chunkContent = this.state.chunk4Content;\n          break;\n        case 5:\n          currInstructionChunk = this.state.instructionChunk5;\n          // chunkContent = this.state.chunk5Content;\n          break;\n        case 6:\n          currInstructionChunk = this.state.instructionChunk6;\n          // chunkContent = this.state.chunk6Content;\n          break;\n        default:\n          currInstructionChunk = \"null\";\n      }\n\n      // do not include and submite a step zero..\n      if (i != 0) {\n        let submitable_recipe_chunk = {\n          step: i,\n          // title is defined in instruction chunk\n          instructionChunk: currInstructionChunk,\n          // dataname : null\n        }\n        // allMealsInstructionimagesAndVideosCombined.push(contentNameToContentImageOrVideoMapForS3);\n        instructionGroupData.push(submitable_recipe_chunk);\n      }\n\n    }\n\n    contentNameToContentImageOrVideoMapForS3.append('mealContentName', this.state.mealName);\n    console.log(contentNameToContentImageOrVideoMapForS3);\n    var keyValueData = { mealContentName: this.state.mealName };\n    // console.log(\"Stringified version:\");\n    // console.log(keyValueData);\n    var singleTitleTest = JSON.stringify(keyValueData);\n    console.log(singleTitleTest);\n\n\n    //-------------Submit remainder data of meal to Mongo ------------------------------------------\n    let suggestMealForm = new FormData();\n    let s3Form = new FormData();\n\n    suggestMealForm.append('mealName', mealName);\n    suggestMealForm.append('mealImage', mealImage);\n    suggestMealForm.append('mealImageName', mealImageName);\n\n    suggestMealForm.append('prepTime', prepTime);\n    suggestMealForm.append('cookTime', cookTime);\n\n    suggestMealForm.append('intro', intro);\n    suggestMealForm.append('mealTip', tips);\n    suggestMealForm.append('chef', chef);\n    suggestMealForm.append('servings', servings);\n\n    // suggestMealForm.append('ingredientStrings', ingredientStrings);\n    // list of products quantity measurements (created on submit meal)\n    suggestMealForm.append('ingredientsQuantityMeasurements', JSON.stringify(this.ingredientsQuantityMeasurements));\n    suggestMealForm.append('new_measurements', JSON.stringify(new_measurements));\n\n    // suggestMealForm.append('product_slider', JSON.stringify(product_slider));\n    suggestMealForm.append('formatted_ingredient', JSON.stringify(all_ingredients_formatted));\n\n    // new suggested products\n    suggestMealForm.append('new_product_ingredients', JSON.stringify(new_product_ingredients));\n\n    suggestMealForm.append('categoryChips', JSON.stringify(suggestedCategories));\n    suggestMealForm.append('newCategories', JSON.stringify(new_categories));\n\n    suggestMealForm.append('kitchenUtensils', JSON.stringify(suggestedUtensils));\n    suggestMealForm.append('newKitchenUtensils', JSON.stringify(new_kitchen_utensils));\n\n    // RecipeSteps\n    suggestMealForm.append('instructionsGroupList', JSON.stringify(instructionGroupData));\n\n\n    // suggestMealForm.append('instructionsGroupList', instructionGroupData);\n    console.log(this.state.chunk1Content);\n    suggestMealForm.append('instructionData1Name', this.state.chunk1Content.filename);\n    suggestMealForm.append('instructionData2Name', this.state.chunk2Content.filename);\n    suggestMealForm.append('instructionData3Name', this.state.chunk3Content.filename);\n    suggestMealForm.append('instructionData4Name', this.state.chunk4Content.filename);\n    suggestMealForm.append('instructionData5Name', this.state.chunk5Content.filename);\n    suggestMealForm.append('instructionData6Name', this.state.chunk6Content.filename);\n\n\n    suggestMealForm.append('instructionChunkContent1', this.state.chunk1Content);\n    suggestMealForm.append('instructionChunkContent2', this.state.chunk2Content);\n    suggestMealForm.append('instructionChunkContent3', this.state.chunk3Content);\n    suggestMealForm.append('instructionChunkContent4', this.state.chunk4Content);\n    suggestMealForm.append('instructionChunkContent5', this.state.chunk5Content);\n    suggestMealForm.append('instructionChunkContent6', this.state.chunk6Content);\n\n    // -------------Save Instruction Content chunks to server ------------------------------------------\n    // var url = \"https://chopchowdev.herokuapp.com/api/addMealInstructionContent/\";\n    // var url = \"http://localhost:5000/api/addMealInstructionContentToServerAndS3/\";\n\n    // // this st\n    // fetch(url, {\n    //   method: \"POST\",\n    //   // credentials: \"same-origin\",\n    //   //   headers: {\n    //   //     \"Content-type\": \"application/json\"\n    //   // },\n    //   // body: contentNameToContentImageOrVideoMapForS3\n    //   body: s3Form\n\n    // })\n    //   .then((response) => {\n    //     response.json().then((res) => {\n    //       console.log(\"Multer successfully stores to server \");\n    //       console.log(res);\n    //     });\n\n    //   })\n    //   .catch((err) => {\n    //     console.log(\"Multer fails to submit meal content to database\");\n    //     console.log(err);\n    //   });\n\n\n    //-------------Submit instruction content to s3 after successful Multer save------------------------------------------\n    // var url = \"http://localhost:3000/api/transferToS3/\";\n\n    //  use axios instead of fetch for image and video http requests\n    // const instructionContentConfigs = { method: 'POST', data: singleTitleTest, url: \"http://localhost:3000/api/transferToS3/\" };\n    // const instructionContentConfigs = {  method: 'POST', url: \"http://localhost:3000/api/addMealInstructionContent/\", headers: {'Content-Type': 'multipart/form'}};\n\n    // const axiosResponse = axios(instructionContentConfigs)\n\n    // const response = await axios.post(\"http://localhost:3000/api/addMealInstructionContent/\", contentNameToContentImageOrVideoMapForS3)\n    // console.log(axiosResponse);\n\n    //---------------------------------------------Submit Meal to Mongo---------------------------------------------------\n    var url = \"/addMealSuggestion/\";\n    // var url = \"http://localhost:5000/api/addMealSuggestion/\";\n\n    const config = {\n      method: 'POST', data: suggestMealForm, url: url,\n      headers: {\n        // 'application/json' is the modern content-type for JSON, but some\n        // older servers may use 'text/json'.\n        // See: http://bit.ly/text-json\n        // application/x-www-form-urlencoded\n        // 'content-type': 'multipart/form-data'\n      }\n    };\n\n    console.log(\"Printing Chunk Contents\");\n    // console.log(suggestMealForm[instructionsGroupList]);\n    //   for (var value of suggestMealForm.values()) {\n    //     console.log(value);\n    //  }\n\n    //  console.log(this.state.chunk0Content);\n    //  console.log(this.state.chunk1Content);\n    //  console.log(this.state.chunk2Content);\n    //  console.log(this.state.chunk3Content);\n    //  console.log(this.state.chunk4Content);\n    //  console.log(this.state.chunk5Content);\n    var instructionData = JSON.parse(JSON.stringify(instructionGroupData));\n    console.log(instructionData);\n\n    axios(config).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        this.setState({ booleanOfDisplayOfDialogBoxConfirmation: true });\n        console.log(response);\n        console.log(\"Display Meal submitted successfully\");\n        // window.location.href = \"/SuggestMeal\"\n      } else {\n        console.log(\"Something wrong happened \");\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  render() {\n\n    // const [ingredientInput, setIngredientInput] = useState('');    \n\n    const theme = createMuiTheme({\n      palette: { primary: green },\n    });\n    const theme2 = createMuiTheme({\n      palette: { primary: green },\n    });\n\n    const { categoryList, availableLocations, suggested_stores, new_product_ingredients, ingredientGroupList } = this.state;\n\n    {/* // add product object slider with option to include images and available locations*/ }\n\n    var preview = <PreviewMealsPage />\n\n    return (\n      <div>\n        <br></br>\n        <div style={{ width: \"85%\", margin: \"auto\", backgroundColor: \"#f4f4f4\" }}>\n          <div style={{ padding: \"20px\", boxShadow: \"1px 1px 4px 2px #00000030\" }}>\n            <div id=\"title\" style={{ marginTop: \"20px\", marginBottom: \"20px\", }}>\n              <b>Begin Suggesting Meal:</b>\n            </div>\n            <form noValidate autoComplete=\"off\" encType=\"multipart/form-data\" method=\"post\" >\n              <Row className=\"mb-3\">\n                <Col>\n                  <Autocomplete\n                    id=\"mealName\"\n                    options={this.props.allMealNames.map((option) => option)}\n                    onChange={(ev) => this.onInputChange(ev)}\n                    onInputChange={(ev, val) => this.onInputChange(ev, val)}\n                    freeSolo\n                    renderInput={(params) => (<TextField {...params} label=\"Meal Name\" variant=\"filled\" />)}\n                    fullWidth\n                    className=\"mb-3\"\n                    value={this.state.mealName}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col md={6}>\n                  <TextField id=\"prepTime\" className=\"mb-2\" type=\"number\" fullWidth onChange={this.onTextFieldChange} label=\"PrepTime (mins)\" variant=\"filled\" required />\n                </Col>\n                <Col md={6}>\n                  <TextField id=\"cookTime\" className=\"mb-2\" type=\"number\" fullWidth onChange={this.onTextFieldChange} label=\"CookTime (mins)\" variant=\"filled\" required />\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col md={12} style={{ marginTop: \"20px\" }}>\n                  <input accept=\"image/*,video/mp4,video/mov,video/x-m4v,video/*\" id=\"mealImage\" name=\"mealImage\" type=\"file\" className=\"mb-2 pr-4\" onChange={(ev) => this.onUpdateMealImage(ev)} />\n                  <p><img id=\"MealsMainImages\" width=\"100%\" alt=\"main_Meal_Image\" style={{ display: \"none\" }} />\n                  </p>\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col md={12}>\n                  <TextField multiline id=\"intro\" fullWidth onChange={this.onTextFieldChange} label=\"Intro\" variant=\"filled\" className=\"mb-3 \" />\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col md={6}>\n                  <TextField id=\"servings\" fullWidth type=\"number\" onChange={this.onTextFieldChange} label=\"Serves\" variant=\"filled\" className=\"mb-3 \" placeholder=\"1 person, 2, 4 or 10 people\" />\n                </Col>\n                <Col md={6}>\n                  <TextField id=\"chef\" value={this.state.chef} fullWidth onChange={this.updateChef} label=\"Chef\" variant=\"filled\" className=\"mb-3 \" />\n                </Col>\n              </Row>\n              <b>Add Ingredients:</b>\n              <hr />\n              <Row className=\"mb-1\">\n                <Col>\n                  <Autocomplete\n                    id=\"currentIngredient\"\n                    options={this.props.productNames.map((option) => option)}\n                    // onChange={(ev)=>this.onTextFieldChange(ev)}\n                    value={this.state.currentIngredient}\n                    onChange={(ev, val) => this.handleProductNameInput(ev, val)}\n                    freeSolo\n                    renderInput={(params) => (<TextField {...params} id=\"currentIngredient\" label=\"ingredients\"\n                      value={this.state.currentIngredient} variant=\"filled\" type=\"text\"\n                    />)}\n                    fullWidth\n                    className=\"mb-3\"\n\n                  />\n                </Col>\n\n              </Row>\n              <Row className=\"mb-1\">\n\n                <Col md={5}>\n                  <TextField fullWidth id=\"currentIngredientQuantity\" type=\"number\" onChange={this.onTextFieldChange}\n                    label=\"Quantity\" variant=\"filled\" placeholder=\"1..\" className=\"mb-3\" value={this.state.currentIngredientQuantity} />\n                </Col>\n\n                <Col md={5}>\n                  <Autocomplete\n                    id=\"currentIngredientMeasurement\"\n                    options={this.props.measurements.map((option) => option)}\n                    value={this.state.currentIngredientMeasurement}\n                    onChange={this.handleIngredientMeasurement}\n                    freeSolo\n                    renderInput={(params) => (<TextField {...params}\n                      value={this.state.currentIngredientMeasurement} id=\"currentIngredientMeasurement\"\n                      label=\"Measurements\" variant=\"filled\" type=\"text\"  />)}\n                    className=\"mb-3\"\n                  />\n                </Col>\n\n                <Col md={2} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                  <Button variant=\"contained\" color=\"primary\" disableRipple onClick={this.addIngredientToMeal} style={{ color: \"white\", width: \"80%\" }} className=\"mb-3\" > Add Ingredient</Button>\n                </Col>\n\n              </Row>\n              <Row className=\"mb-2\">\n                <Col md={12}>\n                  <ChipInput\n                    label=\"IngredientsList\"\n                    value={this.state.ingredientStrings}\n                    onAdd={(chip) => this.handleAddIngredientChip(chip)}\n                    placeholder=\"e.g 1 Onion, 2 Cups of Water, etc\"\n                    onDelete={(chip) => this.handleDeleteIngredientChip(chip)}\n                    variant=\"filled\"\n                    fullWidth\n                    className=\"mb-2\"\n                  />\n                </Col>\n              </Row>\n\n              {/* // show all ingredients in two column table format */}\n              {/* Show all Products in display format as expected in Meal Page*/}\n\n              {/* <Container  >   */}\n              <Container style={{ flex: \"row-reverse\" }} >\n\n\n                {\n                  // reverse to display list in inputted orer           \n                  ingredientGroupList.map((data, index) => (\n                    <Col md={5} key={index} name=\"suggestedProductsContainer\" style={{ margin: \"1px\", backgroundColor: \"white\", boxShadow: \"1px 1px 4px 2px #00000030\" }}>\n\n                      {data.properIngredientStringSyntax}\n\n                      {/* <Col>\n                            <Autocomplete\n                              id=\"availableStores\"\n                              multiple\n                              freeSolo\n                              options={this.availableLocations.map((option) => option)}\n                              onChange={({index}, chip) => this.handleAddStoreChip({index}, chip)}\n                              // onInputChange={(ev, index) => this.handleAddStoreChip(ev, index)}         \n                              renderInput={(params) => (<TextField {...params} label=\"Available Store Locations\" variant=\"filled\" />)}\n                              fullWidth\n                              className=\"mb-3\"\n                              value={this.state.new_product_ingredients[index].availableLocations}\n                            />\n                            <b> Nutrition Facts (optional)</b>\n                            <br></br>\n                            <input id='calories' placeholder=\"calories\" label='Enter number of calories' type='number' />\n                            <input id='total_carbs' placeholder=\"total_carbohydrate\" label='Enter number of carbs in this product' type='number' />\n                            <input id='net_carbs' placeholder=\"net_carbs\" label='Enter net_carbs' type='number' />\n                            <input id='sugar' placeholder=\"sugar\" label='Enter grams of sugar' type='number' />\n                            <input id='protein' placeholder=\"protein\" label='Enter grams of protein' type='number' />\n                            <input id='fat' placeholder=\"fat\" label='Enter grams of fat' type='number' />\n                            <input id='sodium' placeholder=\"sodium\" label='Enter grams of sodium' type='number' /> <br></br>\n                            // <button> Save </button> \n                          </Col> */}\n                    </Col>\n                  ))\n                }\n\n              </Container>\n\n              {/* <ProductsPageModal\n                        value={this.state.ingredientGroupList}\n                        productIndex = {this.getProductIndex()}\n                        // {this.state.currentProductIndexDisplayed}\n                        // toggleProductPage={this.\n                        // openProductDetailsModal\n                      // }\n             /> */}\n              {/* \navailableLocations,\n    rawImages, productImages,\n    calories\n    total_carbs, net_carbs, fiber, fat, protein ,\n    sodium, cholesterol, vitamind, calcium, iron, potassium */}\n\n              <br /><hr /><br />\n              <Row>\n                <Col>\n                  <Autocomplete\n                    multiple\n                    id=\"kitchen_utenails\"\n                    freeSolo\n                    options={this.props.kitchenUtensils.map((option) => option)}\n                    // onChange={(ev,val)=>this.handleUtensilsDropdownChange(ev,val)}\n                    onChange={(e, val) => this.handleKitchenUtensilInputName(val)}\n                    renderInput={(params) => (<TextField {...params}\n                      label=\"Kitchen Utensils : Add any unique cooking utensils needed to make this meal (optional)\"\n                      variant=\"filled\" />)}\n                    fullWidth\n                    className=\"mb-3\"\n                    value={this.state.suggestedUtensils}\n                  />\n                  {/* <ChipInput label=\" className=\"mb-2\" fullWidth id=\"utensils\" onChange={(chip) => this.updateUtensils(chip)} variant=\"filled\" /> */}\n                </Col>\n              </Row>\n\n              {/* add kitchen slider template here? */}\n\n              <b>Add Recipe Chunks <sup>i</sup>:</b>\n              <hr />\n              {/* <Row className=\"mb-3\">\n                  <Col md={12}>\n                    <ChipInput label=\"Instructions\"  className=\"mb-2\" fullWidth  value={this.state.instructionsChip} onAdd={(chip) => this.handleAddInstructionStep(chip)} onDelete={(chip, index) =>this.handleDeleteInstructionsStep(chip, index)}   variant=\"filled\" />\n                  </Col>               \n                </Row> */}\n\n              <Row className=\"mb-3\">\n                <p> Upload photos/videos for different parts of recipe steps</p>\n\n                {/* <Col md={12}  className=\"mb-2\">\n                    <input accept=\"image/*,video/mp4,video/x-m4v,video/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2\" onChange={(ev)=>this.onhandleInstructionImg(ev)} />\n                  </Col>    */}\n\n                {/* <Col md={4}  style={{textAlign:\"center\", margin: \"auto\"}}> \n                    <Button variant=\"contained\" color=\"primary\"  disableRipple style={{color:\"white\", width:\"300px\"}}  className=\"mb-3\" onClick={this.addInstructionList}  > ADD NEW INSTRUCTION SET</Button>\n                  </Col> */}\n              </Row>\n\n              <Row>\n                <Col md={6}>\n                  <TextField id=\"chunk1Title\" className=\"mb-2\" onChange={(ev) => this.handleInstructionTitle(ev, 1)} label=\"Section 1 Title\" variant=\"filled\" />\n                  <br />\n                  <input accept=\"image/*,video/mp4,video/x-m4v,video/*\" id=\"instructionChunkContent1\" name=\"instructionChunkContent1\" type=\"file\" className=\"mb-2\" onChange={(ev) => this.onhandleInstructionImg(ev, 1)} />\n                  <p><img id=\"chunk1Image\" width=\"100%\" alt=\"recipe_step1_image_or_video\" style={{ display: \"none\" }} />\n                    <video width=\"100%\" id=\"chunk1Video\" style={{ display: \"none\" }} controls>\n                      Your browser does not support the video tag.\n                    </video>\n                  </p>\n                  <ChipInput label=\"Instructions\" className=\"mb-2\" fullWidth value={this.state.instructionChunk1.instructionSteps} onAdd={(chip) => this.handleAddInstructionStep(chip, 1)} onDelete={(chip, index) => this.handleDeleteInstructionsStep(chip, 1)} variant=\"filled\" />\n                </Col>\n                <Col md={6}>\n                  <TextField id=\"chunk2Title\" className=\"mb-2\" onChange={(ev) => this.handleInstructionTitle(ev, 2)} label=\"Section 2 Title\" variant=\"filled\" />\n\n                  <br />\n                  <input accept=\"image/*,video/mp4,video/x-m4v,video/*\" id=\"instructionChunkContent2\" name=\"instructionChunkContent2\" type=\"file\" className=\"mb-2\" onChange={(ev) => this.onhandleInstructionImg(ev, 2)} />\n                  <p><img id=\"chunk2Image\" width=\"100%\" alt=\"recipe_step2_image_or_video\" style={{ display: \"none\" }} />\n                    <video width=\"100%\" id=\"chunk2Video\" style={{ display: \"none\" }} controls>\n                      <source type=\"video/mp4\" id=\"chunk2VideoSource\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  </p>\n                  <ChipInput label=\"Instructions\" className=\"mb-2\" fullWidth value={this.state.instructionChunk2.instructionSteps} onAdd={(chip) => this.handleAddInstructionStep(chip, 2)} onDelete={(chip, index) => this.handleDeleteInstructionsStep(chip, 2)} variant=\"filled\" />\n\n                </Col>\n              </Row>\n              <Row>\n                <Col md={6}>\n                  <TextField id=\"chunk3Title\" className=\"mb-2\" onChange={(ev) => this.handleInstructionTitle(ev, 3)} label=\"Section 3 Title\" variant=\"filled\" />\n\n                  <br />\n                  <input accept=\"image/*,video/mp4,video/x-m4v,video/*\" id=\"instructionChunkContent3\" name=\"instructionChunkContent3\" type=\"file\" className=\"mb-2\" onChange={(ev) => this.onhandleInstructionImg(ev, 3)} />\n                  <p><img id=\"chunk3Image\" width=\"100%\" alt=\"recipe_step3_image_or_video\" style={{ display: \"none\" }} />\n                    <video width=\"100%\" id=\"chunk3Video\" style={{ display: \"none\" }} controls>\n                      <source type=\"video/mp4\" id=\"chunk3VideoSource\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  </p>\n                  <ChipInput label=\"Instructions\" className=\"mb-2\" fullWidth value={this.state.instructionChunk3.instructionSteps} onAdd={(chip) => this.handleAddInstructionStep(chip, 3)} onDelete={(chip, index) => this.handleDeleteInstructionsStep(chip, 3)} variant=\"filled\" />\n\n                </Col>\n                <Col md={6}>\n                  <TextField id=\"chunk4Title\" className=\"mb-2\" onChange={(ev) => this.handleInstructionTitle(ev, 4)} label=\"Section 4 Title\" variant=\"filled\" />\n\n                  <br />\n                  <input accept=\"image/*,video/mp4,video/x-m4v,video/*\" id=\"instructionChunkContent4\" name=\"instructionChunkContent4\" type=\"file\" className=\"mb-2\" onChange={(ev) => this.onhandleInstructionImg(ev, 4)} />\n                  <p><img id=\"chunk4Image\" width=\"100%\" alt=\"recipe_step4_image_or_video\" style={{ display: \"none\" }} />\n                    <video width=\"100%\" id=\"chunk4Video\" style={{ display: \"none\" }} controls>\n                      <source type=\"video/mp4\" id=\"chunk4VideoSource\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  </p>\n                  <ChipInput label=\"Instructions\" className=\"mb-2\" fullWidth value={this.state.instructionChunk4.instructionSteps} onAdd={(chip) => this.handleAddInstructionStep(chip, 4)} onDelete={(chip, index) => this.handleDeleteInstructionsStep(chip, 4)} variant=\"filled\" />\n                </Col>\n              </Row>\n              <Row>\n                <Col md={6}>\n                  <TextField id=\"chunk5Title\" className=\"mb-2\" onChange={(ev) => this.handleInstructionTitle(ev, 5)} label=\"Section 5 Title\" variant=\"filled\" />\n\n                  <br />\n                  <input accept=\"image/*,video/mp4,video/x-m4v,video/*\" id=\"instructionChunkContent5\" name=\"instructionChunkContent5\" type=\"file\" className=\"mb-2\" onChange={(ev) => this.onhandleInstructionImg(ev, 5)} />\n                  <p><img id=\"chunk5Image\" width=\"100%\" alt=\"recipe_step5_image_or_video\" style={{ display: \"none\" }} />\n                    <video width=\"100%\" id=\"chunk5Video\" style={{ display: \"none\" }} controls>\n                      <source type=\"video/mp4\" id=\"chunk5VideoSource\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  </p>\n                  <ChipInput label=\"Instructions\" className=\"mb-2\" fullWidth value={this.state.instructionChunk5.instructionSteps} onAdd={(chip) => this.handleAddInstructionStep(chip, 5)} onDelete={(chip, index) => this.handleDeleteInstructionsStep(chip, 5)} variant=\"filled\" />\n                </Col>\n                <Col md={6}>\n                  <TextField id=\"chunk6Title\" className=\"mb-2\" onChange={(ev) => this.handleInstructionTitle(ev, 6)} label=\"Section 6 Title\" variant=\"filled\" />\n\n                  <br />\n                  <input accept=\"image/*,video/mp4,video/x-m4v,video/*\" id=\"instructionChunkContent6\" name=\"instructionChunkContent6\" type=\"file\" className=\"mb-2\" onChange={(ev) => this.onhandleInstructionImg(ev, 6)} />\n                  <p><img id=\"chunk6Image\" width=\"100%\" alt=\"recipe_step6_image_or_video\" style={{ display: \"none\" }} />\n                    <video width=\"100%\" id=\"chunk6Video\" style={{ display: \"none\" }} controls>\n                      <source type=\"video/mp4\" id=\"chunk6VideoSource\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  </p>\n                  <ChipInput label=\"Instructions\" className=\"mb-2\" fullWidth value={this.state.instructionChunk6.instructionSteps} onAdd={(chip) => this.handleAddInstructionStep(chip, 6)} onDelete={(chip, index) => this.handleDeleteInstructionsStep(chip, 6)} variant=\"filled\" />\n                </Col>\n              </Row>\n\n              <hr />\n\n              <Row className=\"mb-3\">\n                <Col md={12}>\n                  <Autocomplete\n                    multiple\n                    id=\"tags-filled\"\n                    className=\"mb-2\"\n                    freeSolo\n                    // filterSelectedOptions\n                    options={this.props.categories.map((option) => option)}\n                    // onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n                    onChange={(e, newValue) => this.handleCategoryDropdownChange(newValue)}\n                    // getOptionLabel={option => option}\n                    // renderTags={() => {}}\n                    value={this.state.suggestedCategories}\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        variant=\"filled\"\n                        label=\"Categories\"\n                        placeholder=\"Suggest categories for this meal..\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </Col>\n\n              </Row>\n              <Row>\n                <Col md={12}>\n                  {/* <ChipInput label=\"tips\" className=\"mb-2\" fullWidth value={this.state.tips} onAdd={(chip) => this.updateTip(chip)} onDelete={(chip, index) => this.deleteTip(chip, index)} variant=\"filled\" /> */}\n                  <ChipInput id=\"tips\" label=\"Tips(optional): include any modifications to this meal you will like to add\" className=\"mb-3\" fullWidth value={this.state.tips} onAdd={(chip) => this.updateTip(chip)} onDelete={(chip, index) => this.deleteTip(chip, index)} variant=\"filled\" />\n\n                </Col>\n              </Row>\n              <u onClick={this.openProductDetailsModal}> Show Preview +</u>\n              <br /><br />\n              <div id=\"ProductAdditionalDataDisplayed\" >\n                {/* <PreviewMealsPage mealData=\"Passed in meal name\" mealPrep = {this.state.instructionGroupData}/> */}\n              </div>\n              <Row className=\"mb-5\">\n                <Col md={12}>\n                  <ThemeProvider theme={theme}>\n                    <Button variant=\"contained\" className=\"mb-2\" color=\"primary\" style={{ color: \"white\", width: \"100%\" }} onClick={() => this.sendSuggestedMealToDB()}> Add Meal</Button>\n                  </ThemeProvider>\n                </Col>\n                <TextField>View privacy policy <sup>i</sup></TextField>\n              </Row>\n            </form>\n          </div>\n        </div>\n        <Dialog\n          open={this.state.booleanOfDisplayOfDialogBoxConfirmation}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          maxWidth=\"xs\"\n          fullWidth\n        >\n          <DialogTitle id=\"alert-dialog-title\">Information</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Successfully added to database</DialogContentText>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default SuggestMeal;\n\n\n    // fetch(url, {\n    //   method: 'POST',\n    //   credentials: 'include',\n    //   headers: {\n    //     // 'Content-type': 'application/json',\n    //     'Content-type': 'multipart/form-data',\n\n    //   },\n    //   // body: JSON.stringify(this.state.selected),\n    //   // body: JSON.stringify(suggestMealForm)\n    //   body: suggestMealForm\n\n    // }).then(response => {\n    //     console.log(response)\n    //     // if (response.status >= 200 && response.status < 300) {\n    //     if(response.status === 200 ){\n    //       console.log(response);\n    //       console.log(\"Display Meal submitted successfully\");\n    //       return (window.location.href = \"/ViewSuggestedMeals\");\n    //     }\n    //   })\n    //   .catch(error => {\n    //     console.log(error);\n    //   });\n\n// handleAddStoreChip(index, chip) {\n//   // add store to new products available_locations from new products list\n//   // add store to local avaialable locations for further use,\n//   // and store to suggested locations list for admin reference \n//   console.log(\" chip is \" + chip + \" and group list is: \");\n//   console.log(this.state.ingredientGroupList);\n\n\n//   // let tmp_new_products_list = this.state.new_product_ingredients;\n\n//   // let specific_new_products_available_locations = tmp_new_products_list[index].availableLocations;\n\n//   // check if to use value for input or innerhtml for dropdown selection\n//   if (chip !== undefined) {\n//     console.log(\" chip target value is \" + chip + \" and index is \" + index);\n//     // add store location to new products available locations\n//     // specific_new_products_available_locations = [specific_new_products_available_locations, chip];\n//     // this.availableLocations = [this.availableLocations, chip];\n//   }\n//   else {\n//     console.log(\" chip is undefined\");\n\n//   //   console.log(\" chips inner html is \" + chip+ \" and index is \" + index);\n//   //   specific_new_products_available_locations = [specific_new_products_available_locations, event.target.innerHTML];\n//   //   this.availableLocations = [this.availableLocations, event.target.innerHTML];\n//   }\n\n//   // store back in product and list to update state\n//   // tmp_new_products_list[chip].availableLocations = specific_new_products_available_locations;\n\n//   // update store locations in product locations as well\n//   // this.setState({ new_product_ingredients: tmp_new_products_list });\n\n// }\n\n// /////////////////////////////////////////////////////////////////////////////////////\n// handleStoreNameInput = (event, newProductsIndex) => {\n//   // const searchResult = this.availableLocations.map(function callback(element){\n//   //   let availableLocation = element.toLowerCase();\n//   //   // console.log(event.target.innerHTML);\n//   //   // console.log(event.target.value);\n\n//   //   if(availableLocation === event.target.innerHTML.toLowerCase()){return true; }\n//   //   else{return false;}\n//   // });\n\n//   // const tmpCurrStoreIndexIfExistsInProductsList = searchResult.indexOf(true);\n//   // console.log(\"Curr Store Index If Exists In Store List is: \\n\"+tmpCurrStoreIndexIfExistsInProductsList);\n\n//   // check if product name is an existing product\n//   // set product existense to index, so one will not need to edit\n//   // this.setState({currStoreIndexIfExistsInProductsList:tmpCurrStoreIndexIfExistsInProductsList});\n\n//   // set current ingredient to input Product regardless\n//   // console.log(\"Event is: \\n\"+ event.target);\n//   let tmp_new_products_list = this.state.new_product_ingredients;\n\n//   if (event != null && event.target.value !== null) {\n//     // update store locations in product locations as well\n//     this.setState({ new_product_ingredients: [tmp_new_products_list, event.target.innerHTML] });\n//   }\n//   else {\n//     this.setState({ new_product_ingredients: [tmp_new_products_list, event.target.value] });\n//   }\n//   // }\n//   // else{\n//   //   console.log('val is null!');\n//   // }\n// }\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  // addInstructionList =()=>{\n  //   if( this.state.instructionsChip.length ===0 ) return;\n  //   let tmp = {\n  //     step: this.state.instructionsChip,\n  //     imgdata: this.state.instructionImgData,\n  //     imgpath: this.state.instructionImgPath,\n  //   }\n  //   this.setState({instructionGroupList: [...this.state.instructionGroupList, tmp ]});\n  //   this.setState({instructionsChip:[], instructionImgData: null, instructionImgPath:\"\" });\n  // }\n\n  //   {/* Servings */}\n  // {/* <Row className=\"mb-3\"> */}\n  //   {/* confirm what is this loading img src ? */}\n  // {/* <Col md={4} style={{  marginTop:\"20px\", textAlign:\"center\"}}>\n  //   <img src={loading_imgSrc} width=\"70%\" height=\"auto\"  alt=\"\"/>\n  // </Col>\n  //   <Col md={4}  style={{textAlign:\"center\", margin: \"auto\"}}> </Col>\n  //   <Col md={4}  style={{textAlign:\"center\", margin: \"auto\"}}> </Col>\n  // </Row> */}\n\n\n  // handle submission of NEW products\n    // let productImgForm = new FormData();\n    // let img_count1 = 0;\n    // // check for Ingredient products that do not already have an image in database\n    // for (var i = 0; i < ingredientGroupList.length; i++){\n    //   if (ingredientGroupList[i].productImgData !== null)\n    //   {\n    //     // appending all known ingredient product images to product image form..\n    //     productImgForm.append('productImgs', ingredientGroupList[i].productImgData);\n    //     img_count1++;\n    //   }\n    // }\n\n    // TO DELETE algorithm once we store Product images in Multer then Mongo.\n    // let productImg_paths = null;\n    // if(img_count1 !== 0){\n    //   // Sending post with all products/ingredients images to get an image url for it ??\n    //   var productImg_url = \"/getProductImgURL/\";\n    //   const productImg_config = {  method: 'POST',  data: productImgForm, url: productImg_url };\n\n    //   const response = await axios(productImg_config)\n    //   console.log(\"UploadedImage_URL: \", response)\n    //   productImg_paths = response.data.productImg_paths;\n    // }\n\n    //comenting out section based on storing all suggested product images on file server\n    //  let image = \"\";\n    //  // Confirm what is the difference between productImgData AND productImgPath ***\n    //  if (ingredientGroupList[i].productImgData !== null)\n    //  {\n    //    // setting the image to be at the returned value of where the path of the image will now be stored ?? NO.\n    //    n1++; image = productImg_paths[n1]\n    //  }\n    //  else{\n    //    // set image to url if no img data ?\n    //    image = ingredientGroupList[i].productImgPath;\n    //  }\n    // add image to temporary slider data\n\n\n    // var instructionImg_paths = null;\n    // if(img_count !== 0){\n    //   var instructionImg_url = \"/getInstructionImgURL/\";\n    //   const instructionImg_config = {  method: 'POST',  data: instructionImgForm, url: instructionImg_url };\n\n    //   const response = await axios(instructionImg_config)\n    //   instructionImg_paths = response.data.instrutionImg_paths;\n    // }\n\n    // let tmp = {\n    //   step: tmp_instructionItem.step,\n    //   imgdata: event.target.files[0],\n    //   imgpath: URL.createObjectURL(event.target.files[0]),\n    // };\n\n        // for ( i = 0; i < instructionGroupList.length; i++){\n    //   let image = null;\n    //   if (instructionGroupList[i].imgdata !== null)\n    //   {   n ++; image = instructionImg_paths[n] }\n\n    //   let tmp = {\n    //     step: instructionGroupList[i].step,\n    //     image: image,\n    //   }\n    //   instructionGroupData.push(tmp);\n    // }\n\n\n\n    // NOt sure what this comp_instructions is, but its caller was commented out ...\n    // var comp_instructions = [];\n    // var count_index = 1;\n    // for (let i = 0; i < this.state.instructionGroupList.length ; i++) {\n    //   if(i !==0 ){\n    //     count_index += this.state.instructionGroupList[i-1].step.length;\n    //   }\n\n    //   comp_instructions.push(\n    //     <div key={i}  className=\"mb-3\" style={{margin:\"10px\", padding:\"10px\", backgroundColor:\"white\",  boxShadow: \"1px 1px 4px 2px #00000030\"}}>\n    //       <Row style={{justifyContent: \"flex-end\"}}>\n    //         <i className=\"fa fa-remove\" style={{fontSize:\"50%\", marginTop: \"0px\", marginRight: \"15px\"}} onClick={()=>this.onHandleInstructionItem(i)}></i>\n    //       </Row>\n    //       <Row >\n    //         <Col md={4}  className=\"mb-2\" style={{overflowWrap: \"break-word\"}}>\n    //           <div className=\"mdc-list\">\n    //             {this.state.instructionGroupList[i].step.map((chip, index1) => (\n    //               <div className=\"mdc-list-item\" key={index1}>\n    //                 <span className=\"mdc-list-item__text\">{index1+count_index}.\n    //                   <span className=\"mdc-list-item__text\"> {chip}</span>\n    //                 </span>\n    //               </div>\n    //             ))}\n    //           </div>\n    //         </Col>\n    //         <Col md={4}  className=\"mb-2\" style={{textAlign: \"center\"}}>\n    //           <img className=\"mb-2\" src={this.state.instructionGroupList[i].imgpath} width=\"auto\" height=\"150px\" alt=\"\"/>\n    //           <input accept=\"image/*,video/mp4,video/x-m4v,video/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2, ml-3\" onChange={(ev)=>this.onUpdateInstructionImg(ev, i)} />\n    //         </Col>\n    //         <Col md={4}  className=\"mb-2\"></Col>\n    //       </Row>\n    //     </div>\n    //   )\n    // }\n\n      ///////////////////////////////////////////////////////////////////////////////////////\n  // onHandleInstructionItem = (ind) =>{\n  //   const array  =this.state.instructionGroupList;\n  //   array.splice(ind, 1);\n  //   this.setState({instructionGroupList: array});\n  //   // instructionChunks\n  //FG }\n\n  // Handle load file update for product image in this function\n  ///////////////////////////////////////////////////////////////////////////////////////\n  // if image already exists, append image, else suggest new image to Suggessted Product\n  // onUpdateIngredientImg = (event, idName) => {\n  //   if (event.target.files[0] === undefined) return;\n  //   let thisImageOrVideo = event.target.files[0];\n  //   let particularArray;\n  //   // this.setState({ mealImage: event.target.files[0] });\n  //   // Allowing file type\n  //   var allowedImageExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.)$/i;\n  //   if (allowedImageExtensions.exec(event.target.files[0].name)) {\n  //     //display meals main image or videoin suggest po0======\n  //     var image = document.getElementById(idName);\n  //     image.style.display = \"block\";\n  //     image.src = URL.createObjectURL(event.target.files[0]);\n  //     console.log(event.target.files[0]);\n  //     console.log(allowedImageExtensions.exec(event.target.files[0].name));\n  //     console.log(URL.createObjectURL(event.target.files[0]));\n  //     console.log(image.src);\n  //   }\n  //   else {\n  //     alert(\"Invalid image type\");\n  //   }\n    // if (event.target.files[0] === null || this.state.ingredientGroupList.length<= ind) return;\n    // const tmp_ingredientData = this.state.ingredientGroupList;\n    // const tmp_ingredientItem = tmp_ingredientData[ind];\n    // var tmp1 = { bkk\n    //   product: tmp_ingredientItem.product,\n    //   quantity: tmp_ingredientItem.quantity,\n    //   measurement: tmp_ingredientItem.measurement,\n    //   productImgData: event.target.files[0],\n    //   // productImgPath: event.target.files[0].path,\n    //   // Should we store suggested products directly on server? Is that safe ?\n    //   // Perhaps we should add to Mongo as image object instead, YES.\n    //   // productImgPath: URL.createObjectURL(event.target.files[0].path),\n    //   display: false,\n    // };\n    // tmp_ingredientData[ind] = tmp1;\n    // this.setState({ingredientGroupList: tmp_ingredientData});\n    // // update new Products array if Ingredient is a new Product.\n  // }","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n// import Chip from \"@material-ui/core/Chip\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"; // createFilterOptions,\n// import axios from 'axios';\nimport axios from '../util/Api';\nimport { Row, Col } from \"react-bootstrap\";\nimport Button from '@material-ui/core/Button';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport {Dialog, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\n\nclass SuggestProduct extends Component {\n  products = [];\n  productsImg_path = [];\n  categories = [];\n  measurements = [\"mL\",\"oz\",\"L\",\"cup(s)\",\"Tbsp\",\"tsp\",\"pt\",\"lb\",\"g\",\"kg\",\"lb\"];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      productLabel: \"\",\n      currentIngredientMeasurement: \"\",\n      currentIngredientQuantity: \"\",\n      ingredientStrings: [],\n      instructionsChip: [],      \n      categoryChips: [\"snacks\", \"abc\", \"123\"],\n      productsPopulated: false,\n      imgSrc: null,\n      loading_imgSrc:\"\",\n      open:false,\n      productImgSetting_flag: false,\n      productImgSrc: null,\n      productImg_path:\"\",\n      product_ind: 0,\n      categoryList:[]\n    };\n\n    this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(\n      this\n    );\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(\n      this\n    );\n    this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    var url = \"/get-all-products\";\n      axios.get(url).then((body) => {\n        var productsList = body.data;\n        if (productsList && productsList.data.length !== 0) {\n          console.log(\"returns GET ALL PRODUCTS \");\n          for (var i = 0; i < productsList.data.length; i++) {\n            this.products.push(productsList.data[i].product_name);\n            this.productsImg_path.push(productsList.data[i].product_image);\n          }\n          console.log(\"PRINTING ALL PRODUCTS LIST\");\n          console.log(this.products);\n          this.setState({ productsPopulated: true });          \n        } else {\n          console.log(\"get all products function does not return\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //----get category meals-------------------------\n    url = \"/get-all-categories\";\n    axios.get(url).then((body) => {        \n        var categoryList = body.data;\n        if (categoryList && categoryList.data.length !== 0) {\n          console.log(\"returns GET of ALL Categories \");\n\n          for (var i = 0; i < categoryList.data.length; i++) {\n            this.categories.push(categoryList.data[i].category_name);\n          }\n          console.log(\"PRINTING UPDATED CATEGORIES LIST\");\n        } else {\n          console.log(\"get all products function does not return\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleClose = () => { this.setState({open: false});};\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onTextFieldChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onTextFieldClick = (event) => {    \n    if (event.target.files[0] === undefined ) return;\n    this.setState({ imgSrc: event.target.files[0] });\n    this.setState({ loading_imgSrc:  URL.createObjectURL(event.target.files[0]) });\n    this.setState({ img_change_flag: true });\n\n  };\n\n///////////////////////////////////////////////////////////////////////////////////////\n  onhandleProductImg = (event) => {   \n    if (event.target.files[0] === undefined ) return;\n    this.setState({ productImgSrc: event.target.files[0] });\n    if (event.target.files[0] !== null) {\n        this.setState({ productImg_path:  URL.createObjectURL(event.target.files[0]) });\n    }\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onhandleInstructionImg = (event) => { \n    if (event.target.files[0] === undefined ) return;  \n    this.setState({ instructionImgData: event.target.files[0] });\n    if (event.target.files[0] !== null) {\n        this.setState({ instructionImgPath:  URL.createObjectURL(event.target.files[0]) });\n    }\n  };\n\n///////////////////////////////////////////////////////////////////////////////////////\n  handleAddIngredientChip(chip) {\n    this.setState({\n      ingredientStrings: [...this.state.ingredientStrings, chip],\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddCategoryChip(chip) {\n    this.setState({ categoryChips: [...this.state.categoryChips, chip] }); //\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddInstructionStep(chip) {\n    this.setState({\n      instructionsChip: [...this.state.instructionsChip, chip],\n    });\n  }\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddCategoryStep() {\n   console.log(\"FFFFFFFFFFFFFF+++++++++\");\n  }\n  \n  ///////////////////////////////////////////////////////////////////////////////////////\n  onHandleIngredientItem = (ind) =>{\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var array3 = this.state.ingredientGroupList;\n    if (ind !== -1) {\n      array.splice(ind, 1);\n      array3.splice(ind, 1);\n      this.setState({ ingredientStrings: array,ingredientGroupList: array3});\n    }\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onHandleInstructionItem = (ind) =>{\n    const array  =this.state.instructionGroupList;\n    array.splice(ind, 1);\n    this.setState({instructionGroupList: array});\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateIngredientImg= (event, ind) =>{\n    if (event.target.files[0] === null || this.state.ingredientGroupList.length<= ind) return;\n    const tmp_ingredientData = this.state.ingredientGroupList;\n    const tmp_ingredientItem = tmp_ingredientData[ind];\n\n    var tmp1 = { \n      product: tmp_ingredientItem.product,  \n      quantity: tmp_ingredientItem.quantity,  \n      measurement: tmp_ingredientItem.measurement, \n      productImgData: event.target.files[0],\n      productImgPath: URL.createObjectURL(event.target.files[0]),\n      flag: true,\n    };\n    tmp_ingredientData[ind] = tmp1;\n    this.setState({ingredientGroupList: tmp_ingredientData});\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateInstructionImg = (event, ind) =>{\n    if (event.target.files[0] === null || this.state.instructionGroupList.length<= ind) return;\n    const tmp_instructionData = this.state.instructionGroupList;\n    const tmp_instructionItem = tmp_instructionData[ind];\n\n    let tmp = {\n      step: tmp_instructionItem.step,\n      imgdata: event.target.files[0],\n      imgpath: URL.createObjectURL(event.target.files[0]),\n    };\n\n    tmp_instructionData[ind] = tmp;\n    this.setState({instructionGroupList: tmp_instructionData});\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteIngredientChip(chip) {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var array3 = this.state.ingredientGroupList;\n\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      array3.splice(index, 1);\n\n      this.setState({ ingredientStrings: array, ingredientGroupList:array3});\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteCategoryChip(chip) {\n    var array = [...this.state.categoryChips]; // make a separate copy of the array\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ categoryChips: array });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleDeleteInstructionsStep(chip) {\n    var array = [...this.state.instructionsChip]; // make a separate copy of the array\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ instructionsChip: array });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleIngredientQuantity(event) {\n    console.log(event.target.value);\n    this.setState({ currentIngredientQuantity: event.target.value });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleIngredientDropdownChange=(event,val)=>{\n    var array = this.products; \n    var index = array.indexOf(val);\n    if (index !== -1) {      \n      this.setState({ product_ind: index });\n    }\n\n    if (event.target.value!== null) {\n      this.setState({ currentIngredient: val });\n    } else {\n      this.setState({ currentIngredient: event.target.innerHTML });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleProductName=(event, val)=>{\n    const searchResult = this.products.map(element=>element.toLowerCase().includes(val.toLowerCase()));\n    const flag = searchResult.find(element=>element === true);\n\n    if(flag !== true || flag ===null) {\n      this.setState({productImgSetting_flag:true});\n      this.setState({ currentIngredient: val });\n    }else{\n      this.setState({productImgSetting_flag:false});\n      this.setState({ currentIngredient: val});\n    }\n  }\n\n\n ///////////////////////////////////////////////////////////////////////////////////////\n  handleCategoryDropdownChange=(val)=>{\n    this.setState({categoryList: val});\n  }\n\n\n///////////////////////////////////////////////////////////////////////////////////////\n  handleIngredientMeasurement(event) {\n    if (event.target.value) {\n      this.setState({ currentIngredientMeasurement: event.target.value });\n    } else {\n      this.setState({ currentIngredientMeasurement: event.target.innerHTML });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  addIngredientToMeal(event) {\n    event.preventDefault();\n    var properIngredientStringSyntax;\n    if (document.getElementById(\"currentIngredient\").value === \"\") {   window.alert(\"Enter an ingredient to add to meal\");   return;  }\n    // update ingredient string syntax for no quantity or no measurement.\n    if (this.state.currentIngredientQuantity === 0) {\n      properIngredientStringSyntax = document.getElementById(\"currentIngredient\").value;\n    } else if (  document.getElementById(\"currentIngredientMeasurement\").value === null  ) {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity +  \" \" +  document.getElementById(\"currentIngredient\").value;\n    } else {\n      properIngredientStringSyntax =\n        \"\" + this.state.currentIngredientQuantity + \" \" +  document.getElementById(\"currentIngredientMeasurement\").value +\n        \" of \" + document.getElementById(\"currentIngredient\").value;\n    }\n\n    var currProductObject = { \n      product: this.state.currentIngredient,  \n      quantity: this.state.currentIngredientQuantity,  \n      measurement: this.state.currentIngredientMeasurement, \n      productImgData: this.state.productImgSrc,\n      productImgPath: null,\n      flag: this.state.productImgSetting_flag,\n    };\n\n    if(this.state.productImgSetting_flag ){\n      currProductObject.productImgPath = this.state.productImg_path;\n      currProductObject.flag = true\n    }else{\n      currProductObject.productImgPath = this.productsImg_path[this.state.product_ind];\n      currProductObject.flag = false;\n    }\n   \n\n    this.handleAddIngredientChip(properIngredientStringSyntax);\n    this.setState({ ingredientGroupList: [ ...this.state.ingredientGroupList,  currProductObject ] });\n    this.setState({ productImgSrc: null, productImg_path:\"\" });\n    this.setState({ currentIngredient:\"\",  currentIngredientQuantity:\"\", currentIngredientMeasurement:\"\"});\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  addInstructionList =()=>{\n    if( this.state.instructionsChip.length ===0 ) return;\n    let tmp = {\n      step: this.state.instructionsChip,\n      imgdata: this.state.instructionImgData,\n      imgpath: this.state.instructionImgPath,\n    }\n    this.setState({instructionGroupList: [...this.state.instructionGroupList, tmp ]});\n    this.setState({instructionsChip:[], instructionImgData: null, instructionImgPath:\"\" });\n  }\n \n\n///////////////////////////////////////////////////////////////////////////////////////\n  sendSuggestedMealToDB = async (e) => {\n    const { productLabel, intro,servings,ingredientStrings,ingredientGroupList, instructionGroupList,imgSrc,readTime,cookTime,categoryList} = this.state;\n\n    if (productLabel === \"\") {  console.log(\"meal label blank\"); return; }\n    if (ingredientStrings.length === 0) {   window.alert( \"Suggested meal requires adding at least one ingredient to submit\" );   return;  }\n    if (imgSrc === null) {   window.alert( \"You didn't add suggested meal image\" );   return;  }\n\n    //------------- to get glabal path for instrution image ----------------------------------------\n    let productImgForm = new FormData();\n    let img_count1 = 0;\n    for (var i = 0; i < ingredientGroupList.length; i++){\n      if (ingredientGroupList[i].productImgData !== null)\n      {\n        productImgForm.append('productImgs', ingredientGroupList[i].productImgData);\n        img_count1 ++;\n      }\n    }\n\n    let productImg_paths = null;\n    if(img_count1 !== 0){\n      var productImg_url = \"/getProductImgURL/\";\n      const productImg_config = {  method: 'POST',  data: productImgForm, url: productImg_url };\n\n      const response = await axios(productImg_config)\n      console.log(\"UploadedImage_URL: \", response)\n      productImg_paths = response.data.productImg_paths;\n    }\n\n    //-------------to make prodcut data ------------------------------------------\n    const formatted_ingredient1 = [];\n    const product_slider = [];\n    let n1 = -1;\n    for (i = 0; i < ingredientGroupList.length; i++){\n      var tmp_ingredient = { \n        product: ingredientGroupList[i].product,  \n        quantity: ingredientGroupList[i].quantity,  \n        measurement: ingredientGroupList[i].measurement, \n      };\n      formatted_ingredient1.push(tmp_ingredient);\n\n      //-----------------------------------------------\n     let image = \"\";\n     if (ingredientGroupList[i].productImgData !== null)\n     {   \n       n1 ++; image = productImg_paths[n1]\n     }\n     else{\n       image = ingredientGroupList[i].productImgPath;\n     }\n      const tmp_slider_data = { \n        ingredient: ingredientGroupList[i].product,  \n        image: image,  \n        flag: ingredientGroupList[i].flag, \n      };\n      product_slider.push(tmp_slider_data);\n    }\n\n    //------------- to get glabal path for instrution image ----------------------------------------\n    let instructionImgForm = new FormData();\n    let img_count = 0;\n    for ( i = 0; i < instructionGroupList.length; i++){\n      if (instructionGroupList[i].imgdata !== null)\n      {\n        instructionImgForm.append('instructionImgs', instructionGroupList[i].imgdata);\n        img_count ++;\n      }\n    }\n\n    var instructionImg_paths = null;\n    if(img_count !== 0){\n      var instructionImg_url = \"/getInstructionImgURL/\";\n      const instructionImg_config = {  method: 'POST',  data: instructionImgForm, url: instructionImg_url };\n\n      const response = await axios(instructionImg_config)\n      instructionImg_paths = response.data.instrutionImg_paths;\n    }\n\n    //-------------to make instruction data ------------------------------------------\n    const instructionGroupData = [];\n    let n = -1;\n    for ( i = 0; i < instructionGroupList.length; i++){\n      let image = null;\n      if (instructionGroupList[i].imgdata !== null)\n      {   n ++; image = instructionImg_paths[n] }\n\n      let tmp = {\n        step: instructionGroupList[i].step,\n        image: image,\n      }\n      instructionGroupData.push(tmp);\n    }\n\n    //-------------to make new category data ------------------------------------------\n    let new_categories = [];\n    for(i =0; i< categoryList.length; i++)\n    {\n      let index = this.categories.indexOf(categoryList[i]);\n      if(index===-1) new_categories.push(categoryList[i])\n    }\n\n    //-------------to make ingredient data ------------------------------------------\n    var url = \"/addMealSuggestion/\";\n\n    let suggestMealForm = new FormData();\n    suggestMealForm.append('productLabel', productLabel);\n    suggestMealForm.append('intro', intro);\n    suggestMealForm.append('servings', servings);\n    suggestMealForm.append('product_slider', JSON.stringify(product_slider));\n    suggestMealForm.append('formatted_ingredient', JSON.stringify(formatted_ingredient1));\n    suggestMealForm.append('instructionsGroupList', JSON.stringify(instructionGroupData));\n    suggestMealForm.append('ingredientStrings', ingredientStrings);\n    suggestMealForm.append('readTime', readTime);\n    suggestMealForm.append('cookTime', cookTime);\n    suggestMealForm.append('categoryChips', JSON.stringify(categoryList));    \n    suggestMealForm.append('newCategories', JSON.stringify(new_categories)); \n\n    suggestMealForm.append('imgSrc', imgSrc);\n    \n    const config = {  method: 'POST',  data: suggestMealForm, url: url };\n    axios(config).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        this.setState({ open : true});\n        console.log(response);\n        console.log(\"Display Meal submitted successfully\");   \n        window.location.href = \"/SuggestMeal\"  \n      } else {\n        console.log(\"Somthing happened wrong\");\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  render(){\n    const theme = createMuiTheme({\n      palette: { primary: green, },\n    });\n  \n    const {loading_imgSrc, categoryList} = this.state;\n\n    return (\n      <div>\n        <div style={{ width:\"85%\" , margin:\"auto\", backgroundColor: \"#f4f4f4\"}}>\n          <div style={{ padding:\"20px\", boxShadow: \"1px 1px 4px 2px #00000030\"}}>\n            <div id=\"title\" style={{  marginTop:\"20px\", marginBottom:\"20px\", }}>\n              <b>Suggest Product</b>\n            </div>\n            <form noValidate autoComplete=\"off\">      \n                <Row className=\"mb-1\">\n                  <Col md={4}>\n                    <Autocomplete\n                      id=\"currentIngredient\"\n                      options={this.products.map((option) => option)}\n                      onChange={(ev,val)=>this.handleIngredientDropdownChange(ev,val)}\n                      onInputChange={(ev, val) => this.handleProductName(ev, val)}\n                      freeSolo\n                      renderInput={(params) => ( <TextField {...params} label=\"Product Name\" variant=\"filled\"/>)}\n                      fullWidth \n                      className=\"mb-3\"\n                      value={this.state.currentIngredient}\n                    />\n                   \n                    {/* <TextField fullWidth id=\"currentIngredientQuantity\" type=\"number\"  onChange={this.onTextFieldChange}  label=\"Quantity\" variant=\"filled\" placeholder=\"1..\"  className=\"mb-3\" value={this.state.currentIngredientQuantity}/> */}\n                  </Col>\n                  <Col md={4} style={{  marginTop:\"20px\"}}>\n                    <input accept=\"image/*\" id=\"imgSrc\" type=\"file\" className=\"mb-2 pr-4\" onChange={(ev)=>this.onTextFieldClick(ev)} /> \n                </Col>\n                <Col md={4} style={{  marginTop:\"20px\", textAlign:\"center\"}}>\n                  <img src={loading_imgSrc} width=\"70%\" height=\"auto\"  alt=\"\"/>\n                </Col>   \n\n                  {/* <Col md={4}  style={{textAlign:\"center\", margin: \"auto\"}}> \n                    <Button variant=\"contained\" color=\"primary\" disableRipple onClick={this.addIngredientToMeal} style={{color:\"white\", width:\"80%\"}}  className=\"mb-3\" > Add Ingredient</Button>\n                  </Col>             */}\n                </Row>\n                <Row className=\"mb-3\">\n                  <Col md={4}>\n                    <Autocomplete\n                        multiple\n                        id=\"tags-filled\"\n                        className=\"mb-2\" \n                        freeSolo\n                        // filterSelectedOptions\n                        options={this.categories.map((option) => option)} \n                        // onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n                        onChange={(e, newValue) => this.handleCategoryDropdownChange(newValue)}\n                        // getOptionLabel={option => option}\n                        // renderTags={() => {}}\n                        value={categoryList}\n                        renderInput={params => (\n                          <TextField\n                            {...params}\n                            variant=\"filled\"\n                            label=\"Categories\"\n                            placeholder=\"Suggest categories for this meal..\"\n                            fullWidth\n                          />\n                        )}\n                      />\n                    \n                  </Col>        \n                </Row>\n\n                <hr/>\n\n                <Row className=\"mb-5\">\n                  <Col md={4} style={{textAlign:\"center\", margin: \"auto\"}}>\n                    <ThemeProvider theme={theme}>\n                      <Button variant=\"contained\" className=\"mb-2\" color=\"primary\" style={{color:\"white\"}} onClick={()=>this.sendSuggestedMealToDB()}> Add Product</Button>\n                    </ThemeProvider>\n                  </Col>       \n                </Row>              \n              </form>\n          </div>\n        </div>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          maxWidth = \"xs\"\n          fullWidth\n          >\n          <DialogTitle id=\"alert-dialog-title\">Informtation</DialogTitle>\n          <DialogContent>  \n            <DialogContentText>Successfully added in database</DialogContentText>       \n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default SuggestProduct;\n","import React, { Component } from \"react\";\n// let ejs = require('ejs');\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Checkbox, Typography, Toolbar, Dialog, DialogContent, DialogTitle, Button, IconButton, TextField } from '@material-ui/core';\nimport clsx from \"clsx\";\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport ChipInput from \"material-ui-chip-input\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { createMuiTheme, withStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\n// import axios from 'axios';\nimport axios from '../util/Api';\nimport { Row, Col } from \"react-bootstrap\";\nimport Tooltip from '@material-ui/core/Tooltip';\n// const { GetObjectCommand } = require(\"@aws-sdk/client-s3\");\n// const { S3Client } = require(\"@aws-sdk/client-s3\");\n\n// var client = '';\n// const client = new S3Client({\n//   credientials: {\n//     region: const_region,\n//     aws_access_key_id: const_id,\n//     aws_secret_access_key: const_secret,\n\n//   }\n// })\n\n// height of the TextField\nconst columns = [\n  { id: '_id', label: 'id', minWidth: 100 },\n  { id: 'mealName', label: 'MealName', minWi859dth: 100 },\n  { id: 'intro', label: 'Intro', minWidth: 100 },\n  { id: 'servings', label: 'Servings', minWidth: 30 },\n  // { id: 'mealImage', label: 'ImageSrc',  minWidth: 100},\n  { id: 'prepTime', label: 'prepTime', minWidth: 30 },\n  { id: 'cookTime', label: 'cookTime', minWidth: 30 },\n  { id: 'active', label: 'Active', minWidth: 150 }\n];\n\nconst styles = theme => ({\n  button: { margin: theme.spacing.unit, },\n  leftIcon: { marginRight: theme.spacing.unit, },\n  rightIcon: { marginLeft: theme.spacing.unit, },\n  iconSmall: { fontSize: 20, },\n  root: { width: '95%', margin: 'auto', marginTop: '20px', },\n  container: { maxHeight: 440, },\n});\n\nconst LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#c0dbf2',\n    color: '#000000',\n    boxShadow: theme.shadows[1],\n    fontSize: 15,\n    marginTop: \"50px\"\n  },\n}))(Tooltip);\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\nclass ViewSuggestedMeals extends Component {\n  products = [];\n  productsImg_path = [];\n  categories = [];\n  measurements = [\"mL\", \"oz\", \"L\", \"cup(s)\", \"Tbsp\", \"tsp\", \"pt\", \"lb\", \"g\", \"kg\", \"lb\"];\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mealLabel: \"\",\n      intro: \"\",\n      servings: 0,\n      // currentIngredient: \"Butter scotch\",\n      currentIngredient: \"\",\n      currentIngredientMeasurement: \"\",\n      currentIngredientQuantity: \"\",\n      ingredientStrings: [],\n      formatted_ingredient: [],\n      instructionsChip: [],\n      prepTime: \"0 mins read\",\n      cookTime: \"10 mins cook time\",\n      categoryChips: [\"snacks\", \"abc\", \"123\"],\n      productsPopulated: false,\n      img_change_flag: false,\n\n      selected_id: \"\",\n      mealData_list: [],\n      mealImages_list: [],\n      specificMealImage: \"\",\n      page: 0,\n      rowsPerPage: 10,\n      open: false,\n      suggestMealRole: \"\",\n\n      imgSrc: \"\",\n      loading_imgSrc: \"\",\n      productImgSetting_flag: null,\n      productImgSrc: null,\n      productImg_path: \"\",\n      product_ind: 0,\n      ingredientGroupList: [],\n      selected: [],\n\n      instructionGroupList: [],\n      instructionImgData: null,\n      instructionImgPath: \"\",\n      categoryList: [],\n      tips: \"\"\n    };\n\n    this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(\n      this\n    );\n    this.handleProductName = this.handleProductName.bind(this);\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(this);\n    this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n\n    console.log(\"app Env files: \" + process.env.NODE_ENV);\n    console.log(\"app Env var of region: \" + process.env.REACT_APP_S3_REGION);\n\n\n    const const_region = process.env.REACT_APP_S3_REGION;\n    const const_id = process.env.REACT_APP_CHOPCHOWAPP_USER_AWS_KEY;\n    const const_secret = process.env.REACT_APP_CHOPCHOWAPP_USER_AWS_SECRET;\n\n\n    var url1 = \"/get-suggested-meals\"\n    axios.get(url1).then(body => {\n      var mealsList = body.data;\n      if (mealsList && mealsList.data.length !== 0) {\n        console.log(\"shows products does return\");\n        this.setState({ mealData_list: mealsList.data });\n      }\n      else { console.log(\"shows products do not return\"); }\n      console.log(mealsList);\n    }).catch(err => { console.log(err); });\n\n\n    //----get category meals-------------------------\n    var url = \"/get-all-categories\";\n    axios.get(url).then((body) => {\n      var categoryList = body.data;\n      console.log(categoryList);\n      if (categoryList && categoryList.data.length !== 0) {\n        console.log(\"returns GET of ALL Categories \");\n\n        for (var i = 0; i < categoryList.data.length; i++) {\n          this.categories.push(categoryList.data[i].category_name);\n        }\n        console.log(\"PRINTING UPDATED CATEGORIES LIST\");\n      } else {\n        console.log(\"get all products function does not return\");\n      }\n    })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  addInstructionList = () => {\n    if (this.state.instructionsChip.length === 0) return;\n    let tmp = {\n      step: this.state.instructionsChip,\n      imgdata: this.state.instructionImgData,\n      image: this.state.instructionImgPath,\n    }\n    this.setState({ instructionGroupList: [...this.state.instructionGroupList, tmp] });\n    this.setState({ instructionsChip: [], instructionImgData: null, instructionImgPath: \"\" });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  updateSuggestItem = (data, mealRole) => {\n    const instructionData = data.instructions;\n    const tmp_instructionData = [];\n\n    for (let i = 0; i < instructionData.length; i++) {\n      let tmp = {\n        step: instructionData[i].step,\n        imgdata: -1,\n        image: instructionData[i].image,\n      }\n      tmp_instructionData.push(tmp);\n    }\n\n    this.setState({ categoryList: data.categories });\n    this.setState({ selected_id: data._id, instructionGroupList: tmp_instructionData, suggestMealRole: mealRole, mealLabel: data.label, intro: data.intro, servings: data.servings, loading_imgSrc: data.mealImage, formatted_ingredient: data.formatted_ingredient });\n    this.setState({ open: true });\n\n    // this.setState({ currentIngredientMeasurement: last_ingredient.measurement, currentIngredientQuantity: last_ingredient.quantity, currentIngredient: last_ingredient.product });\n    this.setState({ imgSrc: data.mealImage, prepTime: data.prepTime, cookTime: data.cookTime, product_slider: data.product_slider, productImgSetting_flag: false });\n\n    // const last_slider = data.product_slider[data.product_slider.length-1];\n    // this.setState({productImg_path: last_slider.image});\n\n    let tmp_inst_groupList = [];\n    let temp = [];\n    let parsed_ingredients = JSON.parse(data.formatted_ingredient);\n    console.log(\"Parsed ingredients\");\n    console.log(parsed_ingredients);\n    for (let i = 0; i < parsed_ingredients.length; i++) {\n      var currProductObject = {\n        product: data.parsed_ingredients[i].product,\n        quantity: data.parsed_ingredients[i].quantity,\n        measurement: data.parsed_ingredients[i].measurement,\n        productImgData: null,\n        // productImgPath: data.product_slider[i].image,\n        flag: false,\n      };\n      tmp_inst_groupList.push(currProductObject);\n\n      const last_ingredient = data.parsed_ingredients[i];\n      var properIngredientStringSyntax;\n\n      if (last_ingredient.quantity === 0) properIngredientStringSyntax = last_ingredient.product;\n      else if (last_ingredient.measurement === null) properIngredientStringSyntax = \"\" + last_ingredient.quantity + \" \" + last_ingredient.product;\n      else properIngredientStringSyntax = \"\" + last_ingredient.quantity + \" \" + last_ingredient.measurement + \" of \" + last_ingredient.product;\n\n      temp.push(properIngredientStringSyntax);\n\n      // const tmp_data = {imgSrc:null, path_flag: data.product_slider[i].flag, path: data.product_slider[i].image};\n      // tmp_ingredientData.push(tmp_data);\n    }\n\n    this.setState({ ingredientGroupList: tmp_inst_groupList });\n    this.setState({ ingredientStrings: temp });\n    // this.setState({ ingredientData: tmp_ingredientData }); \n\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onhandleInstructionImg = (event) => {\n    this.setState({ instructionImgData: event.target.files[0] });\n    if (event.target.files[0] !== null) {\n      this.setState({ instructionImgPath: URL.createObjectURL(event.target.files[0]) });\n    }\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  handleUpdateSubmit = async () => {\n    const data = this.state;\n    const { mealLabel, intro, servings, instructionGroupList, ingredientGroupList, ingredientStrings, imgSrc, prepTime, cookTime, selected_id, categoryList } = data;\n\n    let productImgForm = new FormData();\n    let img_count1 = 0;\n    for (var i = 0; i < ingredientGroupList.length; i++) {\n      if (ingredientGroupList[i].productImgData !== null) {\n        productImgForm.append('productImgs', ingredientGroupList[i].productImgData);\n        img_count1++;\n      }\n    }\n\n    let productImg_paths = null;\n    if (img_count1 !== 0) {\n      var productImg_url = \"/getProductImgURL/\";\n      const productImg_config = { method: 'POST', data: productImgForm, url: productImg_url };\n\n      const response = await axios(productImg_config)\n      productImg_paths = response.data.productImg_paths;\n    }\n    console.log(\"productImg_paths: \", productImg_paths);\n\n    //-------------to make prodcut data ------------------------------------------\n    const formatted_ingredient1 = [];\n    const product_slider = [];\n    let n1 = -1;\n    for (i = 0; i < ingredientGroupList.length; i++) {\n      var tmp_ingredient = {\n        product: ingredientGroupList[i].product,\n        quantity: ingredientGroupList[i].quantity,\n        measurement: ingredientGroupList[i].measurement,\n      };\n      formatted_ingredient1.push(tmp_ingredient);\n\n      //-----------------------------------------------\n      let image = \"\";\n      if (ingredientGroupList[i].productImgData !== null) {\n        n1++; image = productImg_paths[n1]\n      }\n      else {\n        image = ingredientGroupList[i].productImgPath;\n      }\n\n      const tmp_slider_data = {\n        ingredient: ingredientGroupList[i].product,\n        image: image,\n        flag: ingredientGroupList[i].flag,\n      };\n      product_slider.push(tmp_slider_data);\n    }\n\n    //------------- to get glabal path for instrution image ----------------------------------------\n    let instructionImgForm = new FormData();\n    let img_count = 0;\n    for (i = 0; i < instructionGroupList.length; i++) {\n      if (instructionGroupList[i].imgdata !== null && instructionGroupList[i].imgdata !== -1) {\n        instructionImgForm.append('instructionImgs', instructionGroupList[i].imgdata);\n        img_count++;\n      }\n    }\n\n    let instructionImg_paths = null;\n    if (img_count !== 0) {\n      var instructionImg_url = \"/getInstructionImgURL/\";\n      const instructionImg_config = { method: 'POST', data: instructionImgForm, url: instructionImg_url };\n\n      const response = await axios(instructionImg_config)\n      instructionImg_paths = response.data.instrutionImg_paths;\n    }\n\n    //-------------to make instruction data ------------------------------------------\n    const instructionGroupData = [];\n    let n = -1;\n    for (i = 0; i < instructionGroupList.length; i++) {\n      let image = null;\n      if (instructionGroupList[i].imgdata !== null && instructionGroupList[i].imgdata !== -1) {\n        n++; image = instructionImg_paths[n]\n      }\n      else if (instructionGroupList[i].imgdata === -1) {\n        image = instructionGroupList[i].image;\n      }\n\n      let tmp = {\n        step: instructionGroupList[i].step,\n        image: image,\n      }\n      instructionGroupData.push(tmp);\n    }\n\n    //-------------to make new category data ------------------------------------------\n    let new_categories = [];\n    for (i = 0; i < categoryList.length; i++) {\n      let index = this.categories.indexOf(categoryList[i]);\n      if (index === -1) new_categories.push(categoryList[i])\n    }\n\n    let suggestMealForm = new FormData();\n    suggestMealForm.append('id', selected_id);\n    suggestMealForm.append('mealLabel', mealLabel);\n    suggestMealForm.append('intro', intro);\n    suggestMealForm.append('servings', servings);\n    suggestMealForm.append('product_slider', JSON.stringify(product_slider));\n    suggestMealForm.append('formatted_ingredient', JSON.stringify(formatted_ingredient1));\n    suggestMealForm.append('instructionsGroupList', JSON.stringify(instructionGroupData));\n    suggestMealForm.append('ingredientStrings', ingredientStrings);\n    suggestMealForm.append('prepTime', prepTime);\n    suggestMealForm.append('cookTime', cookTime);\n    suggestMealForm.append('categoryChips', JSON.stringify(categoryList));\n    suggestMealForm.append('newCategories', JSON.stringify(new_categories));\n    suggestMealForm.append('imgSrc', imgSrc);\n\n    // const ingredient_list = [];\n    if (this.state.img_change_flag) {\n      suggestMealForm.append('img_change_flag', \"true\");\n      suggestMealForm.append('imgSrc', imgSrc);\n    } else {\n      suggestMealForm.set('img_change_flag', \"false\");\n    }\n\n    // console.log(\"KKKKKKKKKKK: \", ingredientData);\n    // for(var i=0; i< ingredientData.length; i++)\n    // {\n    //   if(ingredientData[i].imgSrc==null){\n    //     ingredient_list.push(null);\n    //   }else{\n    //     ingredient_list.push({path_flag:ingredientData[i].path_flag,  path: ingredientData[i].path});\n    //     if(ingredientData[i].path_flag){\n    //       suggestMealForm.append('imgSrc', ingredientData[i].imgSrc);\n    //     } \n    //   }    \n    // }  \n    // suggestMealForm.append('ingredient_list', JSON.stringify(ingredient_list));\n\n    var url = \"/updateSuggestItem\";\n    const config = { method: 'POST', data: suggestMealForm, url: url };\n    const response = await axios(config)\n    if (response.status >= 200 && response.status < 300) {\n      console.log(\"Updated Meal submitted successfully\");\n      return (window.location.href = \"/ViewSuggestedMeals\");\n    } else {\n      console.log(\"Somthing happened wrong\");\n    }\n  }\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  onTextFieldChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  onTextFieldClick = (event) => {\n    this.setState({ imgSrc: event.target.files[0] });\n\n    if (this.state.imgSrc !== null) {\n      this.setState({ loading_imgSrc: URL.createObjectURL(event.target.files[0]) });\n      this.setState({ img_change_flag: true });\n    }\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onhandleProductImg = (event) => {\n    this.setState({ productImgSrc: event.target.files[0] });\n    if (event.target.files[0] !== null) {\n      this.setState({ productImg_path: URL.createObjectURL(event.target.files[0]) });\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleAddIngredientChip(chip) {\n    let temp = this.state.ingredientStrings;\n    temp.push(chip);\n    this.setState({ ingredientStrings: temp });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleAddCategoryChip(chip) {\n    this.setState({ categoryChips: [...this.state.categoryChips, chip] }); //\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleAddInstructionStep(chip) {\n    this.setState({\n      instructionsChip: [...this.state.instructionsChip, chip],\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onHandleIngredientItem = (ind) => {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var array3 = this.state.ingredientGroupList;\n    if (ind !== -1) {\n      array.splice(ind, 1);\n      array3.splice(ind, 1);\n      this.setState({ ingredientStrings: array, ingredientGroupList: array3 });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onHandleInstructionItem = (ind) => {\n    const array = this.state.instructionGroupList;\n    array.splice(ind, 1);\n    this.setState({ instructionGroupList: array });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateIngredientImg = (event, ind) => {\n    // if (event.target.files[0] === null || this.state.ingredientData.length<= ind) return;\n    // const tmp_ingredientData = this.state.ingredientData;\n    // const tmp = {imgSrc:event.target.files[0], path_flag: true, path:URL.createObjectURL(event.target.files[0])}\n    // tmp_ingredientData[ind] = tmp;\n    // this.setState({ingredientData: tmp_ingredientData});\n    if (event.target.files[0] === null || this.state.ingredientGroupList.length <= ind) return;\n    const tmp_ingredientData = this.state.ingredientGroupList;\n    const tmp_ingredientItem = tmp_ingredientData[ind];\n\n    var tmp1 = {\n      product: tmp_ingredientItem.product,\n      quantity: tmp_ingredientItem.quantity,\n      measurement: tmp_ingredientItem.measurement,\n      productImgData: event.target.files[0],\n      productImgPath: URL.createObjectURL(event.target.files[0]),\n      flag: true,\n    };\n    tmp_ingredientData[ind] = tmp1;\n    this.setState({ ingredientGroupList: tmp_ingredientData });\n  }\n  ///////////////////////////////////////////////////////////////////////////////////////\n  onUpdateInstructionImg = (event, ind) => {\n    if (event.target.files[0] === null || this.state.instructionGroupList.length <= ind) return;\n    const tmp_instructionData = this.state.instructionGroupList;\n    const tmp_instructionItem = tmp_instructionData[ind];\n\n    let tmp = {\n      step: tmp_instructionItem.step,\n      imgdata: event.target.files[0],\n      image: URL.createObjectURL(event.target.files[0]),\n    };\n\n    tmp_instructionData[ind] = tmp;\n    this.setState({ instructionGroupList: tmp_instructionData });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteIngredientChip(chip) {\n    var array = this.state.ingredientStrings; // make a separate copy of the array\n    var array3 = this.state.ingredientGroupList;\n\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      array3.splice(index, 1);\n\n      this.setState({ ingredientStrings: array, ingredientGroupList: array3 });\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteCategoryChip(chip, index) {\n    console.log(\"handleDeleteCategoryChip:\", index)\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // handleDeleteCategoryChip(chip) {\n  //   console.log(\"removing chop input\");\n  //   var array = [...this.state.categoryChips]; // make a separate copy of the array\n  //   var index = array.indexOf(chip);\n  //   if (index !== -1) {\n  //     array.splice(index, 1);\n  //     this.setState({ categoryChips: array });\n  //   }\n  // }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteInstructionsStep(chip) {\n    console.log(\"removing chop input\");\n    var array = [...this.state.instructionsChip]; // make a separate copy of the array\n    var index = array.indexOf(chip);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ instructionsChip: array });\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleIngredientQuantity(event) {\n    console.log(event.target.value);\n    this.setState({ currentIngredientQuantity: event.target.value });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleIngredientDropdownChange = (event, value) => {\n    var array = this.products;\n    var index = array.indexOf(value);\n    if (index !== -1) {\n      this.setState({ product_ind: index });\n    }\n\n    if (event.target.value) {\n      this.setState({ currentIngredient: event.target.value });\n    } else {\n      this.setState({ currentIngredient: event.target.innerHTML });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleProductName = (event, val) => {\n\n    const searchResult = this.products.map(element => element.toLowerCase().includes(val.toLowerCase()));\n    const flag = searchResult.find(element => element === true);\n    if (flag !== true || flag === null) {\n      this.setState({ productImgSetting_flag: true });\n      this.setState({ currentIngredient: val });\n    } else {\n      this.setState({ productImgSetting_flag: false });\n      this.setState({ currentIngredient: val });\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////////\n  handleCategoryDropdownChange = (val) => {\n    this.setState({ categoryList: val });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleIngredientMeasurement(event) {\n    if (event.target.value) {\n      this.setState({ currentIngredientMeasurement: event.target.value });\n    } else {\n      this.setState({ currentIngredientMeasurement: event.target.innerHTML });\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  onhandleSendData = () => {\n    fetch(\"./api/send-mealData\", {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(this.state.selected),\n    }).then(response => {\n      console.log(response)\n      if (response.status === 200) {\n        return (window.location.href = \"/ViewSuggestedMeals\");\n      }\n    })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  addIngredientToMeal(event) {\n    event.preventDefault();\n    console.log(this.state.currentIngredientMeasurement);\n    var properIngredientStringSyntax;\n\n    if (document.getElementById(\"currentIngredient\").value === \"\") {\n      window.alert(\"Enter an ingredient to add to meal\");\n      return;\n    }\n\n    if (this.state.currentIngredientQuantity === 0) {\n      properIngredientStringSyntax = document.getElementById(\"currentIngredient\").value;\n    } else if (\n      document.getElementById(\"currentIngredientMeasurement\").value === null\n    ) {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity + \" \" + document.getElementById(\"currentIngredient\").value;\n    } else {\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity + \" \" + document.getElementById(\"currentIngredientMeasurement\").value + \" of \" + document.getElementById(\"currentIngredient\").value;\n    }\n\n    var currProductObject = {\n      product: this.state.currentIngredient,\n      quantity: this.state.currentIngredientQuantity,\n      measurement: this.state.currentIngredientMeasurement,\n      productImgData: this.state.productImgSrc,\n      productImgPath: null,\n      flag: this.state.productImgSetting_flag,\n    };\n\n    if (this.state.productImgSetting_flag) {\n      currProductObject.productImgPath = this.state.productImg_path;\n      currProductObject.flag = true\n    } else {\n      currProductObject.productImgPath = this.productsImg_path[this.state.product_ind];\n      currProductObject.flag = false;\n    }\n    this.handleAddIngredientChip(properIngredientStringSyntax);\n\n    // if(this.state.productImgSetting_flag ){\n    //   const tmp_data = {imgSrc:this.state.productImgSrc, path_flag: true, path:\"\"}\n    //   this.setState({ ingredientData: [...this.state.ingredientData, tmp_data] });  \n    // }else{\n    //   const tmp_data = {imgSrc:[], path_flag: false, path:this.productsImg_path[this.state.product_ind]}\n    //   this.setState({ ingredientData: [...this.state.ingredientData, tmp_data] });\n    // }\n\n    // this.setState({ formatted_ingredient: [ ...this.state.formatted_ingredient, currIngredientObject, ], \n    //   productImg_path:null,\n    //   product_slider: [...this.state.product_slider, null],\n    // });\n\n    this.setState({ ingredientGroupList: [...this.state.ingredientGroupList, currProductObject] });\n    this.setState({ productImgSrc: null, productImg_path: \"\" });\n\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleChangePage = (event, newPage) => {\n    this.setState({ page: newPage });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleChangeRowsPerPage = (event) => {\n    this.setState({ page: 0 });\n    this.setState({ rowsPerPage: +event.target.value });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleDeleteMealItem = (data) => {\n    // var url = `./api/removeSeggestItem/${data._id}`;\n    var url = `https://chopchowdev.herokuapp.com/api/removeSeggestItem/${data._id}`;\n\n    fetch(url).then((res) => {\n      return res.json();\n    })\n      .then((response) => {\n        console.log(\"Delets item\");\n        return (window.location.href = \"/ViewSuggestedMeals\");\n      })\n      .catch((err) => {\n        console.log(\"unDelets item\");\n        console.log(err);\n      });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleClickOpen = (data, mealRole) => {\n\n    console.log(\"data is :\");\n    console.log(data);\n    let parsed_instructionData = data.stepSlides;\n\n    const tmp_instructionData = [];\n    console.log(\"Parsed Step Instructions: \");\n    console.log(parsed_instructionData);\n    // console.log(data.mealImage)\n\n    console.log(\"Trying to call image to display \");\n    //get meal image from gridfs\n    // var url = \"http://chopchowdev/getOneMongoFileImage/\"+data.mealImage;\n    let url = 'https://chopchowdev.herokuapp.com/getOneMongoFileImage/' + data.mealImageName;\n    this.setState({ imgSrc: url })\n    // let stepData = this.getDataFromS3(parsed_instructionData[0].instructionChunk.dataName, 0);\n    //  let urldata = URL.createObjectURL(stepData);\n    // this.setState({ contentData: stepData });\n\n    console.log(\"Length of instruction data: \" + parsed_instructionData.length);\n    for (let i = 0; i < parsed_instructionData.length; i++) {\n      console.log(\"i : \" + i);\n\n      let instructionChunk = parsed_instructionData[i].instructionChunk;\n      // console.log(\"instruction title is: \");\n      // console.log(instructionChunk.title);\n      // console.log(\"instruction chunk is: \");\n      // console.log(instructionChunk);\n      // let instructionSteps = instructionChunk['instructionSteps'];\n      let tmp = {\n        step: instructionChunk.instructionSteps,\n        title: instructionChunk.title,\n        dataName: instructionChunk.dataName,\n      }\n\n      // this.getDataFromS3(tmp.dataName, i);\n      tmp_instructionData.push(tmp);\n      // console.log(tmp);\n    }\n\n    this.setState({\n      selected_id: data._id, instructionGroupList: tmp_instructionData,\n      suggestMealRole: mealRole, mealLabel: data.mealName, intro: data.intro, servings: data.servings,\n      loading_imgSrc: data.mealImage, formatted_ingredient: data.formatted_ingredient, tips: data.tips\n    });\n    this.setState({ open: true });\n\n    const last_ingredient = data.formatted_ingredient[(data.formatted_ingredient.length - 1)];\n    let parsed_categories = JSON.parse(data.categories);\n\n    this.setState({\n      currentIngredientMeasurement: last_ingredient.measurement,\n      currentIngredientQuantity: last_ingredient.quantity, currentIngredient: last_ingredient.product\n    });\n\n    //   const reader = new FileReader();\n    // reader.onload = function(e) {\n    //     this.setState({imgSrc: reader.result})\n    // }\n    // reader.readAsDataURL(e.target.files[0]);\n    // reader.readAsDataURL(data.mealImage);\\\n    // find mealimage name in meal image and add image data to displayed image src\n    // let binaryMealimage = data.mealImage;\n    // console.log(binaryMealimage);\n\n    // let binaryImageToString = binaryMealimage.toString('base64');\n    // console.log(binaryImageToString);\n\n    // console.log('data:image/image/png;base64,'+binaryImageToString);\n    // url = 'data:image/image/png;base64,'+binaryImageToString;\n\n    // console.log(JSON.stringify(data.mealImage.data));\n\n\n    this.setState({\n      prepTime: data.prepTime, cookTime: data.cookTime,\n      categoryList: parsed_categories, product_slider: data.product_slider, productImgSetting_flag: false\n    });\n\n    // const last_slider = data.product_slider[data.product_slider.length-1];\n    // this.setState({productImg_path: last_slider.image});\n\n    let temp = [];\n    let tmp_ingredientData = []\n    let parsed_ingredients = JSON.parse(data.formatted_ingredient);\n    for (let i = 0; i < parsed_ingredients.length; i++) {\n      const last_ingredient = parsed_ingredients[i];\n      var properIngredientStringSyntax;\n\n      // if (last_ingredient.quantity === 0) properIngredientStringSyntax = last_ingredient.product;\n      // else if (last_ingredient.measurement === null ) properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.product;\n      // else properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.measurement+\" of \" + last_ingredient.product;\n\n      temp.push(last_ingredient.properIngredientStringSyntax);\n      tmp_ingredientData.push(null)\n    }\n    this.setState({ ingredientStrings: temp });\n    this.setState({ ingredientData: tmp_ingredientData });\n\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleClose = () => { this.setState({ open: false }); };\n\n  ////////////////////////////////////////////////////////////////////////////\n  onTextFieldChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = this.state.mealData_list.map((n) => n._id);\n      this.setState({ selected: newSelecteds });\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  handleClick = (event, id) => {\n    const selected = this.state.selected;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n    this.setState({ selected: newSelected });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  render() {\n    console.log(\"this.state.instructionGroupList: \", this.state.instructionGroupList)\n    var comp_instructions = [];\n    var count_index = 1;\n    \n    // var urld_image = URL.createObjectURL(this.state.imgSrc);\n    for (let i = 0; i < this.state.instructionGroupList.length; i++) {\n      let content = \"\";\n      if (i !== 0) {\n        count_index += this.state.instructionGroupList[i - 1].step.length;\n      }\n          // Allowing file type\n    var allowedImageExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.)$/i;\n    var allowedVideoExtensions = /(\\.mp4|\\.m4v|\\.)$/i;\n      let instructionContent = '';\n      if(allowedVideoExtensions.exec(this.state.instructionGroupList[i].dataName)){\n        instructionContent = <video id={\"instructionVideo\" + i} controls>\n        <source src={'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/'+this.state.instructionGroupList[i].dataName} type={this.state.instructionGroupList[i].mimetype}/> \n          </video>\n      }\n      else if(allowedImageExtensions.exec(this.state.instructionGroupList[i].dataName)){\n        instructionContent = <img id={\"instructionImg\" + i} src={'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/'+this.state.instructionGroupList[i].dataName} alt={this.state.instructionGroupList[i].dataName} />\n      }\n      else{\n        // use generic content\n        instructionContent = <img id={\"instructionImg\" + i} src={'public/images/meal_pics/chopchow_default_instruction.png'} alt=\"chop chop image\" />\n      }\n      \n\n      comp_instructions.push(\n        <div key={i} className=\"mb-3\" style={{ margin: \"10px\", padding: \"10px\", backgroundColor: \"white\", boxShadow: \"1px 1px 4px 2px #00000030\" }}>\n          <Row style={{ justifyContent: \"flex-end\" }}>\n            <i className=\"fa fa-remove\" style={{ fontSize: \"50%\", marginTop: \"0px\", marginRight: \"15px\" }} onClick={() => this.onHandleInstructionItem(i)}></i>\n          </Row>\n          <Row >\n            <Col md={4} className=\"mb-2\" style={{ overflowWrap: \"break-word\" }}>\n              <div className=\"mdc-list\">\n                {this.state.instructionGroupList[i].step.map((chip, index1) => (\n                  <div className=\"mdc-list-item\" key={index1}>\n                    <span className=\"mdc-list-item__text\">{index1 + count_index}.\n                      <span className=\"mdc-list-item__text\"> {chip}</span>\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </Col>\n            <Col md={4} className=\"mb-2\" style={{ textAlign: \"center\" }}>\n              <img className=\"mb-2\" src={this.state.instructionGroupList[i].imgpath} width=\"auto\" height=\"150px\" alt=\"\" />\n              <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2, ml-3\" value={this.state.mealImage} onChange={(ev) => this.onUpdateInstructionImg(ev, i)} />\n            </Col>\n            <Col md={4} className=\"mb-2\"></Col>\n          </Row>\n          <Row>\n            <br>\n            </br>\n            {/* <button onClick={this.getDataFromS3(\"dmnn9dog_massage.jpeg\", i)}> View Content1 </button><br></br> */}\n            {/* <Button onClick={this.getDataFromS3(\"dmnn9dog_massage.jpeg\", i)}> \n            View Content\n           </Button>\n           <Button onClick={this.getDataFromS3(\"dmnn9dog_massage.jpeg\", i)}> \n            View Content2\n           </Button> */}\n           {instructionContent}\n          </Row>\n        </div>\n      )\n    }\n\n    const { classes } = this.props;\n    const { mealData_list, page, rowsPerPage, open, suggestMealRole, loading_imgSrc, categoryList, imgSrc } = this.state;\n    const { mealLabel, intro, currentIngredient, currentIngredientQuantity, currentIngredientMeasurement, prepTime, cookTime, servings } = this.state;\n\n    const theme = createMuiTheme({\n      palette: { primary: green, },\n    });\n\n    const numSelected = this.state.selected.length;\n    const rowCount = mealData_list ? mealData_list.length : 0;\n\n    return (\n      <div className={classes.root} style={{ boxShadow: \"2px 2px 8px 0px #a0a0a0\" }}>\n        <Toolbar className={clsx(classes.root, { [classes.highlight]: numSelected > 0 })} >\n          {numSelected > 0 ?\n            (<Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\" style={{ fontSize: \"16px\", fontWeight: \"600\", marginRight: \"20px\", color: \"blue\" }}> {numSelected} selected</Typography>)\n            : (<Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">None Selected  </Typography>)}\n\n          {numSelected > 0 ? (<Button variant=\"outlined\" color=\"primary\" endIcon={<SendIcon />} onClick={this.onhandleSendData}>Send</Button>) : null}\n        </Toolbar>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    indeterminate={numSelected > 0 && numSelected < rowCount}\n                    checked={rowCount > 0 && numSelected === rowCount}\n                    onChange={this.handleSelectAllClick}\n                    inputProps={{ 'aria-label': 'select all desserts' }}\n                  />\n                </TableCell>\n\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth, fontSize: '15x', fontWeight: '600', padding: '10px 5px' }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mealData_list &&\n                mealData_list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                  const isSelected = (id) => this.state.selected.indexOf(id) !== -1;\n                  const isItemSelected = isSelected(row._id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => this.handleClick(event, row._id)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row._id}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n\n                      {columns.map((column) => {\n                        if (column.id === \"active\") {\n                          return (\n                            <TableCell key={column.id} style={{ padding: '0px 0px' }}>\n                              <LightTooltip title=\"  View  \" placement=\"top\">\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.handleClickOpen(row, \"moreView\")}>\n                                  <VisibilityIcon />\n                                </IconButton>\n                              </LightTooltip>\n\n                              <LightTooltip title=\"  Update  \" placement=\"top\">\n                                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.updateSuggestItem(row, \"edit\")}>\n                                  <EditIcon style={{ color: 'green' }} />\n                                </IconButton>\n                              </LightTooltip>\n\n                              <LightTooltip title=\"  Delete  \" placement=\"top\">\n                                <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\" onClick={() => this.handleDeleteMealItem(row)}>\n                                  <DeleteIcon />\n                                </IconButton>\n                              </LightTooltip>\n                            </TableCell>\n                          );\n                        }\n                        else { const value = row[column.id]; return (<TableCell key={column.id} style={{ padding: '5px 5px' }}>{value}</TableCell>); }\n                      })\n                      }\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rowCount}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n\n        <Dialog\n          open={open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          maxWidth=\"lg\"\n          fullWidth\n        >\n          <DialogTitle id=\"alert-dialog-title\">{suggestMealRole === \"moreView\" ? \"Suggest Meal\" : \"Update Meal\"}</DialogTitle>\n          <DialogContent>\n            <form noValidate autoComplete=\"off\">\n              <Row className=\"mb-3\">\n                <Col md={4}>\n                  <TextField id=\"mealLabel\" fullWidth onChange={this.onTextFieldChange} label=\"Meal Name\" required variant=\"filled\" className=\"mb-3\" value={mealLabel} />\n                  <TextField multiline id=\"intro\" fullWidth onChange={this.onTextFieldChange} label=\"Intro\" variant=\"filled\" className=\"mb-3\" value={intro} />\n                </Col>\n                <Col md={4} style={{ marginTop: \"20px\" }}>\n                  <input accept=\"image/*\" id=\"imgSrc\" type=\"file\" className=\"mb-2 pr-4\" onChange={(ev) => this.onTextFieldClick(ev)} />\n                  <img src={imgSrc} width=\"100%\"></img>\n                </Col>\n                <Col md={4} style={{ marginTop: \"20px\", textAlign: \"center\" }}>\n                  <img src={loading_imgSrc} width=\"70%\" height=\"auto\" alt=\"\" />\n\n                </Col>\n              </Row>\n\n              <hr />\n              <Row className=\"mb-2\">\n                <Col md={12}>\n                  <ChipInput\n                    label=\"IngredientsList\"\n                    value={this.state.ingredientStrings}\n                    onAdd={(chip) => this.handleAddIngredientChip(chip)}\n                    placeholder=\"e.g 1 Onion, 2 Cups of Water, etc\"\n                    onDelete={(chip, index) => this.handleDeleteIngredientChip(chip, index)}\n                    variant=\"filled\"\n                    fullWidth\n                    className=\"mb-2\"\n                  />\n                </Col>\n              </Row>\n\n              {\n                this.state.ingredientGroupList &&\n                this.state.ingredientGroupList.map((data, index) => (\n                  <div key={index} className=\"mb-3\" style={{ margin: \"10px\", padding: \"10px\", backgroundColor: \"white\", boxShadow: \"1px 1px 4px 2px #00000030\" }}>\n                    <Row style={{ justifyContent: \"flex-end\" }}>\n                      <i className=\"fa fa-remove\" style={{ fontSize: \"50%\", marginTop: \"0px\", marginRight: \"15px\" }} onClick={() => this.onHandleIngredientItem(index)}></i>\n                    </Row>\n                    <Row >\n                      <Col md={5} className=\"mb-2\" style={{ overflowWrap: \"break-word\" }}>\n                        <div className=\"card-ingredient-content\">\n                          <div><span style={{ fontWeight: \"600\" }}>1. Product &emsp;&emsp;&nbsp; :</span> {data.product}</div>\n                          <div><span style={{ fontWeight: \"600\" }}>2. Quantity&emsp;&emsp; :</span> {data.quantity}</div>\n                          <div><span style={{ fontWeight: \"600\" }}>3. Measurement:</span> {data.measurement}</div>\n\n                          <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2 ml-3 mt-3 \" onChange={(ev) => this.onUpdateIngredientImg(ev, index)} />\n                        </div>\n                      </Col>\n                      <Col md={4} className=\"mb-2\" style={{ textAlign: \"center\" }}>\n                        <img className=\"mb-2\" src={data.productImgPath} width=\"auto\" height=\"150px\" alt=\"\" />\n\n                      </Col>\n                      <Col md={3} className=\"mb-2\"></Col>\n                    </Row>\n                  </div>\n                ))\n              }\n\n              <Row className=\"mb-1\">\n                <Col md={4}>\n                  <Autocomplete\n                    id=\"currentIngredient\"\n                    options={this.products.map((option) => option)}\n                    onChange={(ev, val) => this.handleIngredientDropdownChange(ev, val)}\n                    onInputChange={(ev, val) => this.handleProductName(ev, val)}\n                    freeSolo\n                    renderInput={(params) => (<TextField {...params} label=\"Ingredient..\" variant=\"filled\" />)}\n                    fullWidth\n                    className=\"mb-3\"\n                    value={currentIngredient}\n                  />\n                  <TextField fullWidth id=\"currentIngredientQuantity\" type=\"number\" onChange={this.onTextFieldChange} label=\"Quantity\" variant=\"filled\" placeholder=\"1..\" className=\"mb-3\" value={currentIngredientQuantity} />\n                </Col>\n\n                <Col md={4}>\n                  {\n                    this.state.productImgSetting_flag ?\n                      <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mt-3 mb-4\" onChange={(ev) => this.onhandleProductImg(ev)} /> : <div style={{ marginTop: \"70px\" }} />\n                  }\n\n                  <Autocomplete\n                    id=\"currentIngredientMeasurement\"\n                    options={this.measurements.map((option) => option)}\n                    value={currentIngredientMeasurement}\n                    onChange={this.handleIngredientMeasurement}\n                    freeSolo\n                    renderInput={(params) => (<TextField {...params} label=\"Measurement..\" variant=\"filled\" />)}\n                    className=\"mb-3\"\n                  />\n                </Col>\n\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                  <Button variant=\"contained\" color=\"primary\" disableRipple onClick={this.addIngredientToMeal} style={{ color: \"white\" }} className=\"mb-3\" > Add Ingredient</Button>\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                  <TextField id=\"servings\" fullWidth type=\"number\" onChange={this.onTextFieldChange} label=\"Servings\" variant=\"filled\" className=\"mb-2\" placeholder=\"1 person, 2, 4 or 10 people\" style={{ marginTop: \"10px\" }} value={servings} />\n                </Col>\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}> </Col>\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}> </Col>\n              </Row>\n              <hr />\n\n              {\n                comp_instructions\n                // this.state.instructionGroupList.length > 0 &&\n                // this.state.instructionGroupList.map((data, index)=>(\n                //   <div key={index}  className=\"mb-3\" style={{margin:\"10px\", padding:\"10px\", backgroundColor:\"white\",  boxShadow: \"1px 1px 4px 2px #00000030\"}}>\n                //     <Row style={{justifyContent: \"flex-end\"}}> \n                //       <i className=\"fa fa-remove\" style={{fontSize:\"50%\", marginTop: \"0px\", marginRight: \"15px\"}} onClick={()=>this.onHandleInstructionItem(index)}></i>\n                //     </Row>                        \n                //     <Row >\n                //       <Col md={4}  className=\"mb-2\" style={{overflowWrap: \"break-word\"}}>\n                //         <ol className=\"mdc-list\">\n                //           {data.step.map((chip, index1) => (\n                //             <li className=\"mdc-list-item\" tabIndex=\"0\" key={index1}>\n                //               <span className=\"mdc-list-item__text\">{chip}</span>\n                //             </li>\n                //           ))}\n                //         </ol>\n                //       </Col>\n                //       <Col md={4}  className=\"mb-2\" style={{textAlign: \"center\"}}>\n                //         <img className=\"mb-2\" src={data.image} width=\"auto\" height=\"150px\" alt=\"\"/>\n                //         <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2, ml-3\" onChange={(ev)=>this.onUpdateInstructionImg(ev, index)} />\n                //       </Col>\n                //       <Col md={4}  className=\"mb-2\"></Col>\n                //     </Row>\n                //   </div>\n                // ))\n              }\n\n              <Row className=\"mb-3\">\n                <Col md={12}>\n                  <ChipInput label=\"Instructions\" className=\"mb-2\" fullWidth value={this.state.instructionsChip} onAdd={(chip) => this.handleAddInstructionStep(chip)} onDelete={(chip, index) => this.handleDeleteInstructionsStep(chip, index)} variant=\"filled\" />\n                </Col>\n              </Row>\n              <Row className=\"mb-3\">\n                <Col md={4} className=\"mb-2\">\n                  <input accept=\"image/*\" id=\"imgSrc1\" type=\"file\" className=\"mb-2\" onChange={(ev) => this.onhandleInstructionImg(ev)} />\n                </Col>\n                <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                  <Button variant=\"contained\" color=\"primary\" disableRipple style={{ color: \"white\", width: \"300px\" }} className=\"mb-3\" onClick={this.addInstructionList}  > ADD NEW INSTRUCTION SET</Button>\n                </Col>\n                <Col md={4}> </Col>\n              </Row>\n\n              <Row className=\"mb-3\">\n                <Col md={4}>\n                  <TextField id=\"prepTime\" className=\"mb-2\" type=\"number\" fullWidth onChange={this.onTextFieldChange} label=\"prepTime (mins)\" variant=\"filled\" required value={prepTime} />\n                </Col>\n                <Col md={4}>\n                  <TextField id=\"cookTime\" className=\"mb-2\" type=\"number\" fullWidth onChange={this.onTextFieldChange} label=\"CookTime (mins)\" variant=\"filled\" required value={cookTime} />\n                </Col>\n                <Col md={4}>\n                  {/* <Autocomplete \n                        multiple \n                        limitTags={5}\n                        id=\"tags-filled\" \n                        className=\"mb-2\" \n                        fullWidth \n                        options={this.categories.map((option) => option)} \n                        onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n                        freeSolo\n                        renderInput={(params) => (<TextField {...params} variant=\"filled\" label=\"Categories\" placeholder=\"Suggest categories for this meal..\" fullWidth/>)} \n                        // onDelete={(chip, index) =>this.handleDeleteCategoryChip(chip, index)}\n                        value = { categories }\n                        /> */}\n\n                  <Autocomplete\n                    multiple\n                    id=\"tags-standard\"\n                    className=\"mb-2\"\n                    freeSolo\n                    // filterSelectedOptions\n                    options={this.categories.map((option) => option)}\n                    // onChange={(ev,val)=>this.handleCategoryDropdownChange(ev,val)}\n                    onChange={(e, newValue) => this.handleCategoryDropdownChange(newValue)}\n                    // getOptionLabel={option => option}\n                    // renderTags={() => {}}\n                    value={categoryList}\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        variant=\"filled\"\n                        label=\"Categories\"\n                        placeholder=\"Suggest categories for this meal..\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </Col>\n              </Row>\n              {\n                suggestMealRole !== \"moreView\" &&\n                <Row className=\"mb-5\">\n                  <Col md={4} style={{ textAlign: \"center\", margin: \"auto\" }}>\n                    <ThemeProvider theme={theme}>\n                      <Button variant=\"contained\" className=\"mb-2\" color=\"primary\" size=\"small\" style={{ color: \"white\" }} onClick={() => this.handleUpdateSubmit()}> Update Meal</Button>\n                    </ThemeProvider>\n                  </Col>\n                </Row>\n              }\n              <Row className=\"mb-3\">\n                <Col md={12}>\n                  <ChipInput label=\"Tips\" className=\"mb-2\" fullWidth value={this.state.tips}  variant=\"filled\" />\n                </Col>\n              </Row>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ViewSuggestedMeals);\n\n  ///////////////////////////////////////////////////////////////////////////////\n  // getDataFromS3 = (fileName, index) => {\n    // console.log(\"clients gets3 func,\\n i is: \" + index + \" file name is: \" + fileName);\n    // if (fileName) {\n      // let url = 'http://localhost:5000/api/getFromS3/' + fileName;\n\n      // fetch(url, {\n      //   method: 'GET',\n      // }).then(response => {\n      //   console.log(response)\n      //   if (response.status === 200) {\n      //     console.log(\"content returned to be displayed on client\");\n      //     console.log(response.body);\n      //     // console.log(response.blob);\n      //     const responseBody = response.body;\n\n      //     let binaryImageToString = responseBody.toString('base64');\n      //     console.log(binaryImageToString);\n\n      //     console.log('data:image/image/png;base64,' + binaryImageToString);\n          // let imgUrl = 'data:image/image/png;base64,' + binaryImageToString;\n          // let imgUrl = 'https://meal-chunk-images-and-videos.s3.us-west-1.amazonaws.com/'+fileName;\n\n          // this.setState({ contentData: imgUrl });\n          // return response;\n          // return (window.location.href = \"/ViewSuggestedMeals\");\n      //   }\n      // })\n      //   .catch(error => {\n      //     console.log(\"no content returned.. file not found ?\");\n      //     console.log(error);\n      //   });\n\n\n\n      // axios.get(url).then(body => {\n      //   console.log(\"Returns content\");\n\n      //   var content = body.data;\n      //   // console.log(content);\n\n      //   if (content) {\n      //     console.log(\"content returned to be displayed on client\");\n      //     // this.setState({ contentData:content });\n      //     return content;\n      //   }\n      //   else { console.log(\"no content returned.. file not found ?\"); }\n      // }).catch(err => { console.log(err); });\n    // }\n    // else {\n      // No content available to display\n    // }\n\n    // // Create an object and upload it to the Amazon S3 bucket.\n    // const input = {\n    //   Bucket: process.env.REACT_APP_S3_BUCKET, // The name of the bucket. For example, 'sample_bucket_101'.\n    //   Key: fileName // The name of the object.\n    // };\n\n\n    // const run = async (input) => {\n\n    //   console.log(\"input: \");\n    //   console.log(input);\n    //   try {\n\n    //     console.log(client);\n    //     // Create a helper function to convert a ReadableStream to a string.\n    //     const streamToString = (stream) =>\n    //       new Promise((resolve, reject) => {\n    //         const chunks = [];\n    //         stream.on(\"data\", (chunk) => chunks.push(chunk));\n    //         stream.on(\"error\", reject);\n    //         stream.on(\"end\", () => resolve(Buffer.concat(chunks).toString(\"utf8\")));\n    //         // console.log(chunks);\n    //       });\n\n\n    //     // const client = new S3Client(config);\n    //     const command = new GetObjectCommand(input);\n    //     const data = await client.send(command);\n\n    //     console.log(data);\n\n    //     // return false;\n    //   } catch (err) {\n    //     // console.log(client)\n    //     console.log(\"Error\", err);\n\n    //   };\n    // };\n\n    // if (input.Key !== '') {\n    //   run(input);\n    // }\n    // else {\n    //   console.log(\"No  content in instructions group list to check\");\n    // }\n  // }\n\n\n    // var url = \"/get-all-products\";\n    // axios.get(url)\n    //   .then((body) => {\n    //     var productsList = body.data;\n    //     if (productsList && productsList.data.length !== 0) {\n\n    //       console.log(\"returns GET ALL PRODUCTS \");\n    //       for (var i = 0; i < productsList.data.length; i++) {\n    //         this.productsImg_path.push(productsList.data[i].product_image);\n    //       }\n\n    //       console.log(\"PRINTING ALL PRODUCTS LIST\", this.products);\n    //       this.setState({ productsPopulated: true });\n    //     } else { console.log(\"get all products function does not return\"); }\n    //   })\n    //   .catch((err) => { console.log(err); });\n   // get suggested meal images ?\n    // var url = \"/get-suggested-meals-images\"\n    // axios.get(url).then(body => {\n    //   var mealImagesList = body.data;\n    //   if (mealImagesList && mealImagesList.data.length !== 0) {\n    //     console.log(\"meal images does return\");\n    //     this.setState({ mealImages_list: mealImagesList.data });\n    //   }\n    //   else { console.log(\"meal images do not return\"); }\n    //   console.log(mealImagesList);\n    // }).catch(err => { console.log(err); });\n\n        // this.setState({open: true});\n    // this.setState({ suggestMealRole: mealRole, mealLabel: data.label, intro: data.intro, servings: data.servings, formatted_ingredient:data.formatted_ingredient   });\n\n    // const last_ingredient = data.formatted_ingredient[data.formatted_ingredient.length-1];\n    // this.setState({ currentIngredientMeasurement: last_ingredient.measurement, currentIngredientQuantity: last_ingredient.quantity, currentIngredient: last_ingredient.product });\n    // this.setState({ instructionsChip:  data.instructions, prepTime:  data.prepTime, cookTime:  data.cookTime, loading_imgSrc:  data.mealImage, product_slider:  data.product_slider});\n    // const last_slider = data.product_slider[data.product_slider.length-1];\n    // if(!last_slider.flag) {\n    //   this.setState({productImg_path: \"public/products/\"+last_slider.image});\n    // }else{\n    //   this.setState({productImg_path: last_slider.image});\n    // }\n    // this.setState({productImgSetting_flag: false});\n\n    // let temp = [];\n    // for(let i=0; i<data.formatted_ingredient.length; i++)\n    // {\n    //   const last_ingredient = data.formatted_ingredient[i];\n    //   var properIngredientStringSyntax;\n\n    //   if (last_ingredient.quantity === 0) {\n    //     properIngredientStringSyntax = last_ingredient.product;\n    //   }\n    //   else if (last_ingredient.measurement === null )\n    //   {\n    //     properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.product;\n    //   }\n    //   else {\n    //     properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.measurement+\" of \" + last_ingredient.product;\n    //   }\n    //   temp.push(properIngredientStringSyntax);\n    // }\n    // this.setState({ ingredientStrings: temp });\n    // axios call to get meal image from gridfs\n    // we determined that we should instead make the call inside of the image url src rather than referencing call in src\n        // axios.get(url).then((body) => {\n    //   mealImage = body;\n    //   if (mealImage && mealImage.data.length !== 0) {\n    //     console.log(\"returns specific meal image  \");\n    //     console.log(mealImage);\n    //     console.log(mealImage.data);\n    //     let mealImageData = mealImage.data;\n    //     let binaryImageToString = mealImageData.toString('base64');\n\n    //     let url = 'http://localhost:5000/getOneMongoFileImage/'+data.mealImage;\n\n    //     this.setState({imgSrc: url})\n    //     // for (var i = 0; i < mealImage.data.length; i++) {\n    //     //   this.setState({specificMealImage: mealImage.data[i]})\n    //     //   // this.specificMealImage = mealImage.data[i];\n    //     // }\n    //   } else {\n    //     console.log(\"get specific meal image function does not return\");\n    //   }\n    // })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });","import React from \"react\";\n// import \"./AdminPanel.scss\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport img_oil from \"../../assets/images/ola_ola_palm_oil.jpg\";\nimport img_logo from \"../../assets/images/logo2.png\";\nimport {Dialog, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n// import axios from '../../util/Api';\n\n//////////////////////////////////////////////////////////////////////\nclass AdminPanel extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      open:false\n    };\n  }\n//////////////////////////////////////////////////////////////////////\n  handleOnClickItems=(item, userRole)=>{\n    if (item === \"suggest\" && userRole === \"admin\"){\n      this.props.history.push(\"/ViewSuggestedMeals\")\n      // return (window.location.href = \"/ViewSuggestedMeals\");\n    }else{\n      this.setState({open:true});\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  handleClose = () => { this.setState({open: false});};\n\n  //////////////////////////////////////////////////////////////////////\n  render() {\n    const userRole = window.localStorage.getItem(\"userRole\");\n    console.log(\"yyy:\", userRole);\n    return (\n      <Container className=\"admin-page\">\n          <Row>\n            <Col md={12} className=\"admin-title-region\">\n                  <div className=\"admin-title\"><div style={{width: \"100%\"}}>Admin Dashboard</div></div>\n            </Col>\n\n            <Col md={4} className=\"admin-item-panel\">\n                <div className=\"item-card\">\n                  <div className=\"admin-item-title\"><div style={{width: \"100%\"}}>INVENTORY</div></div>\n                  <img src={img_oil} className=\"admin-item-img\" alt=\"\"/>\n                </div>\n            </Col> \n            <Col md={4} className=\"admin-item-panel\">\n                <div className=\"item-card\">\n                  <div className=\"admin-item-title\"><div style={{width: \"100%\"}}>ORDERS</div></div>\n                  <img src={img_oil} className=\"admin-item-img\" alt=\"\"/>\n                </div>\n            </Col> \n            <Col md={4} className=\"admin-item-panel\">\n              <div className=\"item-card\" id=\"suggest_admin\" onClick={()=>this.handleOnClickItems(\"suggest\", userRole)}>\n                <div className=\"admin-item-title\"><div style={{width: \"100%\"}}>MEAL SUGGESTIONS/SUPPORT</div></div>\n                <img src={img_logo} className=\"admin-item-img\" alt=\"\"/>\n              </div>\n            </Col> \n           </Row>\n           <Row className=\"admin-items-section\">                         \n           </Row>\n\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          maxWidth = \"sm\"\n          fullWidth\n          >\n          <DialogTitle id=\"alert-dialog-title\">Informtation</DialogTitle>\n          <DialogContent>  \n            <DialogContentText>Only admin user can open</DialogContentText>       \n          </DialogContent>\n        </Dialog>\n      </Container>\n      \n    );\n  }\n}\nconst mapStateToProps = ({ auth, commonData }) => {\n  const { authUser, role, customer_id } = auth;\n  const {status }  = commonData;\n  return { authUser, role, customer_id, status }\n};\n\nexport default connect(mapStateToProps, ()=>({}))(withRouter(AdminPanel));","import React, { Component } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport MealsPage from \"./components/mealsPage/MealsPage\";\nimport VSMealsPage from \"./components/vsm2/VSMealsPage\";\n\nimport ProductsSection from \"./components/productsPage/ProductsPage\";\nimport Login from \"./components/Login\";\nimport GroceryPage from \"./components/GroceryPage\";\n// import ProductFullDetail from \"./components/ProductFullDetail/ProductFullDetail\";\nimport SignUp from \"./components/signup\";\nimport ForgotPassword from \"./components/forgotpassword\";\nimport ResetPassword from \"./components/resetpassword\";\nimport SuggestMeal from \"./components/SuggestMeal\";\nimport SuggestProduct from \"./components/SuggestProduct\";\nimport ViewSuggestedMeals from \"./components/ViewSuggestedMeals\";\nimport AdminPanel from \"./components/AdminPanel/AdminPanel\";\nimport { setInitUrl, getUser } from \"./actions\";\nimport { connect } from 'react-redux';\nimport axios from './util/Api';\nrequire(\"dotenv\").config();\n\n\n\n\nclass App extends Component {\n  allMealNames = [];\n  productNames = [\"Spinach\", \"Brown Beans\", \"Ijebu Garri\", \"Honey Beans\", \"Kale\", \"Water\",\n    \"Squash Potatoes\", \"Oregano\", \"Cashews\", \"Palm Oil\", \"Pineapple\", \"Onions\", \"Flour\",\n    \"Butter\", \"Sugar\", \"Hawaiian Bread\", \"Avocados\", \"Tomatoes\"];\n  productImageLink = [];\n  categories = [\"Baking\", \"Cooking\", \"Home\", \"Ethiopian\", \"Quick-Meal\"];\n  measurements = [\"mL\", \"oz\", \"L\", \"cup(s)\", \"Tbsp\", \"tsp\", \"pt\", \"lb\", \"g\", \"kg\", \"lb\", \"qt\",\n    \"gallon\", \"dash/pinch\", \"Leaves\", \"cloves\", \"cubes\", \"Large\", \"medium\", \"small\"];\n  kitchenUtensils = [\"Baking Sheet\", \"Colander\", \"Cooking Oil\", \"Cutting Board\",\n    \"Fridge\", \"Knife Set\", \"Mixing Bowls\", \"Pot\", \"Pan\", \"Peeler\", \"Thermometer\",\n    \"Wire Mesh\", \"Zester\"];\n  // productDisplayBooleansOutOfState = [];\n  availableLocations = [\"African Carribean Market\", \"Abule\", \"Scotch Bonnet Restaurant\", \"Ralphs\", \"Target\", \"Walmart\", \"Vons\"];\n\n\n  groceryList = [];\n  locationAddressComponent = [];\n\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n\n    this.state = {\n      suggestMealPopOver: false,\n      isAuthenticated: false,\n      customerId: null,\n    };\n  }\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + nextProps.token;\n    }\n\n    if (nextProps.token && !nextProps.authUser) {\n      this.props.getUser();\n    }\n    \n  }\n\n  //////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    console.log(\"Comes in app.js's component did mount\");\n    var userToken = window.localStorage.getItem(\"userToken\");\n\n    if (userToken === \"null\" || userToken===\"\") return;\n\n    if (userToken) {\n      axios.defaults.headers.common['Authorization'] = \"Bearer \" + userToken;\n      this.props.getUser();\n    }\n  }\n\n \n  handleLogout() {\n    //clear cookie cache\n    window.localStorage.setItem(\"userToken\", null);\n    var url = \"/api/logout\";\n    fetch(url, {\n      method: \"GET\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        response.json().then((res) => {\n          if (res.data === \"success\") {\n            console.log(\"comes to turn off authentication state\");\n            this.setState({ isAuthenticated: false });\n          }\n        });\n      })\n      .catch((err) => {\n        console.log(\"fails to authenticate app page\");\n        console.log(err);\n      });\n\n    this.setState({ isAuthenticated: false });\n    window.location.reload(false);\n  }\n\n  render() {\n    const { customer_id } = this.props;\n    const items = [];\n    var userRole = window.localStorage.getItem(\"userRole\");\n    // var userToken = window.localStorage.getItem(\"userToken\");\n\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/login\"\n            render={() => (<Login openFlag={true} />)}\n          />\n          <Route exact path=\"/admin\" render={(props) => {\n            return ((customer_id !== undefined) && userRole==='admin' ? <AdminPanel {...props} /> : <Redirect to={{ pathname: \"#\" }} />)\n          }} />\n          <Route exact path=\"/signup\" render={(props) => <SignUp {...props} />} />\n          <Route exact path=\"/resetpass\" render={(props) => <ResetPassword {...props} />} />\n          <Route exact path=\"/forgotpass\" render={(props) => <ForgotPassword {...props} />} />\n          {/* <Route exact path=\"/\" render={(props) => (\n            <div>\n              <div id=\"title\"><b>Meals</b></div>\n              <div className=\"container\">\n                <div className=\"row\">{items}</div>\n              </div>\n            </div>\n          )}\n          /> */}\n          <Route exact path=\"/\" render={(props) => <HomePage {...props} />} />\n\n          {/* <Route path=\"/home\" render={() => (customer_id !== undefined) ? <HomePage /> : (<Redirect to={{ pathname: \"#\" }} />)} /> */}\n          <Route path=\"/home\" render={(props) => <HomePage {...props} />} />\n\n          <Route path=\"/v2\" render={() => <MealsPage />} />\n          <Route path=\"/v3\" render={() => <VSMealsPage />} />\n\n          <Route exact path=\"/grocery\" render={() => {           \n            return ((customer_id !== undefined || customer_id !== 'null' ) ? <GroceryPage /> : <Redirect to={{ pathname: \"#\" }} />)\n          }}/>\n\n          <Route path=\"/products\" render={(props) => {\n            return <ProductsSection />\n          }} />\n          <Route exact path=\"/SuggestProduct\" render={(props) => \n            {\n              console.log(\"Customer Id:\", customer_id)\n              return(\n                <SuggestProduct/> \n              )\n            }}/>\n          <Route exact path=\"/SuggestMeal\" render={(props) => \n            {\n              console.log(\"Customer Id:\", customer_id)\n              return(\n                <SuggestMeal productNames={this.productNames} allMealNames={this.allMealNames} \n                measurements={this.measurements} kitchenUtensils={this.kitchenUtensils} \n                categories={this.categories}/> \n              // (customer_id !== undefined) ? <SuggestMeal /> : <Redirect to={{ pathname: \"#\" }} /> )\n              )\n            }}/>\n          {/* <Route exact path=\"/ViewSuggestedMeals\" render={(props) => ((customer_id !== undefined) && (userRole === \"admin\")) ? <ViewSuggestedMeals /> : (<Redirect to={{ pathname: \"#\" }} />)} /> */}\n          <Route exact path=\"/ViewSuggestedMeals\" render={(props) =>  <ViewSuggestedMeals /> } />\n          {/* <Route path=\"/product-detail/:customerId/:productId\" render={(props) => (customer_id !== undefined) ? <ProductFullDetail /> : (<Redirect to={{ pathname: \"#\" }} />)} /> */}\n          {/* <Route path=\"/product-detail/:customerId/:productId\" component={ProductFullDetail} /> */}\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n// export default App;\n\nconst mapStateToProps = ({ auth }) => {\n  // const { authUser, token, initURL } = auth;\n  const { authUser, token, role, customer_id } = auth;\n  return { authUser, role, token, customer_id }\n};\nconst mapDispatchToProps = { setInitUrl, getUser };\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport configureStore, { history } from \"./store\";\n// import './style.css';\nimport App from \"./App\";\n\nexport const store = configureStore();\n\nconst MainApp = () =>\n    <Provider store={store}>\n        <Router history={history}>\n            <Switch>\n                <Route path=\"/\" render={(props) => (<App {...props} />)} />\n            </Switch>\n        </Router>\n    </Provider>\n\nexport default MainApp;","import {combineReducers} from 'redux';\nimport {connectRouter} from 'connected-react-router'\nimport Auth from './Auth';\nimport Common from './Common';\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  auth: Auth,\n  commonData: Common,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './MainApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter >\n        <MainApp/>\n    </BrowserRouter>, document.getElementById('root'));\n    \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no_meal_step_image.da8c3317.png\";"],"sourceRoot":""}