{"version":3,"sources":["assets/images/ola_ola_palm_oil.jpg","components/Header/Header.js","components/Footer.js","components/HomePage.js","text_slide.js","components/mealsPage/Mymodal.js","components/mealsPage/product_slider/WithScrollbar.js","components/mealsPage/MealsPage.js","components/productsPage/ProductsPage.js","components/Login/index.jsx","components/CommonComponents/PageTitle/index.jsx","components/GroceryPage/ProductDetail/ProductModal.js","components/GroceryPage/index.jsx","components/ProductFullDetail/ProductFullDetail.js","components/signup/index.jsx","components/forgotpassword/index.jsx","components/resetpassword/index.jsx","components/SuggestMeal.js","components/ViewSuggestedMeals.js","components/AdminPanel/AdminPanel.js","App.js","serviceWorker.js","index.js","assets/images/logo2.png"],"names":["module","exports","Header","Component","constructor","props","super","CustomToggle","React","forwardRef","children","onClick","ref","href","e","preventDefault","this","updateLogInStatus","bind","handleLogout","state","suggestMealPopOver","base_index","topNav_className","isAuthenticated","customerId","username","console","log","setState","window","localStorage","setItem","fetch","method","credentials","headers","then","response","json","res","data","catch","err","location","reload","render","myFunction","x","document","getElementById","className","login_on_desktop_navbar","login_on_burger_navbar","alignRight","Toggle","as","id","Menu","Item","eventKey","onSelect","ev","obj","Divider","to","style","padding","color","backgroundColor","borderBottom","src","img_logo","width","placeholder","type","borderColor","right","display","marginTop","marginRight","justifyContent","marginLeft","border","FooterPagePro","Container","Row","Col","md","textAlign","aria-hidden","fontSize","Date","getFullYear","HomePage","product_fetched","TextSlider","modalIsOpen","increment","checked","index","handleSelect","updateInstructionsDisplayBaseIndex","selectedIndex","event","target","innerText","last_chars","slice","slide_num","Number","mealPrep1","value","i","popUpSlides","carouselSlides","instructionsLength","instructions","length","push","key","undefined","Carousel","alt","Caption","content","MyModal","decrease","prevState","evnet","increase","openModal","closeModal","mealPrep","ingredientsList","name","label","Modal","show","onHide","Body","background","paddingLeft","paddingRight","showThumbs","infiniteLoop","map","height","imageSrc","readTime","cookTime","closeButton","onChange","ingredient","WithScrollbar","centerMode","centerSlidePercentage","products","image","MealsPage","meal_popups","meals","intro","ingredients","new_ingredient","Garri","servings","quantitiy","measurements","Water","Sugar","product_slider","quantity","mealsListed","mealSelected","IngredientsListed","recipes","selectedMealIngredients","new_ingredients","selectedMeal","valueAllDataLists","showIngredients","hidden","showProducts","mealsLength","componentDidMount","text","body","productsList","JSON","parse","showIngredient","items","entries","step","containerStyle","y","ProductSection","storeCollection","store_products_fetched","storeList","store_name","error","store_products","productsMenu","storeProductsIndex","productValue","product_name","trigger","product_image","product_price","modal","closeOnDocumentClick","contentStyle","align","store_image","maxWidth","maxHeight","overflow","Login","handleChange","handleLoginClick","email","password","stringify","status","messageErr","messageSuccess","message","token","customerID","role","messageAlert","showAlert","variant","setTimeout","handleClose","backdrop","size","Title","Button","Form","Control","autoComplete","Label","column","PageTitle","title","ProductModal","gotoViewPage","productID","url","history","product_img","position","top","left","zIndex","onCloseClicked","withRouter","GroceryPage","_isMounted","productNamesForTypeahead","Map","customerList","Authentication","messageErrCreate","deletedItemId","selectedProduct","idsItems","deletedItemsId","lasIdListState","valueProductName","valueProductImage","valueProductPrice","valueProductSize","valuePricePerOunce","errormsg","typeAheadAdded","product_modal_flg","handleProductClick","_img","_name","flag","getCustomerList","localToken","getItem","Authorization","handleShowDeleteItem","filter","item","handleDeleteList","handleClickTypeahead","selected","get","isNaN","auth","componentWillReceiveProps","nextProps","options","Array","from","keys","Alert","messageVisible","stopPropagation","fluid","customer_grocery_product_item","startsWith","Card","Text","sizes","handleAddItemToCart","Spinner","animation","ProductFullDetail","match","params","productId","productData","componentWillMount","SignUp","phone","showModal","emailNotification","currentTarget","delay","formSubmit","submitForm","xs","lg","onSubmit","Group","controlId","Check","ButtonToolbar","ResetPassword","password1","password2","search","replace","split","formData","Object","assign","isItReset","SuggestMeal","categories","onTextFieldChange","onTextFieldClick","imgSrc","files","sendSuggestedMealToDB","mealLabel","ingredientStrings","formatted_ingredient","instructionsChip","categoryChips","alert","sugestMealForm","FormData","set","config","axios","currentIngredient","currentIngredientMeasurement","currentIngredientQuantity","productsPopulated","handleIngredientDropdownChange","handleIngredientMeasurement","handleIngredientQuantity","addIngredientToMeal","categoryList","handleAddIngredientChip","chip","handleAddCategoryChip","handleAddInstructionStep","handleDeleteIngredientChip","array","indexOf","splice","handleDeleteCategoryChip","handleDeleteInstructionsStep","innerHTML","properIngredientStringSyntax","currIngredientObject","product","measurement","instructionSteps","tabIndex","action","TextField","required","multiline","onAdd","onDelete","Autocomplete","option","freeSolo","renderInput","accept","multiple","defaultValue","renderTags","getTagProps","Chip","columns","minWidth","ViewSuggestedMeals","updateSuggestItem","mealRole","selected_id","_id","open","suggestMealRole","loading_imgSrc","newer_ingredient_format","last_ingredient","temp","URL","createObjectURL","img_change_flag","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","handleDeleteMealItem","handleClickOpen","mealData_list","handleUpdateSubmit","formatted_ingredient_array","classes","theme","createMuiTheme","palette","primary","green","root","TableContainer","container","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","fontWeight","TableBody","row","IconButton","component","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","Dialog","onClose","aria-labelledby","aria-describedby","fullWidth","DialogTitle","DialogContent","noValidate","margin","disableRipple","disabled","ThemeProvider","withStyles","AdminPanel","handleOnClickItems","userRole","img_oil","DialogContentText","App","authenticateUser","success","itemTypeahead","userToken","exact","path","pathname","dataTypeaheadProps","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46790e4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ola_ola_palm_oil.70ad3e22.jpg\";","import React, { Component, useState } from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\n// import HomePage from \"../HomePage\";\r\n// import MealsPage from \"../mealsPage/MealsPage\";\r\n// import ProductsSection from \"../productsPage/ProductsPage\";\r\n// import Login from \"../Login\";\r\n// import GroceryPage from \"../GroceryPage\";\r\n// import ProductFullDetail from \"../ProductFullDetail/ProductFullDetail\";\r\n// import SignUp from \"../signup\";\r\n// import ForgotPassword from \"../forgotpassword\";\r\n// import ResetPassword from \"../resetpassword\";\r\n// import SuggestMeal from \"../SuggestMeal\";\r\n// import ViewSuggestedMeals from \"../ViewSuggestedMeals\";\r\nimport img_logo from \"../../assets/images/logo2.png\"\r\nimport './header.scss';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.updateLogInStatus = this.updateLogInStatus.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n\r\n    this.state = {\r\n      suggestMealPopOver: false,\r\n      base_index: 0,\r\n      topNav_className: \"w3-bar w3-dark-grey w3-green topnav\",\r\n      isAuthenticated: false,\r\n      customerId: null,\r\n      username: null,\r\n    };\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  updateLogInStatus(customerId, username) {\r\n    console.log(\"updates log in status before\");\r\n    this.setState({ isAuthenticated: true });\r\n    this.setState({ customerId: customerId });\r\n    this.setState({ username: username });\r\n\r\n    console.log(\"updates log in status after\");\r\n    console.log(\"customerID is:\" + customerId);\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////\r\n  // componentDidMount() {\r\n  //   console.log(\"Comes in app.js's component did mount\");\r\n  //   this.authenticateUser();\r\n  //   console.log(\"customerID is:\" + this.state.customerId);\r\n  // }\r\n\r\n  // //////////////////////////////////////////////////////////////////////\r\n  // authenticateUser() {\r\n  //   var localToken = window.localStorage.getItem(\"userToken\");\r\n  //   // api authenticate user calls authenticationVerify,isAuthenticated\r\n  //   // var url = `https://chopchowdev.herokuapp.com/api/authenticate-grocery-page`;\r\n  //   var url = `/api/authenticate-app-page`;\r\n  //   // var url = `http://localhost:5000/api/authenticate-grocery-page`\r\n  //   fetch(url, {\r\n  //     method: \"GET\",\r\n  //     credentials: \"same-origin\",\r\n  //     headers: {\r\n  //       \"Content-type\": \"application/json\",\r\n  //       Authorization: \"Bearer \" + localToken,\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(\"api/ authenticate (app page) response:\");\r\n  //       console.log(response);\r\n\r\n  //       if (response.success && response.data) {\r\n  //         this.setState({ isAuthenticated: true });\r\n  //       } else { this.setState({ isAuthenticated: false }); }\r\n\r\n  //       this.setState({ customerId: response.data, username: response.username });\r\n  //       const { customerId, username } = this.state;\r\n  //       console.log(\"customer id iis: \" + customerId);\r\n  //       console.log(\"username iis: \" + username);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"fails to authenticate app page\");\r\n  //       console.log(err);\r\n  //     });\r\n  // }\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n      &#x25bc;\r\n    </a>\r\n  ));\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  handleLogout(e) {\r\n    if(e === \"5\")\r\n    {\r\n      //clear cookie cache\r\n      window.localStorage.setItem(\"userToken\", null);\r\n      window.localStorage.setItem(\"userRole\", null);\r\n\r\n      var url = \"/api/logout\";\r\n      fetch(url, {\r\n        method: \"GET\",\r\n        credentials: \"same-origin\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          response.json().then((res) => {\r\n            console.log(\"logout response is:\");\r\n            console.log(res);\r\n            console.log(\"should print body\");\r\n            // var bodyResponse = JSON.parse(res.body);\r\n            console.log(res.data);\r\n            if (res.data === \"success\") {\r\n              console.log(\"comes to turn off authentication state\");\r\n              this.setState({ isAuthenticated: false });\r\n            }\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"fails to authenticate app page\");\r\n          console.log(err);\r\n        });\r\n\r\n      this.setState({ isAuthenticated: false });\r\n      window.location.reload(false);\r\n    }else if(e === \"2\"){\r\n      return (window.location.href = \"/admin\");\r\n    }\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  render() {\r\n    // Render your page inside\r\n    // the layout provider\r\n    //const elements = ['one', 'two', 'three'];\r\n    //const popOverInfo = []\r\n    const { isAuthenticated, customerId, username,  } = this.props.data;\r\n    const items = [];\r\n    /* Toggle between adding and removing the \"responsive\" class to topnav when the user clicks on the icon */\r\n    function myFunction() {\r\n      var x = document.getElementById(\"mobileNavbar\");\r\n      console.log(x);\r\n      if (x.className === \"mobileNavbar\") {\r\n        x.className += \" visible\";\r\n      } else {\r\n        x.className = \"mobileNavbar\";\r\n      }\r\n    }\r\n\r\n    var login_on_desktop_navbar;\r\n    var login_on_burger_navbar;\r\n\r\n    if (isAuthenticated) {\r\n      login_on_desktop_navbar = (\r\n        <li className=\"nav-item\">\r\n          <Dropdown alignRight>\r\n          <Dropdown.Toggle as={this.CustomToggle} id=\"dropdown-custom-components\">\r\n              {username}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu >\r\n            <Dropdown.Item eventKey=\"1\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Profile</Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey=\"2\" onSelect={(ev, obj)=>this.handleLogout(ev)}> Dashboard/orders</Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey=\"3\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Support</Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey=\"4\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Switch to driver mode</Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey=\"5\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Log out</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        </li>\r\n      );\r\n\r\n      login_on_burger_navbar = (\r\n        // <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\r\n        //   <button\r\n        //     to=\"/login\"\r\n        //     className=\"nav-link px-2\"\r\n        //     style={{ color: \"#FFFFFF\" }}\r\n        //     onClick={this.handleLogout}\r\n        //   >\r\n        //     Logout\r\n        //   </button>\r\n        // </li>\r\n        <li className=\"nav-item\">\r\n          <Dropdown>\r\n          <Dropdown.Toggle className=\"user-item\" as={this.CustomToggle} id=\"dropdown-custom-components\">\r\n              {username}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu >\r\n            <Dropdown.Item eventKey=\"1\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Profile</Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey=\"2\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Dashboard/orders</Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey=\"3\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Support</Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey=\"4\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Switch to driver mode</Dropdown.Item>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item eventKey=\"5\" onSelect={(ev, obj)=>this.handleLogout(ev)}>Log out</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        </li>\r\n      );\r\n\r\n    } else {\r\n      login_on_desktop_navbar = (\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/login\" className=\"nav-link px-2\">\r\n            Log In / Register\r\n          </Link>\r\n        </li>\r\n      );\r\n      login_on_burger_navbar = (\r\n        <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\r\n          <Link\r\n            to=\"/login\"\r\n            className=\"nav-link px-2\"\r\n            style={{ color: \"#FFFFFF\" }}\r\n          >\r\n            Log In / Register\r\n          </Link>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"header-wraper\">\r\n        <nav\r\n          className=\"navbar navbar-expand-md fixed-top-sm justify-content-start flex-nowrap navbar-light\"\r\n          style={{\r\n            backgroundColor: \"#FFFFFF\", borderBottom: \"1px solid #fd7e14\"\r\n          }}\r\n        >\r\n          {/* Desktop Navbar */}\r\n          <div className=\"header-panel w-100\">\r\n            <div className=\"header-left \">\r\n              <Link to=\"/\" className=\"logo_tag navbar-brand \">\r\n                <img src={img_logo} width=\"60px\" />\r\n              </Link>\r\n              <div className=\" form-inline navbar-first\" style={{ padding: \"14px 16px\"}}>\r\n                <div className=\"input-group \" >\r\n                  <input\r\n                    className=\"form-control \"\r\n                    placeholder=\"Search meal or category\"\r\n                  />\r\n                  <span className=\"input-group-append\">\r\n                    <button\r\n                      className=\"btn btn-outline-secondary\"\r\n                      type=\"button\"\r\n                      style={{\r\n                        backgroundColor: \"#fd7e14\",\r\n                        borderColor: \"#fd7e14\",\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-search\" style={{ color: \"#FFFFFF\" }}></i>\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"header-right navbar-first\">\r\n              <ul className=\"navbar-nav flex-row\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/grocery\" className=\"nav-link px-3\">\r\n                    Grocery List\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/products\" className=\"nav-link px-3\">\r\n                    Shoping Cart\r\n                    </Link>\r\n                </li>\r\n                {login_on_desktop_navbar}                \r\n              </ul>              \r\n            </div>\r\n          </div>\r\n\r\n          <Link to=\"#\" className=\"icon navbar-toggle\" onClick={() => { console.log(\"Comes thru here\"); myFunction(); }}  >\r\n            <i className=\"fa fa-bars\" style={{ color: \"#AAAAAA\", right: \"1%\" }}></i>\r\n          </Link>          \r\n        </nav>\r\n\r\n\r\n        {/* Burger navbar */}\r\n        <div className=\"mobileNavbar\" id=\"mobileNavbar\" style={{ display: \"none\" }} >\r\n          <div className=\"mobileNavbar-menu\">\r\n            <span className=\"input-group-append\" style={{ marginTop:\"23px\",  marginRight:\"15px\"  , justifyContent:\"flex-end\"}}> \r\n              <Link to=\"#\" className=\"icon navbar-toggle\" onClick={() => { console.log(\"Comes thru here\"); myFunction(); }}  >\r\n                  <i className=\"fa fa-bars\" style={{ color: \"white\", marginLeft:\"10px\", padding: \"10px 17px\" }}></i>\r\n              </Link>\r\n            </span>\r\n\r\n            <ul className=\"navbar-nav\">\r\n              <li style={{ padding: \"5px 16px\", borderBottom: \"1px solid #FFFFFF\" }}>\r\n              \r\n              <div className='search_bar'>\r\n                <form >\r\n                  <input\r\n                    className='form-control'\r\n                    placeholder='Search meal or category'\r\n                    style={{\r\n                      backgroundColor: \"#fd7e14\",\r\n                      border: \"1px solid #FFFFFF\",\r\n                    }}\r\n                  />\r\n                   <span className=\"search_bar__icon\">\r\n                        <div className=\"btn btn-outline-secondary\" style={{\r\n                          backgroundColor: \"#FFFFFF\",\r\n                          borderColor: \"#fd7e14\",\r\n                        }}>\r\n                        <i className=\"fa fa-search \" style={{ color: \"#fd7e14\"}} ></i>\r\n                        </div>\r\n                    </span>\r\n                </form>\r\n              </div>\r\n\r\n              {/* <form className=\"form-inline\" style={{ padding: \"14px 0px\" }}>\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search meal or category\"\r\n                    style={{\r\n                      backgroundColor: \"#fd7e14\",\r\n                      border: \"1px solid #FFFFFF\",\r\n                      width: \"150px\",\r\n                    }}\r\n                  />\r\n                  <span className=\"input-group-append\">\r\n                      <div className=\"btn btn-outline-secondary\" style={{\r\n                        backgroundColor: \"#FFFFFF\",\r\n                        borderColor: \"#fd7e14\",\r\n                      }}>\r\n                      <i className=\"fa fa-search \" style={{ color: \"#fd7e14\"}} ></i>\r\n                      </div>\r\n                  </span>\r\n                </div>                  \r\n              </form> */}\r\n              </li>\r\n              {login_on_burger_navbar}\r\n\r\n              {/* <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\r\n                <button className=\"nav-link px-2\" style={{ color: \"#FFFFFF\" }}>\r\n                  Cart Page\r\n                  </button>\r\n              </li> */}\r\n\r\n              <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\r\n                <Link\r\n                  to=\"/grocery\"\r\n                  className=\"nav-link px-2\"\r\n                  style={{ color: \"#FFFFFF\" }}\r\n                >\r\n                  Grocery List\r\n                  </Link>\r\n              </li>\r\n\r\n              <li\r\n                className=\"nav-item\"\r\n                style={{\r\n                  padding: \"14px 16px\",\r\n                  borderBottom: \"1px solid #FFFFFF\",\r\n                }}\r\n              >\r\n                <Link\r\n                  to=\"/products\"\r\n                  className=\"nav-link px-2\"\r\n                  style={{ color: \"#FFFFFF\" }}\r\n                >\r\n                  Shoping Cart\r\n                  </Link>\r\n              </li>\r\n              <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\r\n                <Link\r\n                  to=\"/v2\"\r\n                  className=\"nav-link px-2\"\r\n                  style={{ color: \"#FFFFFF\" }}\r\n                >\r\n                    Home\r\n                  </Link>\r\n              </li>              \r\n              <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\r\n                <Link\r\n                  to=\"/products\"\r\n                  className=\"nav-link px-2\"\r\n                  style={{ color: \"#FFFFFF\" }}\r\n                >\r\n                  Products\r\n                  </Link>\r\n              </li>\r\n              <li className=\"nav-item\" style={{ padding: \"14px 16px\" }}>\r\n                <Link\r\n                  to=\"/products\"\r\n                  className=\"nav-link px-2\"\r\n                  style={{ color: \"#FFFFFF\" }}\r\n                >\r\n                  Receipes\r\n                  </Link>\r\n              </li>\r\n              {/* <li\r\n                className=\"nav-item\"\r\n                style={{\r\n                  padding: \"14px 16px\",\r\n                  borderBottom: \"1px solid #FFFFFF\",\r\n                }}\r\n              >\r\n                <button className=\"nav-link px-2\" style={{ color: \"#FFFFFF\" }}>\r\n                  Stats\r\n                  </button>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <nav\r\n          className=\"navbar navbar-expand-md  navbar-light navbar-second\"\r\n          style={{ backgroundColor: \"#EEEEEE\" }}\r\n        >\r\n          <div className=\"navbar-collapse collapse pt-2 pt-md-0\" id=\"navbar2\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item active\" style={{ marginRight: \"50%\" }}>\r\n                <Link to=\"/v2\" className=\"nav-link px-2\">\r\n                  Home\r\n                  </Link>\r\n              </li>\r\n              <li className=\"nav-item\" style={{ marginRight: \"50%\" }}>\r\n                <Link to=\"/products\" className=\"nav-link px-2\">\r\n                  Products\r\n                  </Link>\r\n              </li>\r\n              <li className=\"nav-item\" style={{ marginRight: \"50%\" }}>\r\n                <Link to=\"/v2\" className=\"nav-link px-2\">\r\n                  Receipes\r\n                  </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        {/* <Switch>\r\n          <Route exact path=\"/login\"  \r\n            render={() => (\r\n              <Login updateLogInStatus={this.updateLogInStatus}/>\r\n            )}\r\n          />\r\n\r\n          <Route exact path=\"/signup\" render={(props) => <SignUp {...props} />} />\r\n          <Route exact path=\"/resetpass\" render={(props) => <ResetPassword {...props} />} />\r\n          <Route exact path=\"/forgotpass\" render={(props) => <ForgotPassword {...props} />}/>\r\n          <Route exact path=\"/\" render={(props) => (\r\n              <div>\r\n                <div id=\"title\"><b>Meals</b></div>\r\n                <div className=\"container\">\r\n                  <div className=\"row\">{items}</div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n\r\n          <Route path=\"/home\" render={() => <HomePage />} />\r\n          <Route path=\"/v2\" render={() => <MealsPage />} />\r\n          <Route exact path=\"/grocery\"\r\n            render={() => (\r\n              <GroceryPage\r\n                auth={isAuthenticated}\r\n                dataTypeaheadProps={itemTypeahead}\r\n                customerId={customerId}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route path=\"/products\" render={(props) => <ProductsSection />} />\r\n          <Route exact path=\"/SuggestMeal\" render={(props) => <SuggestMeal />}/>\r\n          <Route exact path=\"/ViewSuggestedMeals\" render={(props) => <ViewSuggestedMeals />}/>\r\n          <Route path=\"/product-detail/:customerId/:productId\" component={ProductFullDetail} />\r\n\r\n        </Switch> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport { Form, Button, Container, Modal, Row, Col, Card } from \"react-bootstrap\";\r\nimport img_logo from \"../assets/images/logo2.png\";\r\nimport './Footer.scss';\r\n\r\nconst FooterPagePro = () => {\r\n  return (\r\n    <Container className=\"footer-wraper\" >      \r\n      <Row style={{ width: \"100%\" }}>\r\n        <hr\r\n          className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n          <Col md={3} className=\"footer-colmun\">\r\n            <h6 className=\"text-uppercase font-weight-bold\"  style={{ color: \"gray\" }}>\r\n                <strong>Services</strong>\r\n            </h6>\r\n            <hr\r\n              className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n              style={{ width: \"100px\" }}\r\n            />\r\n            <p><a href=\"#!\">Recipes</a></p>\r\n            <p><a href=\"#!\">GroceryList</a></p>\r\n            <p><a href=\"#!\">Food Products</a></p>\r\n            <p><a href=\"#!\">Kitchen Products</a></p>\r\n            <p><a href=\"#!\">Household Products</a></p>\r\n          </Col>\r\n          <Col md={3} className=\"footer-colmun\">\r\n              <h6 className=\"text-uppercase font-weight-bold\"  style={{ color: \"gray\" }}>\r\n                  <strong>Resources</strong>\r\n              </h6>\r\n              <hr\r\n                className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n                style={{ width: \"100px\" }}\r\n              />\r\n              <p><a href=\"#!\">Login/ My Account</a></p>\r\n              <p><a href=\"#!\">Sign Up</a></p>\r\n              <p><a href=\"#!\">Supplier Home</a></p>\r\n              <p><a href=\"#!\">Shipping + Returns</a></p>\r\n              <p><a href=\"#!\">FAQ + Support</a></p>\r\n              <p><a href=\"#!\">Contact</a></p>\r\n          </Col>\r\n          <Col md={3} className=\"footer-colmun\">\r\n            <h6 className=\"text-uppercase font-weight-bold\"  style={{ color: \"gray\" }}>\r\n                <strong>Company</strong>\r\n            </h6>\r\n            <hr\r\n              className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n              style={{ width: \"100px\" }}\r\n            />\r\n            <p><a className=\"fa mr-3\" /> About Us</p>\r\n            <p><a className=\"fa mr-3\" /> Careers</p>\r\n            <p><a className=\"fa mr-3\" /> Partner</p>\r\n            <p><a className=\"fa mr-3\" /> Terms of Service</p>\r\n            <p><a className=\"fa mr-3\" /> Privacy Policy</p>\r\n          </Col>\r\n          <Col md={3} className=\"footer-colmun\" style={{ textAlign: \"center\" }}>\r\n            <img src={img_logo} width=\"100px\" />\r\n            <div className=\"logo-text\">Adding convenience to home made mealsTM</div>\r\n            <div style={{ marginTop: \"20px\" }}>  \r\n              <i className=\"fa fa-facebook-square m-2\" aria-hidden=\"true\"  style={{ fontSize: \"30px\" }}></i>\r\n              <i className=\"fa fa-instagram m-2\" aria-hidden=\"true\" style={{ fontSize: \"30px\" }}></i>\r\n            </div>\r\n            <div className=\"\"> &copy; {new Date().getFullYear()} Copyright:{\" \"}\r\n             <a href=\"https://www.awokorpenterprises.com\"> ChopChowSD </a></div>\r\n          </Col>\r\n        </Row>\r\n    </Container>\r\n\r\n\r\n    // <MDBFooter\r\n    //   // color=\"unique-color-dark\"\r\n    //   className=\"page-footer font-small pt-0\"\r\n    // >\r\n    //   <div style={{ backgroundColor: \"orange\" }}>\r\n    //     <MDBContainer fluid className=\"text-center text-md-left\">\r\n    //       <MDBRow className=\"py-4 d-flex align-items-center\">\r\n    //         <MDBCol\r\n    //           md=\"6\"\r\n    //           lg=\"5\"\r\n    //           className=\"text-center text-md-left mb-4 mb-md-0\"\r\n    //         >\r\n    //           <h6 className=\"mb-0 white-text\">ChopChow </h6>\r\n    //         </MDBCol>\r\n    //         <MDBCol md=\"6\" lg=\"7\" className=\"text-center text-md-right\">\r\n    //           <i className=\"fa fa-facebook-square m-2\" aria-hidden=\"true\"></i>\r\n    //           {/* <i className=\"fa fa-twitter m-2\" aria-hidden=\"true\"></i> */}\r\n    //           <i className=\"fa fa-instagram m-2\" aria-hidden=\"true\"></i>\r\n    //         </MDBCol>\r\n    //       </MDBRow>\r\n    //     </MDBContainer>\r\n    //   </div>\r\n    //   <MDBContainer className=\"mt-5 mb-4 text-center text-md-left\">\r\n    //     <MDBRow className=\"mt-3\">\r\n    //       <MDBCol md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-4\">\r\n    //         <h6 className=\"text-uppercase font-weight-bold\">\r\n    //           <strong>Services</strong>\r\n    //         </h6>\r\n    //         <hr\r\n    //           className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n    //           style={{ width: \"60px\" }}\r\n    //         />\r\n    //         <p><a href=\"#!\">Recipes</a></p>\r\n    //         <p><a href=\"#!\">GroceryList</a></p>\r\n    //         <p><a href=\"#!\">Food Products</a></p>\r\n    //         <p><a href=\"#!\">Kitchen Products</a></p>\r\n    //         <p><a href=\"#!\">Household Products</a></p>\r\n    //       </MDBCol>\r\n\r\n    //       <MDBCol md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-4\">\r\n    //         <h6 className=\"text-uppercase font-weight-bold\">\r\n    //           <strong>Resources</strong>\r\n    //         </h6>\r\n    //         <hr\r\n    //           className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n    //           style={{ width: \"60px\" }}\r\n    //         />\r\n    //         <p><a href=\"#!\">Login/ My Account</a></p>\r\n    //         <p><a href=\"#!\">Sign Up</a></p>\r\n    //         <p><a href=\"#!\">Supplier Home</a></p>\r\n    //         <p><a href=\"#!\">Shipping + Returns</a></p>\r\n    //         <p><a href=\"#!\">FAQ + Support</a></p>\r\n    //         <p><a href=\"#!\">Contact</a></p>\r\n    //       </MDBCol>\r\n    //       <MDBCol md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-4\">\r\n    //         <h6 className=\"text-uppercase font-weight-bold\">\r\n    //           <strong>Company</strong>\r\n    //         </h6>\r\n    //         <hr\r\n    //           className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n    //           style={{ width: \"60px\" }}\r\n    //         />\r\n    //         <p><i className=\"fa mr-3\" /> About Us</p>\r\n    //         <p><i className=\"fa mr-3\" /> Careers</p>\r\n    //         <p><i className=\"fa mr-3\" /> Partner</p>\r\n    //         <p><i className=\"fa mr-3\" /> Terms of Service</p>\r\n    //         <p><i className=\"fa mr-3\" /> Privacy Policy</p>\r\n    //       </MDBCol>\r\n    //     </MDBRow>\r\n    //   </MDBContainer>\r\n    //   <div className=\"footer-copyright text-center py-3\">\r\n    //     <MDBContainer fluid>\r\n    //       &copy; {new Date().getFullYear()} Copyright:{\" \"}\r\n    //       <a href=\"https://www.awokorpenterprises.com\"> ChopChowSD </a>\r\n    //     </MDBContainer>\r\n    //   </div>\r\n    // </MDBFooter>\r\n  );\r\n};\r\n\r\nexport default FooterPagePro;\r\n","import React, { Component } from \"react\";\r\n\r\nclass HomePage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      product_fetched : false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div>\r\n        <div id=\"title\">\r\n          <b>Home</b>\r\n        </div>\r\n        {/* <div className=\"container\"> */}\r\n          {/* <div className=\"row\"> */}\r\n            <div>Home Page Image</div>\r\n            <br></br>\r\n            {/* </div> */}\r\n            {/* <div className=\"row\"> */}\r\n                <button>RECIPES</button>\r\n                \r\n                <button>PRODUCTS</button>\r\n\r\n            {/* </div> */}\r\n\r\n\r\n        {/* </div> */}\r\n      </div>\r\n    )\r\n  };\r\n\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport \"./text_slider.css\";\r\n\r\nclass TextSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalIsOpen: false,\r\n      increment: 0,\r\n      checked: false,\r\n      base_index: 0,\r\n      index: 0\r\n    };\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.updateInstructionsDisplayBaseIndex = this.updateInstructionsDisplayBaseIndex.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  handleSelect(selectedIndex) {\r\n    this.setState({ index: selectedIndex + 1 });\r\n  }\r\n\r\n  updateInstructionsDisplayBaseIndex(event) {\r\n    console.log(event.target.innerText);\r\n    var button = event.target.innerText;\r\n    // var regExp = \"/^w+[ ]/d  $/\";\r\n    // var slide_index = button.match(regExp);\r\n    //console.log(slide_index);\r\n    var last_chars = button.slice(6, 7);\r\n\r\n    var slide_num = Number(last_chars);\r\n\r\n    this.setState({ base_index: slide_num * 3 });\r\n    //var base_index = slide_num*3;\r\n    //console.log(\"Updating base index on click to: \" +this.state.base_index);\r\n  }\r\n\r\n  render() {\r\n    const { mealPrep1, value } = this.props;\r\n    console.log({ mealPrep1 }, \"pppppppppp\");\r\n    var popUpSlides = [];\r\n    var carouselSlides = [];\r\n    var i;\r\n    const instructionsLength = value.instructions.length;\r\n\r\n    for (i = 0; i < instructionsLength / 3; i++) {\r\n      popUpSlides.push(\r\n        <button key={i} onClick={this.updateInstructionsDisplayBaseIndex}>\r\n          Slide {i}{\" \"}\r\n        </button>\r\n      );\r\n    }\r\n\r\n    console.log(\"instructions length: \" + instructionsLength);\r\n    for (i = 0; i <= instructionsLength / 2; i++) {\r\n      console.log(\"i is :\" + i);\r\n      if (mealPrep1[((i * 2) + 1)] !== undefined) {\r\n        console.log(\"Comes in here with 3 instructions for slide #: \" + i);\r\n        carouselSlides.push(\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"img-responsive imageHeighgt\"\r\n              src=\"https://www.beautycolorcode.com/f6f0f0-2880x1800.png\"\r\n              alt=\"First slide\"\r\n            />\r\n            <Carousel.Caption>\r\n              <div id=\"mealPrepChunk\">\r\n                {/* manually add intstruction numbering for display as list */}\r\n                {(i * 2) + 1}. {mealPrep1[(i * 2) + 0]}\r\n                {(i * 2) + 2}. {mealPrep1[(i * 2) + 1]}\r\n                {/* {(i * 3) + 3}. {mealPrep1[(i * 3) + 2]} */}\r\n              </div>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        )\r\n      }\r\n      else {\r\n        if (mealPrep1[(i * 2)] !== undefined) {\r\n          console.log(\"Comes in here with 2 instructions for slide #: \" + i);\r\n\r\n          carouselSlides.push(\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"img-responsive imageHeighgt\"\r\n                src=\"https://www.beautycolorcode.com/f6f0f0-2880x1800.png\"\r\n                alt=\"First slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <div id=\"mealPrepChunk\">\r\n                  {(i * 2) + 0}. {mealPrep1[(i * 2) + 0]}\r\n                  {/* {(i * 3) + 1}. {mealPrep1[(i * 3) + 1]} */}\r\n                </div>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          )\r\n        }\r\n        // else if (mealPrep1[(i * 3) ] != undefined) {\r\n        //   console.log(\"Comes in here with 1 instructions for slide #: \"+ i);\r\n\r\n        //   carouselSlides.push(\r\n        //     <Carousel.Item>\r\n        //       <img\r\n        //         className=\"img-responsive imageHeighgt\"\r\n        //         src=\"https://www.beautycolorcode.com/f6f0f0-2880x1800.png\"\r\n        //         alt=\"First slide\"\r\n        //       />\r\n        //       <Carousel.Caption>\r\n        //         <div id=\"mealPrepChunk\">\r\n\r\n        //           {(i * 3) + 0}. {mealPrep1[(i * 3) + 0]}\r\n\r\n        //         </div>\r\n        //       </Carousel.Caption>\r\n        //     </Carousel.Item>\r\n        //   )\r\n        // }\r\n      }\r\n    }\r\n\r\n    return (\r\n\r\n      <div>\r\n        <b>Instructions</b>< br></br>\r\n        <Carousel onSelect={this.handleSelect}>\r\n          {carouselSlides}\r\n        </Carousel>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default TextSlider;","import React, { Component } from \"react\";\r\n// import Modal from \"react-modal\";\r\n// import HeartCheckbox from 'react-heart-checkbox';\r\n// import Slider from \"react-animated-slider\";\r\n// import \"react-animated-slider/build/horizontal.css\";\r\n// import { Carousel } from 'react-responsive-carousel';\r\n// import ImagePopup from \"./ImagePopup\";\r\nimport { Modal } from \"react-bootstrap\";\r\n// import {Button} from 'react-bootstrap/Button';\r\nimport TextSlider from \"../../text_slide\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\n\r\nimport \"../../App.css\";\r\nconst content = [1, 2];\r\nclass MyModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalIsOpen: false,\r\n      increment: 0,\r\n      checked: false,\r\n      index: 0\r\n    };\r\n    this.openModal = this.openModal.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n  decrease = () => {\r\n    if (this.state.increment > 0) {\r\n      this.setState(prevState => ({ increment: prevState.increment - 1 }));\r\n    }\r\n  };\r\n\r\n  onClick = (evnet, props) => {\r\n    this.setState({ checked: !this.state.checked });\r\n  };\r\n\r\n  increase = () => {\r\n    this.setState({ increment: this.state.increment + 1 });\r\n  };\r\n\r\n  openModal() {\r\n    this.setState({ modalIsOpen: true });\r\n  }\r\n\r\n  // afterOpenModal() {\r\n  //   // references are now sync'd and can be accessed.\r\n  //   this.subtitle.style.color = \"#f00\";\r\n  // }\r\n\r\n  closeModal() {\r\n    this.setState({ modalIsOpen: false });\r\n  }\r\n\r\n  handleSelect(selectedIndex, e) {\r\n    this.setState({ index: selectedIndex });\r\n  }\r\n  render() {\r\n    // const { checked } = this.state;\r\n    const { value, mealPrep, ingredientsList } = this.props;\r\n    return (\r\n      <>\r\n        <div id ={value.name}>\r\n          <button\r\n          style={{\r\n            backgroundColor: \"orange\",\r\n            color: \"white\"\r\n          }}\r\n          key={value.id+value.label} onClick={this.openModal}>\r\n            View Steps\r\n          </button>\r\n        </div>\r\n        <Modal\r\n          show={this.state.modalIsOpen}\r\n          // onAfterOpen={this.afterOpenModal}\r\n          onHide={this.closeModal}\r\n          // style={{'backgroundColor': '#bfbfbf'}}\r\n        >\r\n          {/* <Modal.Header closeButton/> */}\r\n          {/* setting position to fixed solves the browser sizing issue on modal body, but then backkkground breaks on modal */}\r\n          <Modal.Body style={{ padding: \"0px\" }}> \r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\"col-md-5 col-xs-12\"\r\n                  style={{\r\n                    background: \"white\",\r\n                    paddingLeft: \"0px\",\r\n                    paddingRight: \"0px\"\r\n                  }}\r\n                >\r\n                  <Carousel showThumbs={false} infiniteLoop={true}>\r\n                    {content.map(index => (\r\n                      <img\r\n                        style={{ height: \"300px\" }}\r\n                        alt=\"pp\"\r\n                        key={index}\r\n                        src={value.imageSrc}\r\n                      />\r\n                    ))}\r\n                  </Carousel>\r\n                  <br />\r\n                  <div className=\"col-md-12 col-xs-12\">\r\n                    <h3> {value.label}</h3>\r\n                    <div>\r\n                      {value.readTime} | {value.cookTime}\r\n                      {/* <HeartCheckbox checked={checked} onClick={this.onClick} /> */}\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        style={{\r\n                          \"margin-left\": \"50%\",\r\n                          backgroundColor: \"grey\",\r\n                          color: \"white\"\r\n                        }}\r\n                      >\r\n                        Compare items\r\n                      </button>\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\" col-md-7 col-xs-12\"\r\n                  style={{ paddingLeft: \"25px\" }}\r\n                >\r\n                  <Modal.Header closeButton style={{'borderBottom': '20px', 'padding': '0px'}}/> \r\n                  <div className=\"row\">\r\n                    Meal Quantity &nbsp;\r\n                    <div\r\n                      className=\"def-number-input number-input\"\r\n                      style={{ backgroundColor: \"lightgrey\" }}\r\n                    >\r\n                      <button\r\n                        onClick={this.decrease}\r\n                        className=\"minus\"\r\n                      ></button>\r\n                      <input\r\n                        className=\"quantity\"\r\n                        name=\"quantity\"\r\n                        value={this.state.increment}\r\n                        onChange={() => console.log(\"change\")}\r\n                        type=\"number\"\r\n                      />\r\n                      <button onClick={this.increase} className=\"plus\"></button>\r\n                    </div>\r\n                    &emsp;\r\n                    <button\r\n                      style={{ backgroundColor: \"green\", color: \"white\" }}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                  </div>\r\n                  <br />\r\n                  <div className=\"row\">\r\n                    <b>Ingredients</b>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    {ingredientsList.map(ingredient => (\r\n                      <div className=\"col-md-6\" key={value.label + ingredient}>\r\n                        <input type=\"checkbox\" value=\"\" />\r\n                        {ingredient}\r\n                        <br />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <hr></hr>\r\n                    <TextSlider mealPrep1={mealPrep} value={value} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default MyModal;\r\n","import React, { Component } from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n \r\nexport default class WithScrollbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Carousel showThumbs={false} infiniteLoop={true} centerMode={true} centerSlidePercentage={100 / 2}>\r\n              {this.props.products.map(ingredient => (\r\n                <div key={ingredient}>\r\n                    <p className=\"\">{ingredient.ingredient}</p>\r\n                    <img src={\"/images/products/\"+ingredient.image} alt={ingredient.ingredient} />\r\n\r\n                </div>\r\n              ))}\r\n               \r\n            </Carousel>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MyModal from \"./Mymodal\";\r\nimport WithScrollbar from \"./product_slider/WithScrollbar\";\r\n\r\nclass MealsPage extends Component {\r\n\r\n    // Mongo\r\n    products = [];\r\n    entries;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      product_fetched : false,\r\n      suggestMealPopOver: false,\r\n      mealsListed: false,\r\n      mealSelected: false,\r\n      IngredientsListed: false,\r\n      recipes: this.meals, //[this.Garri, this.Jollof_Rice],\r\n      selectedMealIngredients: this.meals[0].new_ingredients,\r\n      selectedMeal: this.meals[0],\r\n      valueAllDataLists: [],\r\n      showIngredients: {\r\n        hidden: true\r\n      },\r\n      showProducts: {\r\n        hidden: true\r\n      },\r\n      //open: false,\r\n      mealsLength: this.meals.length,\r\n      topNav_className: \"w3-bar w3-dark-grey w3-green topnav\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Comes in meal pages component did mount\");\r\n    var url = \"https://chopchowdev.herokuapp.com/api/get-meals\";\r\n    // var url = \"http://localhost:5000/api/get-meals\"\r\n\r\n    fetch(url)\r\n      .then(res => res.text())\r\n      .then(body => {\r\n        // console.log(\"should print body\");\r\n        // console.log(body);\r\n        var productsList = JSON.parse(body);\r\n        // console.log(productsList);\r\n        if(productsList && productsList.data.length !== 0){\r\n          console.log(\"shows products does return\");\r\n          console.log(productsList.data.length);\r\n          for (var i = 0; i < productsList.data.length; i++) {\r\n            this.products.push(productsList.data[i]);\r\n          }\r\n          console.log(this.products);\r\n          // this.entries = Object.entries(this.products);\r\n          // console.log(entries);\r\n          this.setState({product_fetched:true});\r\n        }\r\n        else{\r\n          console.log(\"shows products do not return\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  meal_popups = [];\r\n\r\n  showIngredient(index) {\r\n    console.log(\"updating popup boolean\");\r\n    this.meal_popups[index] = !this.meal_popups[index];\r\n  }\r\n\r\n\r\n  render() {\r\n    const items = [];\r\n    console.log(\"Hello RENDER\");\r\n    for (const [index, value] of this.products.entries()) {\r\n      console.log(\"COMES IN RENDER\");\r\n      //console.log();\r\n      // var base_index = 0;\r\n      console.log(value);\r\n      const mealPrep = value.instructions.map(step => (\r\n        <text key={value.label + \" - \" + step}> {step} <br></br></text>\r\n      ));\r\n      // console.log(mealPrep);\r\n\r\n      // const instructionsLength = value.instructions.length;\r\n      //console.log(instructionsLength);\r\n\r\n      // var mealIngredient = value.ingredients ;\r\n      // const ingredientsList = value.ingredients.map(step => (\r\n      //   <li key={step}> {step} </li>\r\n      // ));\r\n      this.meal_popups.push(false);\r\n      // console.log(this.meal_popups);\r\n      // console.log(index);\r\n      items.push(\r\n        <div key={value.label + value.id} className=\"col-sm-12 col-md-4 col-lg-3 mealContainer\">\r\n          <div>\r\n            <div style={containerStyle}>\r\n              <img\r\n                src={value.imageSrc}\r\n                className=\"images\"\r\n                style={{ width: \"200px\", height: \"180px\" }}\r\n                alt={value.id}\r\n                onClick={() => {\r\n                  this.meal_popups[index] = !this.meal_popups[index];\r\n                  console.log(this.meal_popups);\r\n                  var x = document.getElementById(value.id);\r\n                  var y = document.getElementById(value.id + \"products\");\r\n                  if (this.meal_popups[index]) {\r\n                    x.style.display = \"block\";\r\n                    y.style.display = \"block\";\r\n                  } else {\r\n                    x.style.display = \"none\";\r\n                    y.style.display = \"none\";\r\n                  }\r\n                }}\r\n              ></img>\r\n              {/* <img src={value.imageSrc} className=\"images\" style={{width:\"100%\"}} alt={value.id} onClick={this.showIngredient(index)}></img> */}\r\n              <div>\r\n                {\" \"}\r\n                {/* <b> */}\r\n                {\" \"}\r\n                <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\r\n                {/* </b> */}\r\n                {\" \"}\r\n\r\n                {\" \"}\r\n                <span style={{ color: \"grey\" }}>View Details | {value.cookTime}</span>\r\n                <span\r\n                  style={{ color: \"black\" }}\r\n                  onClick={() => {\r\n                    this.meal_popups[index] = !this.meal_popups[index];\r\n                    console.log(this.meal_popups);\r\n                    var x = document.getElementById(value.id);\r\n                    var y = document.getElementById(value.id + \"products\");\r\n                    if (this.meal_popups[index]) {\r\n                      x.style.display = \"block\";\r\n                      y.style.display = \"block\";\r\n                    } else {\r\n                      x.style.display = \"none\";\r\n                      y.style.display = \"none\";\r\n                    }\r\n                  }}\r\n                >\r\n                </span>\r\n                <div id={value.id} style={{ display: \"none\" }}>\r\n                  {value.intro}\r\n                  <MyModal\r\n                    value={value}\r\n                    mealPrep={mealPrep}\r\n                    ingredientsList={value.ingredients}\r\n                  />\r\n\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n              </div>\r\n              <div id={value.id + \"products\"} style={{ display: \"none\" }}>\r\n                {/* Meal Ingredients */}\r\n                <br></br>\r\n                {value.products}\r\n                <WithScrollbar\r\n                  products={value.product_slider}\r\n                // ingredients={[\r\n                //   { name: \"sugar\", image: \"/images/products/sugar.jpeg\" },\r\n                //   { name: \"onion\", image: \"/images/products/onion.jpg\" },\r\n                //   { name: \"tomato\", image: \"/images/products/tomato.jpg\" },\r\n                //   { name: \"water\", image: \"/images/products/water.jpeg\" },\r\n                //   {\r\n                //     name: \"vegetable oil\",\r\n                //     image: \"/images/products/vegetable_oil.jpg\"\r\n                //   }\r\n                // ]}\r\n                />\r\n                <br />\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <div id=\"title\">\r\n          <b>Meals</b>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/* <div className=\"row\"> */}\r\n            {items}\r\n            {/* </div> */}\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  meals = [\r\n    {\r\n      id: 1,\r\n      label: \"Garri\",\r\n      imageSrc: \"/images/meal_pics/Garri.jpg\",\r\n      readTime: \"2 mins read\",\r\n      cookTime: \"2 mins\",\r\n      intro:\r\n        \"Garri (African cereal) is a populous snack-meal in Western African region. \" +\r\n        \"It is made from cassava and can be drink by soaking in cold water or eaten as meal by soaking in hot water till its solid.\",\r\n      ingredients: [\"Garri\", \"Water\", \"Sugar\"],\r\n      new_ingredient: {\r\n        Garri: {\r\n          servings: {\r\n            quantitiy: 1,\r\n            measurements: \"Cup(s)\"\r\n          }\r\n        },\r\n        Water: {\r\n          servings: {\r\n            quantitiy: 1,\r\n            measurements: \"Cup(s)\"\r\n          }\r\n        },\r\n        Sugar: {\r\n          servings: {\r\n            quantitiy: 1,\r\n            measurements: \"Spoon(s)\"\r\n          }\r\n        }\r\n      },\r\n      products: [\"Garri \", \"Sugar \", \"Water \"],\r\n      product_slider: [\r\n        { ingredient: \"Garri\", image: \"garri.jpg\" },\r\n        { ingredient: \"Sugar\", image: \"sugar.jpeg\" },\r\n        { ingredient: \"Water\", image: \"water.jpeg\" }\r\n      ],\r\n      quantity: [1, 2, 1],\r\n      measurements: [\"Cup(s)\", \"Cup(s)\", \"Spoon(s)\"],\r\n      instructions: [\r\n        \"Mix Garri and Sugar in a bowl\",\r\n        \"Add ice, water and groundnuts as preffered\",\r\n        \"Enjoy!\"\r\n      ],\r\n      servings: 1,\r\n      display: false\r\n    },\r\n    {\r\n      id: 2,\r\n      label: \"Puff Puff\",\r\n      imageSrc: \"/images/meal_pics/puff_puff1.jpg\",\r\n      readTime: \"4 mins read\",\r\n      cookTime: \"80 mins\",\r\n      intro:\r\n        \" Puff Puff -- A very popular West African street food that's quick and easy to make with different variations.\" +\r\n        \" Dangerously delicious and addicting!\",\r\n      ingredients: [\r\n        \"Water- 2 Cups\",\r\n        \"Yeast - 2 and 1/4 teaspoons(1 packet)\",\r\n        \"Flour- 3 and 1/2 Cups\",\r\n        \"Sugar- 3/4 Cup\"\r\n      ],\r\n      new_ingredient: {\r\n        Garri: {\r\n          servings: {\r\n            quantitiy: 1,\r\n            measurements: \"Cup(s)\"\r\n          }\r\n        },\r\n        Water: {\r\n          servings: {\r\n            quantitiy: 1,\r\n            measurements: \"Cup(s)\"\r\n          }\r\n        },\r\n        Sugar: {\r\n          servings: {\r\n            quantitiy: 1,\r\n            measurements: \"Spoon(s)\"\r\n          }\r\n        }\r\n      },\r\n      products: [\"Flour \", \"Sugar \", \"Yeast \", \"Water \"],\r\n      product_slider: [\r\n        { ingredient: \"Flour\", image: \"flour.jpg\" },\r\n        { ingredient: \"Sugar\", image: \"sugar.jpeg\" },\r\n        { ingredient: \"Yeast\", image: \"yeast.jpg\" },\r\n        { ingredient: \"Water\", image: \"water.jpeg\" }\r\n      ],\r\n      quantity: [1, 2, 1],\r\n      measurements: [\"Cup(s)\", \"Cup(s)\", \"Spoon(s)\"],\r\n      instructions: [\r\n        \"Mix salt, sugar, water, and yeast . Set aside for 5 minutes.\",\r\n        \"Add flour and mix.\",\r\n        \"Let the mixture rise for approximately 1- 2 hours\",\r\n        \"In a large,sauce pan pour vegetable oil into a pot, until it is at least 3 inches (or about 5 centimeters) high (too little will result in flatter balls), and place on low heat.\",\r\n        \"Test to make sure the oil is hot enough by putting a ‘drop’ of batter into the oil. If it is not hot enough, the batter will stay at the bottom of the pot rather than rising to the top.\",\r\n        \"Using your hands grab a little bit of mixture at time and drop in the oil.\",\r\n        \"When the oil is hot enough, use a spoon to dish up the batter, and another spoon or spatula to drop it in the oil, sort of in the shape of a ball.\",\r\n        \"Fry for a few minutes until the bottom side is golden brown.\",\r\n        \"Turn the ball over and fry for a few more minutes until the other side is golden brown.\",\r\n        \"Use a large spoon or something like that to take it out of the oil. I usually place them on napkins right away to soak up some of the excess oil.\",\r\n        \"If desired, you can roll the finished product in table sugar or powdered sugar to make it sweeter\"\r\n      ],\r\n      servings: 4,\r\n      display: false\r\n    },\r\n    {\r\n      id: 3,\r\n      label: \"Jollof Rice\",\r\n      imageSrc: \"/images/meal_pics/Jollof.jpg\",\r\n      readTime: \"4 mins read\",\r\n      cookTime: \"45 mins\",\r\n      intro:\r\n        \"Jollof rice is a common delicacy that is enjoyed in the Western Africa region.\" +\r\n        \"Jollof rice a.k.a “One pot”, is a delicious delicacy that can be enjoyed without the need of a side-dish. \" +\r\n        \" Jollof rice is a good source for carbohydrate, starch, fibers and traces of protein depending on the ingredients. \" +\r\n        \"Cooking jollof rice is often considered as a work of art due to the many styles and techniques and taste as good as next day left-over. \" +\r\n        \"Chop-Chow guarantees one of the best methods in Cooking Jollof rice. Chow!\",\r\n      ingredients: [\"Rice- 3 Cups\", \"Tomatoes x 6\", \"Onion x 2\"],\r\n      products: [\"Rice \", \"Tomatoes \", \"Onions \"],\r\n      product_slider: [\r\n        { ingredient: \"Rice\", image: \"rice.jpeg\" },\r\n        { ingredient: \"Tomatoes\", image: \"tomato.jpg\" },\r\n        { ingredient: \"Onions\", image: \"onion.jpg\" }\r\n      ],\r\n      instructions: [\r\n        \"Tomato , Onion Tatashe, Rodo Blended in Blender\",\r\n        \"Vegetable Oil, Low Heat in Pan\",\r\n        \"Add onions to Pan\",\r\n        \"Add Tomato Paste\",\r\n        \"Add Powdered Ginger, Garlic and Curry\",\r\n        \"Add Blended Tomatoes mix (If too thick, add water)\",\r\n        \"Add seasoning, Maggi (Chicken Flavor), Salt\",\r\n        \"For Jollof Rice, add Bay Leaves.\"\r\n      ],\r\n      display: true\r\n    },\r\n    {\r\n      id: 4,\r\n      label: \"Fried Beans\",\r\n      imageSrc: \"/images/meal_pics/Fried_beans_w_red_oil_plate.jpg\",\r\n      readTime: \"4 mins read\",\r\n      cookTime: \"60 mins\",\r\n      intro:\r\n        \"Fried beans is a delicious meal rich in protein, vitamins and fiber.\" +\r\n        \" It can serves as alternative for those trying to reduce the intake of meat and animal protein.\",\r\n      ingredients: [\r\n        \"Black Eyed Beans x 1 bag(350mL)\",\r\n        \"Onions x 2\",\r\n        \"Palm Oil- 2 Cups\"\r\n      ],\r\n      products: [\"Black Eyed Beans \", \"Onions \", \"Palm Oil \"],\r\n      product_slider: [\r\n        { ingredient: \"Black Eyed Beans\", image: \"beans.jpg\" },\r\n        { ingredient: \"Onions\", image: \"onion.jpg\" },\r\n        { ingredient: \"Palm Oil\", image: \"palm_oil.jpg\" }\r\n      ],\r\n      instructions: [\r\n        \"Soak beans in water overnight\",\r\n        \"The next day, chop 1 onion into thin slices, cut the other one into 4 big chunks then pound/grind the pepper.\",\r\n        \"Rinse the beans and put in a sizeable pot. I rinse it twice.\",\r\n        \"Pre-cook the sliced onions with a few drops of water to soften them a bit.\",\r\n        \"When the beans is done, add salt, leave to dry up all the water and transfer the beans to another container.\",\r\n        \"Now, set a dry clean pot on the stove, pour the palm oil and heat it up till the oil melts (if congealed). Note that you should only heat it up, not bleach the oil. You will know it is hot enough when a piece of onion dropped into the oil sizzles.\",\r\n        \"Add the precooked onions and stir for a bit.\",\r\n        \"Add the ground Habanero pepper and stir till everything is heated up very well, at most 2 minutes.\",\r\n        \"Add the beans and stir for about 2 minutes. Add salt if necessary.\",\r\n        \"Cover and leave to simmer for about 2 minutes and it's done.\"\r\n      ],\r\n      display: true\r\n    },\r\n    {\r\n      id: 5,\r\n      label: \"Roasted Potatoes\",\r\n      imageSrc: \"/images/meal_pics/roasted_potatoes.jpg\",\r\n      readTime: \"3 mins read\",\r\n      cookTime: \"90 mins\",\r\n      intro: \"Delicious Red Roasted Potatoes. Popular in European dishes\",\r\n      ingredients: [\r\n        \"Potatoes - 8\",\r\n        \"Garlic- 6 cloves\",\r\n        \"Thyme\",\r\n        \"Oregano\",\r\n        \"Basil\",\r\n        \"Parmesan Cheese\",\r\n        \"Oil\",\r\n        \"Butter\"\r\n      ],\r\n      products: [\r\n        \"Red Potatoes \",\r\n        \"Parmesan Cheese \",\r\n        \"Thyme \",\r\n        \"Oregano \",\r\n        \"Basil \",\r\n        \"Vegetable Oil \",\r\n        \"Butter \"\r\n      ],\r\n      product_slider: [\r\n        { ingredient: \"Red Potatoes\", image: \"red_potatoes.jpg\" },\r\n        { ingredient: \"Parmesan Cheese\", image: \"parmesan_cheese.jpg\" },\r\n        { ingredient: \"Thyme\", image: \"thyme.jpg\" },\r\n        { ingredient: \"Oregano\", image: \"oregano.jpg\" },\r\n        { ingredient: \"Basil\", image: \"basil.jpg\" },\r\n        { ingredient: \"Vegetable Oil\", image: \"vegetable_oil.jpg\" },\r\n        { ingredient: \"Butter\", image: \"butter.jpg\" }\r\n      ],\r\n      instructions: [\r\n        \"Adjust oven rack to lowest position and heat oven to 450 degrees. \",\r\n        \"Cut potatoes into quarter chunks\",\r\n        \"Toss potatoes with oil, salt and pepper chopped garlic, Thyme, Oregano, Basil and then Parmesan Cheese\",\r\n        \"Arrange, cut side down, on a large lipped cookie sheet or jellyroll pan.\",\r\n        \"Roast until tender and golden brown, or until desired crispiness about 30-45 minutes\",\r\n        \"Add butter in between roasting for a savory taste, Transfer to a serving dish when ready.\"\r\n      ],\r\n      display: true\r\n    },\r\n    {\r\n      id: 6,\r\n      label: \"Beans Burger\",\r\n      imageSrc: \"/images/meal_pics/bean_burger.jpg\",\r\n      readTime: \"8 mins read\",\r\n      cookTime: \"40 mins\",\r\n      intro:\r\n        \"A healthy replacement for beef burgers, Beans burgers is just as filling and can be even more delicious.\",\r\n      ingredients: [\r\n        \"2 cans black beans\",\r\n        \"1/2 bell pepper\",\r\n        \"1 large onion\",\r\n        \"6 garlic cloves\",\r\n        \"1 cup breadcrumbs\",\r\n        \"3 eggs (or more)\",\r\n        \"Paprika\",\r\n        \"Cumin\",\r\n        \"Garlic powder\",\r\n        \"½ cup cheese\",\r\n        \"1 tbsp worcestershire sauce\",\r\n        \"2 tbsp ketchup or bbq sauce\"\r\n      ],\r\n      products: [\r\n        \"Black Beans\",\r\n        \"Vegetable Oil\",\r\n        \"BreadCrumbs\",\r\n        \"Paprika\",\r\n        \"Cheese\",\r\n        \"Worcestershire Sauce\",\r\n        \"BBQ Sauce\",\r\n        \"Heinz Ketchup\"\r\n      ],\r\n      product_slider: [\r\n        { ingredient: \"Black Beans\", image: \"beans.jpg\" },\r\n        { ingredient: \"Vegetable Oil\", image: \"vegetable_oil.jpg\" },\r\n        { ingredient: \"BreadCrumbs\", image: \"breadcrumbs.jpg\" },\r\n        { ingredient: \"Paprika\", image: \"paprika.jpg\" },\r\n        { ingredient: \"Cheese\", image: \"cheese.jpg\" },\r\n        {\r\n          ingredient: \"Worcestershire Sauce\",\r\n          image: \"worcestershire_sauce.jpg\"\r\n        },\r\n        { ingredient: \"BBQ Sauce\", image: \"bbq_sauce.jpg\" },\r\n        { ingredient: \"Heinz Ketchup\", image: \"heinz_ketchup.jpg\" }\r\n      ],\r\n      instructions: [\r\n        \"Drain and rinse beans and lay out on a baking tray in a single layer. Bake 325F for 15 min, while you set up the rest.\",\r\n        \"Dice the onion, garlic and pepper as finely as you can. Fry them together with a very small amount of oil, until onions start to go clear.\",\r\n        \"Blot the onion mix with a paper towel to remove excess oil and moisture. Add to a large mixing bowl with the beans and all other ingredients.\",\r\n        \"Mix ingredients together and mash with a fork. If the mix does not form solid patties, add more eggs and breadcrumbs until it is more solid. These 2 ingredients are the binding agents.\",\r\n        \"Form patties with the mix. I typically make them ½ cup size each. For a more tasty version, try adding a layer of cheese in between 2 smaller patties.\",\r\n        \"Cook by frying around 5 mins on each side, or grill or bake at medium heat for about 10 minutes on each side. Any remaining burgers can be frozen in sandwich bags and cooked another time without any loss of flavour. You don’t need to wait for the burgers to thaw before cooking.\",\r\n        \"Serve in a bun with toppings and sauces of your choice.\"\r\n      ],\r\n      display: true\r\n    },\r\n    {\r\n      id: 7,\r\n      label: \"Egusi Stew\",\r\n      imageSrc: \"/images/meal_pics/EgusiSoup.jpg\",\r\n      readTime: \"5 mins read\",\r\n      cookTime: \"40 mins\",\r\n      intro:\r\n        \"A classic west African delicious stew that can be customized to your taste. Egusi can be eaten with varieties of meal like rice, amala and eba.\",\r\n      ingredients: [\r\n        \"Melon Seeds - 3 Cups\",\r\n        \"Palm Oil\",\r\n        \"Chicken/Beef\",\r\n        \"Spinach - 1\",\r\n        \"Bell Pepper - 1\",\r\n        \"Tomatoes - 3\",\r\n        \"Onion - 1\",\r\n        \"Maggi\",\r\n        \"Salt\",\r\n        \"Stockfish\",\r\n        \"Crayfish\",\r\n        \"Assorted meats\"\r\n      ],\r\n      products: [\r\n        \"Melon Seeds\",\r\n        \"Palm Oil\",\r\n        \"Chicken/Beef\",\r\n        \"Spinach\",\r\n        \"Bell Pepper\",\r\n        \"Tomatoes\",\r\n        \"Onion\",\r\n        \"Maggi\",\r\n        \"Salt\",\r\n        \"Stockfish\",\r\n        \"Crayfish\",\r\n        \"Assorted meats\"\r\n      ],\r\n      product_slider: [\r\n        { ingredient: \"Melon Seeds\", image: \"melon_seeds.jpg\" },\r\n        { ingredient: \"Palm Oil\", image: \"palm_oil.jpg\" },\r\n        { ingredient: \"Chicken/Beef\", image: \"chicken_beef.jpg\" },\r\n        { ingredient: \"Spinach\", image: \"spinach.jpeg\" },\r\n        { ingredient: \"Bell Pepper\", image: \"bell_pepper.jpeg\" },\r\n        { ingredient: \"Tomatoes\", image: \"tomato.jpg\" },\r\n        { ingredient: \"Onion\", image: \"onion.jpg\" },\r\n        { ingredient: \"Maggi\", image: \"maggi.jpg\" },\r\n        { ingredient: \"Salt\", image: \"salt.png\" },\r\n        { ingredient: \"Stockfish\", image: \"stockfish.jpg\" },\r\n        { ingredient: \"Crayfish\", image: \"crayfish.jpg\" },\r\n        { ingredient: \"Assorted meats\", image: \"assorted_meats.jpg\" }\r\n      ],\r\n      instructions: [\r\n        \"Boil chicken/meat and keep aside the liquid broth for later use\",\r\n        \"Pour 3 cups of powder melon seed into a bowl\",\r\n        \"Pour 2 cups of water and mix into a thick paste\",\r\n        \"Pour desired amount of stock fish and crayfish into a bowl and add hot water to soften\",\r\n        \"Add 1 bell pepper, 3 tomatoes and half onion into blender and blend\",\r\n        \"Pour a small amount of palm oil and half onion diced into a cooking pot\",\r\n        \"Let it sizzle for a minute, then add the blended mixture\",\r\n        \" Cook for 10 minutes, then add chicken or meat broth\",\r\n        \"Cook for additional 5 minutes \",\r\n        \"Add the powdered melon seed in paste form and stir continuously (Reduce the heat to avoid burning)\",\r\n        \"Add 2 maggi and a sprinkle of salt, then cook for 7 mins\",\r\n        \"Add a box of chopped spinach and stir\",\r\n        \"Add the stock fish and crayfish\",\r\n        \"Add 1 maggi (Taste often for desired level of seasoning)\",\r\n        \"Cook for additional 10 minutes\"\r\n      ],\r\n      display: true\r\n    },\r\n    {\r\n      id: 8,\r\n      label: \"Egg Stew\",\r\n      imageSrc: \"/images/meal_pics/image_coming_soon.png\",\r\n      readTime: \"5 mins read\",\r\n      cookTime: \"30 mins\",\r\n      intro:\r\n        \"Egg stew is a creative modern style of frying eggs and insanely delicious, easy to make. Watch out, you might find this meal addictive.\",\r\n      ingredients: [\r\n        \"Eggs -3 uncooked\",\r\n        \"Tomatoes - 3\",\r\n        \"Onions - 1\",\r\n        \"Oil\",\r\n        \"Maggi - 2 cubes\",\r\n        \"Salt\",\r\n        \"Shrimp\",\r\n        \"Sardine\"\r\n      ],\r\n      products: [\r\n        \"Eggs\",\r\n        \"Tomatoes\",\r\n        \"Onions\",\r\n        \"Oil\",\r\n        \"Maggi\",\r\n        \"Salt\",\r\n        \"Shrimp\",\r\n        \"Sardine\"\r\n      ],\r\n      product_slider: [\r\n        { ingredient: \"Eggs\", image: \"eggs.jpg\" },\r\n        { ingredient: \"Tomatoes\", image: \"tomato.jpg\" },\r\n        { ingredient: \"Onions\", image: \"onion.jpg\" },\r\n        { ingredient: \"Oil\", image: \"oil.jpg\" },\r\n        { ingredient: \"Maggi\", image: \"maggi.jpg\" },\r\n        { ingredient: \"Salt\", image: \"salt.png\" },\r\n        { ingredient: \"Shrimp\", image: \"shrimp.jpeg\" },\r\n        { ingredient: \"Sardine\", image: \"sardine.jpg\" }\r\n      ],\r\n      instructions: [\r\n        \"Add 3 tomatoes and ½ onion into blender and blend\",\r\n        \"Crack 3 eggs into a bowl, plus 1 maggi and a little sprinkle of salt, then mix well \",\r\n        \"Add a small amount of cooking oil into frying pan\",\r\n        \"Add ½ diced onion and let it fry for about a minute \",\r\n        \"Add your choice of secondary ingredients\",\r\n        \"Let it cook for 5 mins\",\r\n        \" Add the blended mixture, plus 1 maggi\",\r\n        \"Let it cook for another 5 mins (Taste often for desired level of seasoning\",\r\n        \"Pour the egg mixture into the fry pan and stir often \",\r\n        \"Let it cook for about 7 mins (stir often)\"\r\n      ],\r\n      display: true\r\n    }\r\n  ];\r\n}\r\n\r\nexport default MealsPage;\r\n\r\nconst containerStyle = {\r\n  //font: \"50px\",\r\n  display: \"inline-block\",\r\n  width: \"100%\",\r\n  height: \"100%\"\r\n};\r\n\r\n/* <Route\r\n            path=\"/v1\"\r\n            render={props => (\r\n              <div className=\"container\">\r\n                <br></br>\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm\">\r\n                    <b>Meals</b>\r\n                    <ListedMealsSection\r\n                      recipes={this.state.recipes}\r\n                      showIngredients={this.showIngredients}\r\n                      selectedMeal={this.state.selectedMeal}\r\n                    />\r\n                    <span>&#43;</span>\r\n                    <input placeholder=\"Suggest Meal\"></input>\r\n                    &nbsp;\r\n                    <button>\r\n                      Submit{\" \"}\r\n                      <span\r\n                        id=\"Popover1\"\r\n                        onMouseOver={this.suggestMealToggle}\r\n                        onMouseOut={this.suggestMealToggle}\r\n                      >\r\n                        <img\r\n                          src=\"/images/info_icon.png\"\r\n                          alt=\"info\"\r\n                          style={{ width: \"13px\", height: \"13px\" }}\r\n                        />{\" \"}\r\n                      </span>\r\n                    </button>\r\n                    // onClick={this.suggestMealToggle}\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <b>Recipe Contents</b>\r\n                    <RecipeContentSection\r\n                      selectedMeal={this.state.selectedMeal}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-sm\">\r\n                    <b>Ingredients</b>\r\n                    <IngredientSection\r\n                      selectedMealIngredients={\r\n                        this.state.selectedMealIngredients\r\n                      }\r\n                      selectedMeal={this.state.selectedMeal}\r\n                    />\r\n                    // <span>&#43;</span><input placeholder=\"Suggest Ingredient..\"></input>\r\n                  </div>\r\n\r\n                  <Popover\r\n                    placement=\"auto\"\r\n                    isOpen={this.state.suggestMealPopOver}\r\n                    target=\"Popover1\"\r\n                    toggle={this.suggestMealToggle}\r\n                  >\r\n                    <PopoverBody>\r\n                      <div className=\"payback-disclaimer\">\r\n                        Suggestions by Guest Users are recorded, but do not\r\n                        change the publicly displayed Meals.\r\n                      </div>\r\n                    </PopoverBody>\r\n                  </Popover>\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n\r\n          showIngredients = event => {\r\n    let mealString = event.target.innerText;\r\n    console.log(mealString);\r\n\r\n    var meal;\r\n    for (meal in this.meals) {\r\n      //console.log(this.meals[meal].label);\r\n      if (this.meals[meal].label === mealString) {\r\n        //change selected ingredients\r\n        this.setState({\r\n          selectedMealIngredients: this.meals[meal].ingredients\r\n        });\r\n        this.setState({ selectedMeal: this.meals[meal] });\r\n        break;\r\n      }\r\n    }\r\n    //get list of ingredients\r\n  };\r\n\r\n         {/* <div className=\"row\">\r\n    <div className=\"col-sm\">\r\n        <b>Meals</b>\r\n        <ListedMealsSection\r\n        recipes={this.state.recipes} showIngredients={this.showIngredients}\r\n        selectedMeal={this.state.selectedMeal}/>\r\n\r\n        </div>\r\n    <div className=\"col-sm\">\r\n        <b>Recipe Contents</b>\r\n        <RecipeContentSection selectedMeal= {this.state.selectedMeal}/>\r\n\r\n    </div>\r\n\r\n    <div className=\"col-sm\">\r\n        <b>Ingredients</b>\r\n        <IngredientSection selectedMealIngredients= {this.state.selectedMealIngredients}\r\n        selectedMeal= {this.state.selectedMeal}/>\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n*/\r\n","import React, { Component } from 'react';\r\nimport Popup from \"reactjs-popup\";\r\n\r\nclass ProductSection extends Component {\r\nstoreCollection = []\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      store_products_fetched : false\r\n    };\r\n  }\r\n\r\ncomponentDidMount(){\r\n    console.log(\"Comes in product pages component will mount\")\r\n    var url = \"https://chopchowdev.herokuapp.com/get_store_products\" // for production\r\n    // var url = \"http://localhost:5000/get_store_products\"\r\n\r\n     fetch(url)\r\n        .then(res => res.text())\r\n        .then(body => {\r\n            var storeList = JSON.parse(body);\r\n             for(var i = 0 ; i < storeList.length; i++){\r\n                console.log(\"Inner fetch loop\");\r\n                console.log(storeList[i]);\r\n                this.storeCollection.push(storeList[i]);\r\n                console.log(storeList[i].store_name)\r\n            }\r\n\r\n            this.setState({store_products_fetched:true});\r\n\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n        console.log(\"reaches end of product pages component will mount\");\r\n}\r\n\r\n        render() {\r\n            var store_products = []\r\n            console.log(this.storeCollection);\r\n            for (const  [index, value] of this.storeCollection.entries()){\r\n                var productsMenu = []\r\n                // use index to remove warning \r\n                console.log(index);\r\n                // console.log(value);\r\n\r\n                for (const [storeProductsIndex, productValue] of value.products.entries()) {\r\n                    console.log(\"Inner for loop\");\r\n                    //const element = array[index];\r\n                    console.log(storeProductsIndex);\r\n                    console.log(productValue.product_name);\r\n                    //productsMenu.push(productValue.product_name)\r\n                    // check for if product has variations\r\n\r\n                    //productsMenu.push(productValue.product_name)\r\n                    var key = value.store_name+productValue.product_name\r\n                    productsMenu.push(\r\n                        <div className=\"col-sm-12 col-md-6 col-lg-4 mealContainer\"  key = {key} >\r\n                            <div>\r\n                                <div style={containerStyle}>                                    \r\n                                       \r\n                                        <Popup \r\n                    trigger={\r\n                        <div id = {productValue.id} style={containerStyle}>\r\n                        <img src={productValue.product_image} className=\"images\" style={{width:\"100%\"}} alt={productValue.id}></img>\r\n                                    <div id=\"textbox\">\r\n                                        <p className=\"alignleft\">{productValue.product_name}</p>\r\n                                        <p className=\"alignright\"  style={{color: \"green\"}}>${productValue.product_price}</p>\r\n                                    </div>\r\n                        {/* <button style={{backgroundColor: \"orange\" }}>View Steps</button>   */}\r\n \r\n                        </div> \r\n                    } modal closeOnDocumentClick contentStyle={contentStyle}>\r\n                    {/* Inside Pop - up */}\r\n                    <div>\r\n                    {productValue.product_name}\r\n                    <br></br>\r\n                    Availability\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\"><b>\r\n                            <img src={productValue.product_image} alt='info' style={{ width:\"100%\", height:\"100%\", align:\"center\"}}></img>\r\n                                {/* <div className=\"col\"></div> */}\r\n                                </b>\r\n                            </div> \r\n                            <div className=\"col-sm-6\"><b>\r\n                                {/* <div className=\"col\">{productValue.product_price}</div> */}\r\n                                {/* <div className=\"col\">{productValue.sizes}</div> */}\r\n                                Availabile<br></br>\r\n                                Variations:<br></br>\r\n                                Price:\r\n                                </b>\r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n\r\n                    <span>View Product</span>&nbsp;|&nbsp;<span>Update Product</span>&nbsp;|&nbsp;<span>Add To Cart..</span>\r\n                    <hr></hr>\r\n                    {/* <div className=\"col\">\r\n                        <div className=\"col align-items-center\"><ol>{mealPrep}</ol></div>\r\n                    </div> */}\r\n                            \r\n                    {/* </div> */}\r\n                        \r\n                    {/* </div> */}\r\n                    {/* <div>\r\n                    <div className=\"col align-items-left\">\r\n                        <img src={value.imageSrc} alt='info'  style={{width:'35%', height:'35%', align:\"center\"}}></img>\r\n                    </div>\r\n                    <div>                            \r\n                        <div className=\"col align-items-center\"><ol>{mealPrep}</ol></div>\r\n                    </div>\r\n                    </div>\r\n                    */}\r\n                 </Popup>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    )\r\n\r\n                }\r\n\r\n                store_products.push(\r\n                    <div key={value.store_name}>\r\n                        <hr></hr>\r\n                        <img src={value.store_image} className=\"images\" style={{width:\"10%\"}} alt={value.id}></img>\r\n                        <b>{value.store_name}</b>\r\n\r\n                            <br></br>\r\n                        <div className=\"container\">\r\n                            \r\n                           <div className=\"row \">\r\n                           {productsMenu}\r\n                           </div>\r\n                       </div>\r\n                        <hr></hr>\r\n                    </div>\r\n                )\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n            return (\r\n                <div>                    \r\n                    <div id=\"title\"><b>Our Products</b></div>\r\n                    {store_products}\r\n                </div>\r\n            );\r\n        }\r\n}\r\n\r\nconst containerStyle = {\r\n    //font: \"50px\",\r\n    display: \"inline-block\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    \r\n}\r\n\r\nconst contentStyle = {\r\n    // borderRadius: \"25px\",\r\n    maxWidth: \"100vw\",\r\n    maxHeight: \"100vh\",\r\n    overflow: \"scroll\"\r\n    // width: \"90%\",\r\n    // height: \"50%\",\r\n    \r\n    };\r\n\r\n    // storeCollection = [\r\n    //     {\r\n    //         store_name: \"Lizy Gidy\",\r\n    //         store_image: '/images/store_pics/lizy_gidy.jpg',\r\n    //         products:[{\r\n    //             product_name: \"Garri\",\r\n    //             product_image: '/images/products/garri.jpg',\r\n    //             product_price: 8.99,\r\n    //             variations:[\"Ijebu Garri\", \"Ghana Garri\",\"Yellow Garri\"],\r\n    //             sizes:[\"50lbs\"]\r\n    //         },{\r\n    //         product_name:\"Palm Oil\",\r\n    //         product_image: '/images/products/ola_ola_palm_oil.jpg',\r\n    //         product_price: 8.99,\r\n    //         sizes:[\"64 oz\",\"32 oz\",\"17.6 choleterol free\", \"35.2\",\"105.60\"],\r\n    //         respective_prices:[ 19.99,10.99,7.99,13.99,29.00]\r\n    //         },{\r\n    //         product_name:\"Beans\",\r\n    //         product_image: '/images/products/beans.jpeg',\r\n    //         product_price: 12.00,\r\n    //         variations:[\"Brown Beans\",\"Honey Beans\"],\r\n    //         sizes:[\"2 lbs\"],\r\n    //         price_per_ounce: 3.2\r\n    //         }\r\n    //     ]},\r\n    //     {\r\n    //         store_name:\"African Carribean Market\",\r\n    //         store_image: '/images/store_pics/african_carribean_storefront_people.jpg',\r\n    //         products:[{\r\n    //             product_name:\"Palm Oil\",\r\n    //             product_image: '/images/products/ola_ola_palm_oil.jpg',\r\n    //             product_price: 8.99,\r\n    //             variations:[\"Ola-Ola Palm Oil\",\"Omni Red Palm Oil 100% unrefined\"],\r\n    //             sizes:[\"1.32 Gallons\",\"0.9 Gallons\",\"50lbs\" ],\r\n    //             price_per_gallon: 3.00,\r\n    //             price_per_pound: 0.30\r\n    \r\n    //         },{\r\n    //             product_name:\"Beans\",\r\n    //             product_image: '/images/products/beans.jpg',\r\n    //             product_price: 2.25,\r\n    //             variations:[ \"Black Eyes Peas\",\"Whole Green Peas\",\"Pinto Beans\",\"Red Kidney Beans\",\"Large Lime Beans\"],\r\n    //             sizes: \"0.5 L\"       \r\n    //         },{\r\n    //             product_name:\"Egusi\",\r\n    //             product_image: '/images/products/egusi.jpg',\r\n    //             product_price: 9.95,\r\n    //             sizes:\"5 Lbs\"\r\n    //         },{\r\n    //         product_name:\"Garri\",\r\n    //         product_image: '/images/products/garri.jpg',\r\n    //         product_price: 8.99,\r\n    //         variations:[\"Ijebu Garri\",\"Ghana Garri\",\"Yellow Garri\"],\r\n    //         sizes:\"50lbs\"\r\n    //         }]\r\n    //     }     \r\n    // ]\r\n\r\n\r\nexport default ProductSection;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { Form, Button, Container, Modal, Row, Col } from \"react-bootstrap\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\n///////////////////////////////////////////////////////////////////////////////////\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      messageErr: false,\r\n      messageSuccess: false,\r\n    };\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////////\r\n  handleChange = ({ target: { value, name } }) =>\r\n    this.setState({ [name]: value });\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////\r\n  handleLoginClick = () => {\r\n    var email = this.state.email;\r\n    var password = this.state.password;\r\n\r\n    // const { email, password } = this.state;\r\n    if (email && password) {\r\n      // var url = `https://chopchowdev.herokuapp.com/api/login`;\r\n      var url = `/api/login`;\r\n      // var url = `http://localhost:5000/api/login`\r\n\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 400 || response.status === 404) {\r\n            this.setState({\r\n              messageErr: \"Bad Request. Please check email or password.\",\r\n            });\r\n          } else if (response.status === 401) {\r\n            this.setState({ messageErr: \"Sorry, you are not authorized\" });\r\n          } else if (response.status >= 500) {\r\n            this.setState({ messageErr: \"Sorry , Internal Server ERROR\" });\r\n          } else {\r\n            console.log(\"Reponse status is:\");\r\n            console.log(response.status);\r\n\r\n            this.setState({ messageErr: \"\" });\r\n\r\n            this.setState({ isAuthenticated: true });\r\n            this.setState({ messageSuccess: \"Logged in Sucessfully! \" });\r\n            return response.json();\r\n          }\r\n        })\r\n        .then((body) => {\r\n          // .then(firstBody=>{return firstBody.json()})\r\n          console.log(\"login_data\");\r\n          console.log(body);\r\n          console.log(body.message);\r\n          console.log(body.token);\r\n          console.log(body.customerID);\r\n          let customerID = body.customerID;\r\n          let username = body.username;\r\n          window.localStorage.setItem(\"userToken\", body.token);\r\n          window.localStorage.setItem(\"userRole\", body.role);\r\n          // console.log(\"converted body is :\")\r\n          // var jsonBody = body.json();\r\n          // console.log(jsonBody)\r\n\r\n          console.log(\"before prop func call\");\r\n          this.props.updateLogInStatus(customerID, username);\r\n          console.log(\"after prop func call\");\r\n\r\n          // return to page that called log in popup.\r\n\r\n          return (window.location.href = \"/grocery\");\r\n\r\n          // window.location.reload(false);\r\n        })\r\n        .catch(() => {\r\n          this.setState(\r\n            {\r\n              messageAlert: \"Internal Server Error while logging in\",\r\n              showAlert: true,\r\n              variant: \"danger\",\r\n            },\r\n            () =>\r\n              setTimeout(() => {\r\n                this.setState({ messageAlert: \"\", showAlert: false });\r\n              }, 8000)\r\n          );\r\n        });\r\n    } else {\r\n      this.setState({ messageErr: \"Please enter all fields\" });\r\n      console.log(\"Please enter all fields\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { email, password, messageErr, messageSuccess } = this.state;\r\n    return (      \r\n      <Container>\r\n            <Modal \r\n            show={true}\r\n            onHide={this.handleClose}\r\n            className=\"text-center custom-card1\"\r\n            backdrop=\"static\"\r\n            size=\"lg\"\r\n            >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title className=\"text-center\" >Log In to View your Grocery List</Modal.Title>\r\n            </Modal.Header>\r\n              <Modal.Body>\r\n                <Row>\r\n                  <Col md={5}>\r\n                    <Button className=\"fb-btn mb-3 px-3 py-2\">Login In with Facebook</Button>\r\n                    <Button className=\"google-btn px-3 py-2\">Login In with Google</Button>\r\n                  </Col>\r\n                  <Col md={1} className=\"or\">\r\n                    or\r\n                  </Col>\r\n                  <Col md={6} className=\"d-block right-panel\">\r\n                    <Form>\r\n                      <Form.Control \r\n                        type=\"text\" \r\n                        name=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Your Email or Username\" \r\n                        onChange={this.handleChange}\r\n                        className=\"login__form__input1\"\r\n                        autoComplete=\"username\"\r\n                      />\r\n                      <Form.Control \r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        placeholder=\"Your password\"\r\n                        onChange={this.handleChange}\r\n                        className=\"login__form__input\"\r\n                        autoComplete=\"current-password\"\r\n                        />\r\n                      {/* <Form.Group controlId=\"formBasicEmail\">                        \r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"formBasicPassword\">                        \r\n                      </Form.Group> */}\r\n                      <Form.Label className=\"lbl_text text-left\" column md={12}><a className=\"forget\" href=\"/forgotpass\">Forget Password?</a></Form.Label>\r\n\r\n                      <Button \r\n                        variant=\"primary\"\r\n                        className=\"mb-1 float-left login-button\"\r\n                        onClick={this.handleLoginClick}\r\n                      >Login</Button>\r\n\r\n                      <Form.Label className=\"lbl_text mt-4 text-right pb-0\" column md={12}>Dont's have an account? <a className=\"signup\" href=\"/signup\">Sign Up</a></Form.Label>\r\n                      <Form.Label className=\"lbl_text text-right pt-0\" column md={12}>or <a className=\"continue\" href=\"/v2\">continue as guest</a></Form.Label>\r\n\r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Modal.Body>\r\n            </Modal>        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.css';\r\n    \r\nexport default function PageTitle(props) {\r\n  const { title } = props;\r\n  return <h2 className=\"pageTitle\">{title}</h2>;\r\n}\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n","import React from 'react';\r\nimport './ProductModal.scss';\r\nimport {  Row, Col} from \"react-bootstrap\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass ProductModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    gotoViewPage = (customerId, productID) => {\r\n        const url = `/product-detail/${customerId}/${productID}`;\r\n        this.props.history.push(url);\r\n    }\r\n    render() {\r\n        const { product_img, product_name, productID, customerId} = this.props.state;\r\n        return (\r\n            <div style={{\r\n                position: \"fixed\",\r\n                top: \"0px\",\r\n                left: \"0px\",\r\n                width: \"100vw\",\r\n                height: \"100vh\",\r\n                backgroundColor: \"rgba(255,255,255,0.6)\",\r\n                zIndex: \"9999\"\r\n            }}>\r\n                <div style={{ display: \"flex\", height: \"100%\" }}>\r\n                    <div className=\"product-detail-modal\">\r\n                        <div className=\"product-detail-panel\">\r\n                            <div className=\"close-btn\" style={{ fontSize: \"12px\", textAlign: \"right\" }}  onClick={this.props.onCloseClicked}>\r\n                                <i className=\"fa fa-remove\"></i>\r\n                            </div>\r\n                            <Row>\r\n                                <Col md={6} style={{ textAlign: \"center\" }}>\r\n                                    <img src={product_img} width=\"100%\" className=\"product-img\" />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <div className=\"detail-info-panel\" style={{ marginLeft: \"10px\", marginRight: \"20px\" }}>\r\n                                        <div className=\"product-name\">{product_name}</div>\r\n                                        <div className=\"product-name-descript\">Description Lorem Ipsum Dolor Sit Amet</div>\r\n                                        <div className=\"product-size-panel\">\r\n                                            <div className=\"product-info\" >\r\n                                                <div className=\"product-size-item\">32 oz tub (Medium)-$9.99</div>\r\n                                                <div className=\"product-size-place\">from Lizi Gidi Market</div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input type=\"text\" className=\"product-count\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"product-size-panel\">\r\n                                            <div className=\"product-info\" >\r\n                                                <div className=\"product-size-item\">32 oz tub (Medium)-$9.99</div>\r\n                                                <div className=\"product-size-place\">from Lizi Gidi Market</div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input type=\"text\" className=\"product-count\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"product-price-panel\">\r\n                                            <div className=\"price-item\">Delivery (select one):</div>\r\n                                            <div className=\"price-value\"><a href=\"#\">Next Day Delivery</a> - $10.00</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"btn-panel\">\r\n                                <Col md={6} style={{ textAlign: \"center\" }}>\r\n                                    <button className=\"product-btn\"  onClick={() => this.gotoViewPage(customerId, productID)} >View Item</button>\r\n                                </Col>\r\n                                <Col md={6} style={{ textAlign: \"center\" }}>\r\n                                    <button className=\"product-btn\">Add To Card</button>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(ProductModal);\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport PageTitle from \"../CommonComponents/PageTitle\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Container, Alert, Card, Col, Row, Button } from \"react-bootstrap\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport ProductDetail from './ProductDetail/ProductModal'\r\n\r\n//////////////////////////////////////////////////////////////////////\r\nexport default class GroceryPage extends React.Component {\r\n  // Mongo\r\n  _isMounted = false;\r\n  products = [];\r\n  productNamesForTypeahead = new Map();\r\n\r\n  state = {\r\n    customerList: null,\r\n    Authentication: false,\r\n    customerId: null,\r\n    email: \"\",\r\n    password: \"\",\r\n\r\n    messageErr: false,\r\n    messageSuccess: false,\r\n    messageErrCreate: false,\r\n    showAlert: false,\r\n    messageAlert: \"\",\r\n\r\n    variant: \"\",\r\n    productID: \"\",\r\n    deletedItemId: null,\r\n    selectedProduct: null,\r\n    idsItems: null,\r\n    deletedItemsId: null,\r\n    lasIdListState: null,\r\n    valueProductName: \"\",\r\n    valueProductImage: \"\",\r\n    valueProductPrice: \"\",\r\n    valueProductSize: \"\",\r\n    valuePricePerOunce: \"\",\r\n    errormsg: \"\",\r\n    typeAheadAdded: false,\r\n\r\n    product_img: null,\r\n    product_name:\"\",\r\n    product_modal_flg :false,\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  handleChange = ({ target: { value, name } }) =>\r\n    this.setState({ [name]: value });\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  handleProductClick = (_img, _name,productID, flag) =>{\r\n    if(flag){\r\n      this.setState({ product_img: `/images/products/${_img}`, product_name: _name, product_modal_flg:true , productID: productID});\r\n    }else{\r\n      this.setState({ product_img: _img, product_name: _name , product_modal_flg:true, productID: productID});\r\n    }\r\n  }\r\n  onCloseClicked = () => {\r\n    this.setState({ product_modal_flg: false });\r\n  }\r\n//////////////////////////////////////////////////////////////////////\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n      const { auth, customerId } = this.props;\r\n      this.setState({ Authentication: auth });\r\n      this.setState({ customerId: customerId });\r\n      this.getCustomerList(customerId);\r\n    }\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  componentWillReceiveProps(nextProps) {\r\n    // checks if user is already logged in in app.\r\n    const { auth, customerId } = nextProps;\r\n    console.log(\"comes in grocery page cdm\");\r\n    this.setState({ Authentication: auth });\r\n    this.setState({ customerId: customerId });\r\n\r\n    console.log(\"this.props, \", nextProps);\r\n\r\n    if (auth === true) {\r\n      // or if (customerId !== null) , grocery page not displaying after login click\r\n      this.getCustomerList(customerId);\r\n    }\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  getCustomerList = (customerId) => {\r\n    var localToken = window.localStorage.getItem(\"userToken\");\r\n    console.log(\"customder id  iss: \" + customerId);\r\n    var url = `./api/getCustomerGroceryList/${customerId}`;\r\n    // var url = `http://localhost:5000/api/getCustomerGroceryList/${customerId}`\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      // credentials: 'include',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localToken,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(\"customer list response is \");\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        if (response) {\r\n          this.setState({ customerList: response.data });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.setState(\r\n          {\r\n            messageAlert:\r\n              \"Authentication Error while fetching your grocery list...\",\r\n            showAlert: true,\r\n            variant: \"danger\",\r\n          },\r\n          () =>\r\n            setTimeout(() => {\r\n              this.setState({ messageAlert: \"\", showAlert: false });\r\n            }, 8000)\r\n        );\r\n      });\r\n\r\n    // // url = \"https://chopchowdev.herokuapp.com/api/get-all-products\";\r\n    // // url = `http://localhost:5000/api/get-all-products`\r\n    // url = \"./api/get-all-products\";\r\n    // // or should we call this in App.js and pass it as a prop ??\r\n\r\n    // fetch(url, {\r\n    //   method: \"GET\",\r\n    //   // credentials: 'include',\r\n    //   // headers: {\r\n    //   //   'Content-Type': 'application/json',\r\n    //   // }\r\n    // })\r\n    //   .then((res) => res.text())\r\n    //   .then((body) => {\r\n    //     // console.log(\"should print body\");\r\n    //     // console.log(body);\r\n    //     var productsList = JSON.parse(body);\r\n    //     console.log(\"PRINTING ALL PRODUCTS LIST\");\r\n    //     // console.log(productsList);\r\n    //     if (productsList && productsList.data.length !== 0) {\r\n    //       console.log(\"returns GET ALL PRODUCTS \");\r\n    //       console.log(productsList.data.length);\r\n    //       for (var i = 0; i < productsList.data.length; i++) {\r\n    //         this.products.push(productsList.data[i]);\r\n    //         this.productNamesForTypeahead.set(\r\n    //           productsList.data[i].product_name,\r\n    //           productsList.data[i].id\r\n    //         );\r\n    //       }\r\n    //       console.log(this.products);\r\n    //       console.log(this.productNamesForTypeahead);\r\n    //     } else {\r\n    //       console.log(\"get all products function does not return\");\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  handleShowDeleteItem = (productID) => {\r\n    this.setState({ deletedItemId: productID });\r\n    const { customerId, deletedItemId } = this.state;\r\n    // var url = `https://chopchowdev.herokuapp.com/api/remove-item/${productID}/${customerId}`\r\n    var url = `./api/remove-item/${productID}/${customerId}`;\r\n\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n      // headers: {\r\n      //   Accept: 'application/json',\r\n      //   'Content-Type': 'application/json',\r\n      // },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        this.setState(\r\n          {\r\n            messageAlert: \"deleted successfully\",\r\n            showAlert: true,\r\n            variant: \"success\",\r\n          },\r\n          () =>\r\n            setTimeout(() => {\r\n              this.setState({ messageAlert: \"\", showAlert: false });\r\n            }, 3500)\r\n        );\r\n        this.setState((prevState) => {\r\n          // delete item on client side\r\n          const newValueData = prevState.customerList.filter(\r\n            // do we need catch sttmnt for filter\r\n            (item) => item.id !== deletedItemId\r\n          );\r\n          return { customerList: newValueData };\r\n        });\r\n        console.log(\"Delets item\");\r\n        this.componentDidMount();\r\n      })\r\n      .catch(() => {\r\n        this.setState(\r\n          {\r\n            messageAlert: \"Internal Server Error while deleting item\",\r\n            showAlert: true,\r\n            variant: \"danger\",\r\n          },\r\n          () =>\r\n            setTimeout(() => {\r\n              this.setState({ messageAlert: \"\", showAlert: false });\r\n            }, 8000)\r\n        );\r\n      });\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  handleDeleteList = () => {\r\n    console.log(\"Comes in deletes list\");\r\n    const { customerId } = this.state;\r\n    var url = `https://chopchowdev.herokuapp.com/api/remove-list/${customerId}`;\r\n    // var url = `./api/remove-list/${customerId}`\r\n\r\n    fetch(url, {\r\n      method: \"DELETE\",\r\n      // headers: {\r\n      //   'Content-Type': 'application/json',\r\n      // }\r\n    })\r\n      .then((response) => {\r\n        console.log(\"delete response is: \");\r\n        console.log(response);\r\n        console.log(response.json);\r\n        this.setState(\r\n          {\r\n            messageAlert: \"deleted successfully\",\r\n            showAlert: true,\r\n            variant: \"success\",\r\n          },\r\n          () =>\r\n            setTimeout(() => {\r\n              this.setState({ messageAlert: \"\", showAlert: false });\r\n            }, 3500)\r\n        );\r\n\r\n        this.setState({ customerList: [] });\r\n        this.componentDidMount();\r\n        console.log(\"deletes list\");\r\n        return response.json();\r\n      })\r\n      .catch(() => {\r\n        console.log(\"caught an error while deleting list\");\r\n        this.setState(\r\n          {\r\n            messageAlert: \"Internal Server Error while deleting list\",\r\n            showAlert: true,\r\n            variant: \"danger\",\r\n          },\r\n          () =>\r\n            setTimeout(() => {\r\n              this.setState({ messageAlert: \"\", showAlert: false });\r\n            }, 8000)\r\n        );\r\n      });\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  handleClickTypeahead = (selected) => {\r\n    this.setState({ selectedProduct: selected });\r\n    // var arrayOfProductNames = Array.from(this.productNamesForTypeahead.keys());\r\n\r\n    console.log(\"selected is:\");\r\n    console.log(selected[0]);\r\n    console.log(typeof selected[0]);\r\n    console.log(\"array of product names is:\");\r\n    console.log(this.productNamesForTypeahead);\r\n\r\n    this.productNamesForTypeahead.get(selected);\r\n\r\n    // var index = arrayOfProductNames.findIndex((el) => el === selected[0]);\r\n    var productID = this.productNamesForTypeahead.get(selected[0]);\r\n    console.log(\"productID is: \" + productID);\r\n    console.log(\"customer id is: \" + this.state.customerId);\r\n    if (!isNaN(productID)) {\r\n      // var url = `https://chopchowdev.herokuapp.com/api/addTypeaheadDataToCustomerGroceryList/${productID}/${this.state.customerId}`\r\n      var url = `./api/addTypeaheadDataToCustomerGroceryList/${productID}/${this.state.customerId}`;\r\n      fetch(url, {\r\n        method: \"POST\",\r\n      }).then((response) => {\r\n        if (response) {\r\n          this.setState(\r\n            {\r\n              messageAlert: \"product added successfully\",\r\n              showAlert: true,\r\n              variant: \"success\",\r\n            },\r\n            () =>\r\n              setTimeout(() => {\r\n                this.setState({ messageAlert: \"\", showAlert: false });\r\n              }, 3500)\r\n          );\r\n          console.log(\"Comes in handleClickTypeahead's then on client side\");\r\n          this.componentDidMount();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  render() {\r\n    const { showAlert, variant, messageAlert, customerList } = this.state;\r\n    console.log(\"Authentication, \", this.state.Authentication);\r\n    console.log(\"customerId, \", this.state.customerId);\r\n    console.log(\"customerList, \", this.state.customerList);\r\n\r\n    return (\r\n      <>\r\n        <Typeahead\r\n          // multiple\r\n          options={Array.from(this.productNamesForTypeahead.keys())}\r\n          placeholder=\"Add products to your grocery list here..\"\r\n          id=\"typeahead\"\r\n          onChange={(selected) => {\r\n            this.handleClickTypeahead(selected);\r\n          }}\r\n        />\r\n\r\n        {/* Display alert if there is any issue loading grocery page */}\r\n        <Alert show={showAlert} key={1} variant={variant}>\r\n          {messageAlert}\r\n        </Alert>\r\n\r\n        {this.state.messageVisible ? (\r\n          <div>\r\n            you can not add in this item because it is already in customers\r\n            grocery list\r\n          </div>\r\n        ) : null}\r\n        {this.state.Authentication ? (\r\n          <>\r\n            <PageTitle title=\" Your Grocery List\" />\r\n            <div>\r\n              <Button\r\n                  className=\"yourlist__buttonDeleteList\"\r\n                  variant=\"danger\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    this.handleDeleteList();\r\n                  }}\r\n                  >\r\n                  Delete List Items\r\n              </Button>\r\n\r\n              <br></br>\r\n              <Container className=\"page__container\" fluid>\r\n                {/* display grocery list, for any authenticated customer */}\r\n                {customerList ? (\r\n                  customerList.map((customer_grocery_product_item) => {\r\n                    let productID = customer_grocery_product_item.id;\r\n\r\n                    return (\r\n                      // <>\r\n                      <Row\r\n                        display=\"inline-flex\"\r\n                        key = {customer_grocery_product_item.id}\r\n                      >\r\n                        <Col key={customer_grocery_product_item.id}>\r\n                          {/* check for private or public images (can be used for suggest meal) */}\r\n                          {customer_grocery_product_item.product_image.startsWith(\r\n                            \"http://\"\r\n                          ) ||\r\n                            customer_grocery_product_item.product_image.startsWith(\r\n                              \"data\"\r\n                            ) ? (\r\n                              <img\r\n                                src={`${customer_grocery_product_item.product_image}`}\r\n                                alt=\"product_img \"\r\n                                className=\"card-img\"\r\n                                onClick = {() => this.handleProductClick(customer_grocery_product_item.product_image, customer_grocery_product_item.product_name, productID, false)}\r\n                              />\r\n                            ) : (\r\n                              <img\r\n                                src={`/images/products/${customer_grocery_product_item.product_image}`}\r\n                                alt=\"product_img \"\r\n                                className=\"card-img\"\r\n                                onClick = {() => this.handleProductClick(customer_grocery_product_item.product_image, customer_grocery_product_item.product_name, productID, true)}\r\n                              />\r\n                            )}\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Card.Title className=\"grocery_item_card-header\">\r\n                            Product Name :{\" \"}\r\n                            {customer_grocery_product_item.product_name}\r\n                          </Card.Title>\r\n                          <Card.Text>\r\n                            Product Price :{\" \"}\r\n                            {customer_grocery_product_item &&\r\n                              customer_grocery_product_item.product_price}\r\n                            <br></br>\r\n                            Product Size : {customer_grocery_product_item.sizes}\r\n                          </Card.Text>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              this.handleAddItemToCart(productID);\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            Add To Cart\r\n                          </Button>\r\n                        </Col>\r\n                        <Col>\r\n                          <i\r\n                            className=\"fa fa-remove\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              this.handleShowDeleteItem(\r\n                                customer_grocery_product_item.id\r\n                              );\r\n                            }}\r\n                          ></i>\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })\r\n                ) : (\r\n                    <Spinner animation=\"border\" variant=\"info\" />\r\n                  )}\r\n              </Container>\r\n            </div>\r\n          </>\r\n        ) : (\r\n            <>\r\n              {/* <Login /> */}\r\n              <div>\r\n                Log into your account or continue as guest to load your grocery\r\n                list\r\n            </div>\r\n            </>\r\n          )}\r\n\r\n        {\r\n          this.state.product_modal_flg && \r\n          <ProductDetail state = { this.state } onCloseClicked={this.onCloseClicked} />\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './ProductFullDetail.scss';\r\nimport {  Row, Col } from \"react-bootstrap\";\r\n\r\n\r\nclass ProductFullDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            customerList: null,\r\n            productData:null,\r\n        }\r\n    }\r\n\r\n//////////////////////////////////////////////////////////////////////\r\ncomponentWillMount() {\r\n    this.getCustomerList();\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n  getCustomerList = () => {\r\n    const { productId , customerId} = this.props.match.params;\r\n\r\n    var localToken = window.localStorage.getItem(\"userToken\");\r\n    console.log(\"customder id  iss: \" + customerId);\r\n    var url = `/api/getCustomerGroceryList/${customerId}`;\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localToken,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(\"customer list response is \");\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        if (response) {\r\n          this.setState({ customerList: response.data });\r\n        \r\n          for(let i=0; i< response.data.length; i++ )\r\n          {\r\n            if(response.data[i].id == productId){\r\n                this.setState({ productData: response.data[i] });\r\n                break;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n      .catch(() => {\r\n        this.setState(\r\n          {\r\n            messageAlert:    \"Authentication Error while fetching your grocery list...\",\r\n            showAlert: true,\r\n            variant: \"danger\",\r\n          },\r\n          () =>\r\n            setTimeout(() => {\r\n              this.setState({ messageAlert: \"\", showAlert: false });\r\n            }, 8000)\r\n        );\r\n      });\r\n  };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{  }}>\r\n                <div className=\"productF-detail-modal\">\r\n                    <div className=\"productF-detail-panel\">\r\n                        <Row>\r\n                            <Col md={2} style={{ textAlign: \"center\" }}>\r\n                                {\r\n                                    this.state.productData &&\r\n                                    <img src={ `/images/products/${this.state.productData.product_image}`}  width=\"100%\" className=\"productF-img1\" />\r\n                                }\r\n                                {\r\n                                    this.state.productData &&\r\n                                    <img src={ `/images/products/${this.state.productData.product_image}`}  width=\"100%\" className=\"productF-img1\" />\r\n                                }\r\n                            </Col>\r\n                            <Col md={5} style={{ textAlign: \"center\" }}>\r\n                                {\r\n                                    this.state.productData &&\r\n                                    <img src={ `/images/products/${this.state.productData.product_image}`}  width=\"100%\" className=\"productF-img\" />\r\n                                }\r\n                            </Col>\r\n                            <Col md={5}>\r\n                                <div className=\"detail-info-panel\" style={{ marginLeft: \"10px\", marginRight: \"20px\" }}>\r\n                                    {\r\n                                        this.state.productData &&\r\n                                        <div className=\"productF-name\">{this.state.productData.product_name} </div>\r\n                                    }                                    \r\n                                    <div className=\"productF-name-descript\">Description Lorem Ipsum Dolor Sit Amet</div>\r\n                                    <div className = \"product-star\">\r\n                                        <i className = \"fa fa-star\"></i>\r\n                                        <i className = \"fa fa-star\"></i>\r\n                                        <i className = \"fa fa-star\"></i>\r\n                                        <i className = \"fa fa-star\"></i>\r\n                                        <i className = \"fa fa-star\"></i>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"productF-size-panel\">\r\n                                        <div className=\"productF-info\" >\r\n                                            <div className=\"productF-size-item\">32 oz tub (Medium)</div>\r\n                                            <div className=\"productF-size-item\">$9.99</div>\r\n                                            <div className=\"productF-size-place\">from Lizi Gidi Market</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <input type=\"text\" className=\"productF-count\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"productF-size-panel\">\r\n                                        <div className=\"productF-info\" >\r\n                                            <div className=\"productF-size-item\">32 oz tub (Medium)</div>\r\n                                            <div className=\"productF-size-item\">$9.99</div>\r\n                                            <div className=\"productF-size-place\">from Lizi Gidi Market</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <input type=\"text\" className=\"productF-count\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"productF-price-panel\">            \r\n                                        <div className=\"price-value\"><a href=\"#\">Next Day Delivery</a></div>\r\n                                        <div className=\"price-value\">$10.00</div>\r\n                                    </div>\r\n                                    <div className = \"cart-btn\">\r\n                                        <div className = \"product-star\">\r\n                                            <i className = \"fa fa-star\"></i>\r\n                                        </div>\r\n                                        <button className=\"productF-btn\">Add To Card</button>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        {/* <Row className=\"btn-panel\">\r\n                            <Col md={6} style={{ textAlign: \"center\" }}>\r\n                                <button className=\"productF-btn\">View Item</button>\r\n                            </Col>\r\n                            <Col md={6} style={{ textAlign: \"center\" }}>\r\n                                <button className=\"productF-btn\">Add To Card</button>\r\n                            </Col>\r\n                        </Row> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProductFullDetail;\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { setTimeout } from 'timers';\r\n\r\nexport default class SignUp extends React.Component {\r\n  state = {\r\n    email: '',\r\n    phone: '',\r\n    username: '',\r\n    password: '',\r\n    messageErr: false,\r\n    messageSuccess: false,\r\n    showModal: true,\r\n    emailNotification: false\r\n  };\r\n\r\n\r\n  handleChange = (e) => {\r\n    let name = e.currentTarget.name;\r\n    let value = e.currentTarget.value;\r\n    name === \"emailNotification\" ? this.setState({emailNotification: e.currentTarget.checked}) : this.setState({ [name]: value });\r\n\r\n  }\r\n\r\n\r\n  handleClose = (delay) => {\r\n    setTimeout(() => {\r\n      this.props.history.push('/grocery');\r\n    }, delay || 0);\r\n  };\r\n\r\n  formSubmit = (e) => {\r\n    e.preventDefault();\r\n    if((this.state.email || this.state.phone) && this.state.username && this.state.password) {\r\n      this.submitForm();\r\n    } else {\r\n      this.setState({ messageErr: 'Please enter correct data.' });\r\n    }\r\n  };\r\n\r\n  submitForm = () => {\r\n    console.log(\"state,\", this.state);\r\n\r\n    fetch('/api/signupuser', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    }).then(response => {\r\n        if (response.status === 400 || response.status === 404) {\r\n          this.setState({ messageErr: 'Bad Request , Check username or password ... !!' });\r\n        } else if (response.status === 401) {\r\n          this.setState({ messageErr: 'you are UnAuthorized' });\r\n        } else if (response.status >= 500) {\r\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\r\n        } else {\r\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'You are sign up!!! ' });\r\n          this.handleClose(5000);\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n<Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal registerme\" backdrop=\"static\">\r\n  <Modal.Header closeButton>\r\n    <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\r\n      <div>Sign Up</div>\r\n      <span style={{ fontSize: '11pt' }}>Already have an account?  \r\n      <Link className=\"link-guest-word\" to=\"/login\">Login</Link></span>\r\n    </Modal.Title>\r\n  </Modal.Header>\r\n  <Modal.Body>\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs lg>\r\n          <Form className=\"\" onSubmit={this.formSubmit}>\r\n            <Form.Group>\r\n                <Form.Control\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      placeholder=\"Your email\"\r\n                      onChange={this.handleChange}\r\n                      autoComplete = \"username\"\r\n                    />\r\n                  <Form.Label>Or</Form.Label>\r\n                <Form.Control\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      value={this.state.phone}\r\n                      placeholder=\"Your Phone Number\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <hr/>\r\n                  <Form.Group>\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      value={this.state.username}\r\n                      placeholder=\"Username\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <Form.Label></Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      placeholder=\"Create a Password\"\r\n                      onChange={this.handleChange}\r\n                      autoComplete = \"new-password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formHorizontalCheck\">\r\n                    <Form.Label></Form.Label>\r\n                    <Form.Check onChange={this.handleChange} name=\"emailNotification\" label=\"Sign Up for Email Notifications\" />\r\n                  </Form.Group>\r\n                  <p className=\"msg-success\">{this.state.messageSuccess}</p>\r\n                  <p className=\"msg-err\">{this.state.messageErr}</p>\r\n                  <ButtonToolbar>\r\n                    <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Sign Up</Button>\r\n                  </ButtonToolbar>\r\n                  <Link className=\"\" to=\"/signup\">or Sign up as driver</Link>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\r\nimport { setTimeout } from 'timers';\r\n\r\nexport default class ResetPassword extends React.Component {\r\n  state = {\r\n    email: '',\r\n    username: '',\r\n    messageErr: false,\r\n    messageSuccess: false,\r\n    showModal: true,\r\n  };\r\n\r\n\r\n  handleChange = (e) => {\r\n    let name = e.currentTarget.name;\r\n    let value = e.currentTarget.value;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n\r\n  handleClose = (delay) => {\r\n    setTimeout(() => {\r\n      this.props.history.push('/grocery');\r\n    }, delay || 0);\r\n  };\r\n\r\n  formSubmit = (e) => {\r\n    e.preventDefault();\r\n    if((this.state.email || this.state.username)) {\r\n      this.submitForm();\r\n    } else {\r\n      this.setState({ messageErr: 'Please enter correct data.' });\r\n    }\r\n  };\r\n\r\n  submitForm = () => {\r\n    fetch('/api/forgotpass', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state),\r\n    }).then(response => {\r\n      console.log(response)\r\n        if (response.status === 400 || response.status === 404) {\r\n          this.setState({ messageErr: 'Bad Request , Your username or email does not exist.' });\r\n        } else if (response.status === 401) {\r\n          this.setState({ messageErr: 'you are UnAuthorized' });\r\n        } else if (response.status >= 500) {\r\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\r\n        } else {\r\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'Please check your inbox for more details! ' });\r\n          this.handleClose(5000);\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n\r\n  return (\r\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\r\n          <div>Forgot Password</div>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col xs lg>\r\n              <Form className=\"\" onSubmit={this.formSubmit}>\r\n                <Form.Group>\r\n                    <Form.Control\r\n                          type=\"text\"\r\n                          name=\"email\"\r\n                          value={this.state.email}\r\n                          placeholder=\"Your email\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      <Form.Label>Or</Form.Label>\r\n                    \r\n                      </Form.Group>\r\n                      \r\n                      <Form.Group>\r\n                      <Form.Control\r\n                          type=\"text\"\r\n                          name=\"username\"\r\n                          value={this.state.username}\r\n                          placeholder=\"Username\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <Form.Label></Form.Label>\r\n                        \r\n                      </Form.Group>\r\n                      <Form.Label>We will sent you a link to reset your password.</Form.Label>\r\n\r\n                      <p className=\"msg-success\">{this.state.messageSuccess}</p>\r\n                      <p className=\"msg-err\">{this.state.messageErr}</p>\r\n                      <ButtonToolbar>\r\n                        <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Reset</Button>\r\n                      </ButtonToolbar>\r\n                      \r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Modal.Body>\r\n          </Modal>\r\n        )\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\r\nimport { setTimeout } from 'timers';\r\n\r\nexport default class ResetPassword extends React.Component {\r\n  state = {\r\n    password1: '',\r\n    password2: '',\r\n    messageErr: false,\r\n    messageSuccess: false,\r\n    showModal: true,\r\n  };\r\n\r\n\r\n  handleChange = (e) => {\r\n    let name = e.currentTarget.name;\r\n    let value = e.currentTarget.value;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n\r\n  handleClose = (delay) => {\r\n    setTimeout(() => {\r\n      this.props.history.push('/grocery');\r\n    }, delay || 0);\r\n  };\r\n\r\n  formSubmit = (e) => {\r\n    e.preventDefault();\r\n    if((this.state.password1 || this.state.password2)) {\r\n      this.submitForm();\r\n    } else {\r\n      this.setState({ messageErr: 'Please enter correct data.' });\r\n    }\r\n  };\r\n\r\n  submitForm = () => {\r\n    let token = this.props.location.search.replace('?', '').split('=')[1];\r\n    let formData = Object.assign({}, this.state, {token})\r\n    fetch('/api/resetpass', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    }).then(response => {\r\n        if (response.status === 400 || response.status === 404) {\r\n          this.setState({ messageErr: 'Bad Request , Check username or email ... !!' });\r\n        } else if (response.status === 401) {\r\n          this.setState({ messageErr: 'you are UnAuthorized' });\r\n        } else if (response.status >= 500) {\r\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\r\n        } else {\r\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'Please check your inbox for more details! ' });\r\n          this.handleClose(5000);\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n\r\nlet isItReset = this.props.location.search.replace('?', '').split('=');\r\nif(isItReset.length > 1) {\r\n  isItReset = isItReset[1];\r\n  return (\r\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\r\n          <div>Reset Password</div>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col xs lg>\r\n              <Form className=\"\" onSubmit={this.formSubmit}>\r\n              <Form.Group>\r\n              <Form.Control type=\"hidden\" name=\"token\" value={isItReset} />\r\n                <Form.Control\r\n                          type=\"password\"\r\n                          name=\"password1\"\r\n                          value={this.state.password1}\r\n                          placeholder=\"New Password\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                    \r\n                      </Form.Group>\r\n                      <Form.Label></Form.Label>\r\n                      <Form.Group>\r\n                      <Form.Control\r\n                          type=\"password\"\r\n                          name=\"password2\"\r\n                          value={this.state.password2}\r\n                          placeholder=\"Retype Password\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <Form.Label></Form.Label>\r\n                        \r\n                      </Form.Group>\r\n                      \r\n                      <p className=\"msg-success\">{this.state.messageSuccess}</p>\r\n                      <p className=\"msg-err\">{this.state.messageErr}</p>\r\n                      <ButtonToolbar>\r\n                        <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Reset</Button>\r\n                      </ButtonToolbar>\r\n                      \r\n                    </Form>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Modal.Body>\r\n          </Modal>\r\n        );\r\n} else {\r\n  return (\r\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\r\n          <div>Something wrong with yout token please try again.</div>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      \r\n          </Modal>\r\n        )\r\n  \r\n}\r\n\r\n\r\n  }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"; // createFilterOptions,\r\nimport axios from 'axios';\r\n\r\n// height of the TextField\r\n\r\nclass SuggestMeal extends Component {\r\n  products = [];\r\n  categories = [];\r\n  measurements = [\r\n    \"mL\",    \"oz\",    \"L\",    \"cup(s)\",    \"Tbsp\",    \"tsp\",    \"pt\",    \"lb\",    \"g\",    \"kg\",    \"lb\",\r\n  ];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mealLabel: \"\",\r\n      intro: \"\",\r\n      servings: 0,\r\n      currentIngredient: \"Butter scotch\",\r\n      currentIngredientMeasurement: null,\r\n      currentIngredientQuantity: 0,\r\n      ingredientStrings: [],\r\n      formatted_ingredient: [],\r\n      instructionsChip: [],\r\n      imgSrc: \"\",\r\n      readTime: \"0 mins read\",\r\n      cookTime: \"10 mins cook time\",\r\n      categoryChips: [\"snacks\", \"abc\", \"123\"],\r\n      productsPopulated: false,\r\n    };\r\n    this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(\r\n      this\r\n    );\r\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(\r\n      this\r\n    );\r\n    this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\r\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var url = \"./api/get-all-products\";\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      // credentials: 'include',\r\n      // headers: {\r\n      //   'Content-Type': 'application/json',\r\n      // }\r\n    })\r\n      .then((res) => res.text())\r\n      .then((body) => {\r\n        // console.log(\"should print body\");\r\n        // console.log(body);\r\n        var productsList = JSON.parse(body);\r\n        if (productsList && productsList.data.length !== 0) {\r\n          console.log(\"returns GET ALL PRODUCTS \");\r\n          console.log(productsList.data.length);\r\n          for (var i = 0; i < productsList.data.length; i++) {\r\n            this.products.push(productsList.data[i].product_name);\r\n          }\r\n          console.log(\"PRINTING ALL PRODUCTS LIST\");\r\n          console.log(this.products);\r\n          this.setState({ productsPopulated: true });\r\n        } else {\r\n          console.log(\"get all products function does not return\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    //get category meals\r\n    url = \"./api/get-all-categories\";\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      // credentials: 'include',\r\n      // headers: {\r\n      //   'Content-Type': 'application/json',\r\n      // }\r\n    })\r\n      .then((res) => res.text())\r\n      .then((body) => {\r\n        // console.log(\"should print body\");\r\n        console.log(body);\r\n        var categoryList = JSON.parse(body);\r\n        if (categoryList && categoryList.data.length !== 0) {\r\n          console.log(\"returns GET of ALL Categories \");\r\n          console.log(categoryList.data.length);\r\n          for (var i = 0; i < categoryList.data.length; i++) {\r\n            this.categories.push(categoryList.data[i]);\r\n          }\r\n          console.log(\"PRINTING UPDATED CATEGORIES LIST\");\r\n          console.log(this.categories);\r\n        } else {\r\n          console.log(\"get all products function does not return\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  onTextFieldChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onTextFieldClick = (event) => {     \r\n    console.log(\"Comes in on change\");\r\n    this.setState({ imgSrc: event.target.files[0] });\r\n    console.log(\" file ---\", event.target.files[0]);\r\n  };\r\n\r\n  handleAddIngredientChip(chip) {\r\n    this.setState({\r\n      ingredientStrings: [...this.state.ingredientStrings, chip],\r\n    });\r\n    // check if ingredients already exists , if exists use product,\r\n    // else add product to suggested products\r\n  }\r\n\r\n  handleAddCategoryChip(chip) {\r\n    this.setState({ categoryChips: [...this.state.categoryChips, chip] }); //\r\n    // check if category already exists , if exists use it,\r\n    // else add category to new category\r\n  }\r\n\r\n  handleAddInstructionStep(chip) {\r\n    // this.setState({\r\n    //     instructionsChip: [...this.state.instructionsChip, instructionStep]\r\n    // })\r\n\r\n    this.setState({\r\n      instructionsChip: [...this.state.instructionsChip, chip],\r\n    });\r\n  }\r\n\r\n  handleDeleteIngredientChip(chip) {\r\n    console.log(\"removing chop input\");\r\n    var array = [...this.state.ingredientStrings]; // make a separate copy of the array\r\n    var index = array.indexOf(chip);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ ingredientStrings: array });\r\n    }\r\n  }\r\n\r\n  handleDeleteCategoryChip(chip) {\r\n    console.log(\"removing chop input\");\r\n    var array = [...this.state.categoryChips]; // make a separate copy of the array\r\n    var index = array.indexOf(chip);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ categoryChips: array });\r\n    }\r\n  }\r\n\r\n  handleDeleteInstructionsStep(chip) {\r\n    console.log(\"removing chop input\");\r\n    var array = [...this.state.instructionsChip]; // make a separate copy of the array\r\n    var index = array.indexOf(chip);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ instructionsChip: array });\r\n    }\r\n  }\r\n  handleIngredientQuantity(event) {\r\n    console.log(event.target.value);\r\n    this.setState({ currentIngredientQuantity: event.target.value });\r\n  }\r\n  handleIngredientDropdownChange(event) {\r\n    console.log(event.target);\r\n    if (event.target.value) {\r\n      this.setState({ currentIngredient: event.target.value });\r\n    } else {\r\n      this.setState({ currentIngredient: event.target.innerHTML });\r\n    }\r\n  }\r\n  handleIngredientMeasurement(event) {\r\n    if (event.target.value) {\r\n      this.setState({ currentIngredientMeasurement: event.target.value });\r\n    } else {\r\n      this.setState({ currentIngredientMeasurement: event.target.innerHTML });\r\n    }\r\n  }\r\n\r\n  addIngredientToMeal(event) {\r\n    event.preventDefault();\r\n    console.log(this.state.currentIngredientMeasurement);\r\n    var properIngredientStringSyntax;\r\n\r\n    if (document.getElementById(\"currentIngredient\").value === \"\") {\r\n      window.alert(\"Enter an ingredient to add to meal\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.currentIngredientQuantity === 0) {\r\n      properIngredientStringSyntax = document.getElementById(\"currentIngredient\").value;\r\n    } else if (  document.getElementById(\"currentIngredientMeasurement\").value === null  ) {\r\n      properIngredientStringSyntax = \"\" + this.state.currentIngredientQuantity +  \" \" +  document.getElementById(\"currentIngredient\").value;\r\n    } else {\r\n      properIngredientStringSyntax =\r\n        \"\" +\r\n        this.state.currentIngredientQuantity +\r\n        \" \" +\r\n        document.getElementById(\"currentIngredientMeasurement\").value +\r\n        \" of \" +\r\n        document.getElementById(\"currentIngredient\").value;\r\n    }\r\n    var currIngredientObject = {\r\n      product: this.state.currentIngredient,\r\n      quantity: this.state.currentIngredientQuantity,\r\n      measurement: this.state.currentIngredientMeasurement,\r\n    };\r\n    console.log(properIngredientStringSyntax);\r\n    this.handleAddIngredientChip(properIngredientStringSyntax);\r\n    this.setState({\r\n      formatted_ingredient: [\r\n        ...this.state.formatted_ingredient,\r\n        currIngredientObject,\r\n      ],\r\n    });\r\n    // this.state.currentIngredientMeasurement +\r\n  }\r\n  // use function format to allow for use of this.state\r\n  // within a component function\r\n  sendSuggestedMealToDB = (e) => {\r\n    // e.preventDefault();\r\n    console.log(\"Comes in suggest meal func\");\r\n    // get our form data out of state\r\n    const {\r\n      mealLabel,      intro,      servings,      ingredientStrings,      formatted_ingredient,      instructionsChip,      imgSrc,      readTime,      cookTime,      categoryChips,\r\n    } = this.state;\r\n\r\n    if (mealLabel === \"\") {\r\n      console.log(\"meal label blank\");\r\n      return;\r\n    }\r\n    console.log(\"ingredient chips are:\");\r\n    console.log(ingredientStrings);\r\n    if (ingredientStrings.length === 0) {\r\n      window.alert(\r\n        \"Suggested meal requires adding at least one ingredient to submit\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    var url = \"http://localhost:5000/api/addMealSuggestion/\";\r\n    console.log(\"gets to call fetch\", instructionsChip);\r\n\r\n    let sugestMealForm = new FormData();\r\n    sugestMealForm.set('mealLabel', mealLabel);\r\n    sugestMealForm.set('intro', intro);\r\n    sugestMealForm.set('servings', servings);\r\n    sugestMealForm.set('formatted_ingredient', JSON.stringify(formatted_ingredient));\r\n    sugestMealForm.set('instructionsChip', JSON.stringify(instructionsChip));\r\n    sugestMealForm.set('ingredientStrings', ingredientStrings);\r\n    sugestMealForm.set('imgSrc', imgSrc, imgSrc.name);\r\n    sugestMealForm.set('readTime', readTime);\r\n    sugestMealForm.set('cookTime', cookTime);\r\n    sugestMealForm.set('categoryChips', JSON.stringify(categoryChips));\r\n\r\n\r\n    const config = {\r\n      method: 'POST',\r\n      data: sugestMealForm,\r\n      url: url\r\n    };\r\n    axios(config).then(response => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        console.log(response);\r\n        console.log(\"Display Meal submitted successfully\");\r\n        // return response;\r\n        // window.location.reload();\r\n      } else {\r\n        console.log(\"Somthing happened wrong\");\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n    })\r\n\r\n\r\n    // fetch(url, {\r\n    //   method: \"POST\",\r\n    //   headers: {\r\n    //     Accept: \"application/json\",\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     mealLabel,\r\n    //     intro,\r\n    //     servings,\r\n    //     formatted_ingredient,\r\n    //     instructionsChip,\r\n    //     ingredientStrings,\r\n    //     imgSrc,\r\n    //     readTime,\r\n    //     cookTime,\r\n    //     categoryChips,\r\n    //   }),\r\n    // })\r\n    //   .then((response) => {\r\n    //     if (response.status >= 200 && response.status < 300) {\r\n    //       console.log(response);\r\n    //       console.log(\"Display Meal submitted successfully\");\r\n    //       // return response;\r\n    //       // window.location.reload();\r\n    //     } else {\r\n    //       console.log(\"Somthing happened wrong\");\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n  };\r\n\r\n  render() {\r\n    var instructionSteps = (\r\n      <ol className=\"mdc-list\">\r\n        {this.state.instructionsChip.map((chip) => (\r\n          <li className=\"mdc-list-item\" tabIndex=\"0\">\r\n            <span className=\"mdc-list-item__text\">{chip}</span>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"title\">\r\n          <b>Suggestions</b>\r\n        </div>\r\n\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <br></br>\r\n          {/* add hash action so that form does not reload on enter or button click */}\r\n          <form autoComplete=\"off\" action=\"#\">\r\n            <TextField id=\"mealLabel\" onChange={this.onTextFieldChange} label=\"Meal Name\" required variant=\"filled\"/>\r\n            <br></br>\r\n            <TextField multiline id=\"intro\" onChange={this.onTextFieldChange} label=\"Intro\"  variant=\"filled\" />\r\n            <br></br>\r\n            <TextField id=\"servings\" type=\"number\" onChange={this.onTextFieldChange} label=\"Servings\"  variant=\"filled\"  placeholder=\"1 person, 2, 4 or 10 people\" />\r\n            <br></br>\r\n            {/*  Be able to display product images on clock */}\r\n            <ChipInput\r\n              label=\"IngredientsList\"\r\n              value={this.state.ingredientStrings}\r\n              onAdd={(chip) => this.handleAddIngredientChip(chip)}\r\n              placeholder=\"e.g 1 Onion, 2 Cups of Water, etc\"\r\n              onDelete={(chip, index) =>\r\n                this.handleDeleteIngredientChip(chip, index)\r\n              }\r\n              variant=\"filled\"\r\n            />\r\n            <br></br>\r\n            <div>\r\n              {/* <select onChange={this.handleIngredientDropdownChange}>\r\n                {productOptions}\r\n              </select> */}\r\n\r\n              <Autocomplete\r\n                id=\"currentIngredient\"\r\n                options={this.products.map((option) => option)}\r\n                onChange={this.handleIngredientDropdownChange}\r\n                // style={{ width: 200 }}\r\n                freeSolo\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Ingredient..\"\r\n                    variant=\"filled\"\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <TextField\r\n                id=\"currentIngredientQuantity\"\r\n                type=\"number\"\r\n                onChange={this.onTextFieldChange}\r\n                label=\"Quantity\"\r\n                variant=\"filled\"\r\n                placeholder=\"1..\"\r\n              />\r\n\r\n              <Autocomplete\r\n                id=\"currentIngredientMeasurement\"\r\n                options={this.measurements.map((option) => option)}\r\n                onChange={this.handleIngredientMeasurement}\r\n                freeSolo\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Measurement..\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              <button onClick={this.addIngredientToMeal}>\r\n                {\" \"}\r\n                Add Ingredient +{\" \"}\r\n              </button>\r\n\r\n              {/* <FormControl>\r\n                                <InputLabel id=\"demo-simple-select-helper-label\">Age</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-helper-label\"\r\n                                    id=\"demo-simple-select-helper\"\r\n                                    value={measurement}\r\n                                    onChange={handleMeasurementChange}\r\n                                >\r\n                                    <MenuItem value={measurement}>\r\n                                        <em>Measurement</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value={1}>mL</MenuItem>\r\n                                    <MenuItem value={2}>oz</MenuItem>\r\n                                    <MenuItem value={3}>tbs</MenuItem>\r\n                                    <MenuItem value={4}>lbs</MenuItem>\r\n                                </Select>\r\n                                <FormHelperText>Enter measurement unit for serving</FormHelperText>\r\n                            </FormControl> */}\r\n              {/* <input>Measurement</input><input>Product</input> */}\r\n            </div>\r\n            {instructionSteps}\r\n            <ChipInput\r\n              label=\"Instructions\"\r\n              value={this.state.instructionsChip}\r\n              onAdd={(chip) => this.handleAddInstructionStep(chip)}\r\n              onDelete={(chip, index) =>\r\n                this.handleDeleteInstructionsStep(chip, index)\r\n              }\r\n            />\r\n            <br></br>\r\n            {/* <TextField id=\"instructions\" onChange={this.onChange} label=\"Instructions\" variant=\"filled\" /><br></br> */}\r\n            <input\r\n                accept=\"image/*\"\r\n                // style={{ display: \"none\" }}\r\n                id=\"imgSrc\" \r\n                type=\"file\" \r\n                onChange={(ev)=>this.onTextFieldClick(ev)}/>\r\n            {/* <input\r\n              accept=\"image/*\"\r\n              // style={{ display: \"none\" }}\r\n              id=\"imgsrc\"\r\n              type=\"file\"\r\n              onChange={this.onTextFieldClick}\r\n              // label=\"Upload meal image\"\r\n              // variant=\"filled\"\r\n            /> */}\r\n            <br></br>\r\n            {/* <input type=\"file\" name=\"file-input\" multiple /><br></br>  */}\r\n            {/* {...props} */}\r\n            <TextField\r\n              id=\"readTime\"\r\n              type=\"number\"\r\n              onChange={this.onTextFieldChange}\r\n              label=\"ReadTime (mins)\"\r\n              variant=\"filled\"\r\n              required\r\n            />{\" \"}\r\n            <br></br>\r\n            <TextField\r\n              id=\"cookTime\"\r\n              type=\"number\"\r\n              onChange={this.onTextFieldChange}\r\n              label=\"CookTime (mins)\"\r\n              variant=\"filled\"\r\n              required\r\n            />\r\n            <br></br>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"tags-filled\"\r\n              options={this.categories.map((option) => option)}\r\n              defaultValue={[this.categories[0]]}\r\n              freeSolo\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"filled\"\r\n                  label=\"Categories\"\r\n                  placeholder=\"Suggest categories for this meal..\"\r\n                />\r\n              )}\r\n            />\r\n            <br></br>\r\n            <button onClick={this.sendSuggestedMealToDB}> Suggest Meal </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SuggestMeal;\r\n","import React, { Component } from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useEffect } from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"; // createFilterOptions,\r\nimport axios from 'axios';\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider, withTheme } from '@material-ui/core/styles';\r\nimport { green, purple } from '@material-ui/core/colors';\r\n\r\n// height of the TextField\r\nconst columns = [\r\n    { id: 'label', label: 'MealName', minWidth: 100 },\r\n    { id: 'intro', label: 'Intro', minWidth: 100 },\r\n    { id: 'servings', label: 'Servings',  minWidth: 30},\r\n    { id: 'imageSrc', label: 'ImageSrc',  minWidth: 100},\r\n    { id: 'readTime', label: 'ReadTime',  minWidth: 30},\r\n    { id: 'cookTime', label: 'cookTime',  minWidth: 30},\r\n    { id: 'active', label: 'Active',  minWidth: 150}\r\n  ];\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '95%',\r\n    margin:'auto',\r\n    marginTop:'20px',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n};\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nclass ViewSuggestedMeals extends Component {\r\n  products = [];\r\n  categories = [];\r\n  measurements = [\r\n    \"mL\",\"oz\",\"L\",\"cup(s)\",\"Tbsp\",\"tsp\",\"pt\",\"lb\",\"g\",\"kg\",\"lb\",\r\n  ];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mealLabel: \"\",\r\n      intro: \"\",\r\n      servings: 0,\r\n      currentIngredient: \"Butter scotch\",\r\n      currentIngredientMeasurement: null,\r\n      currentIngredientQuantity: 0,\r\n      ingredientStrings: [],\r\n      formatted_ingredient: [],\r\n      instructionsChip: [],\r\n      imgSrc: \"\",\r\n      loading_imgSrc: null,\r\n      readTime: \"0 mins read\",\r\n      cookTime: \"10 mins cook time\",\r\n      categoryChips: [\"snacks\", \"abc\", \"123\"],\r\n      productsPopulated: false,\r\n      img_change_flag : false,\r\n\r\n      selected_id:\"\",\r\n      mealData_list:[],\r\n      mealData_list:null,\r\n      page:0,\r\n      rowsPerPage:10,\r\n      open:false,\r\n      suggestMealRole: \"\"\r\n    };\r\n    this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(\r\n      this\r\n    );\r\n    this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(\r\n      this\r\n    );\r\n    this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\r\n    this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\r\n  }\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  updateSuggestItem = (data, mealRole) => {  \r\n    this.setState({selected_id: data._id});\r\n    this.setState({open: true});\r\n    this.setState({ suggestMealRole: mealRole });\r\n    this.setState({ suggestMealRole: mealRole });\r\n    this.setState({ mealLabel: data.label });\r\n    this.setState({ intro: data.intro });\r\n    this.setState({ servings: data.servings });\r\n    this.setState({ loading_imgSrc:  `http://localhost:5000/${data.imageSrc}`});\r\n\r\n    this.setState({ formatted_ingredient:data.newer_ingredient_format});\r\n    const last_ingredient = data.newer_ingredient_format[data.newer_ingredient_format.length-1];\r\n    this.setState({ currentIngredientMeasurement: last_ingredient.measurement });\r\n    this.setState({ currentIngredientQuantity: last_ingredient.quantity });\r\n    this.setState({ currentIngredient: last_ingredient.product });\r\n    this.setState({ imgSrc: data.imageSrc });\r\n    this.setState({ instructionsChip:  data.instructions});\r\n    this.setState({ readTime:  data.readTime});\r\n    this.setState({ cookTime:  data.cookTime});\r\n\r\n    let temp = [];\r\n    for(let i=0; i<data.newer_ingredient_format.length; i++)\r\n    {\r\n      const last_ingredient = data.newer_ingredient_format[i];\r\n      var properIngredientStringSyntax;\r\n  \r\n      if (last_ingredient.quantity === 0) {\r\n        properIngredientStringSyntax = last_ingredient.product;\r\n      } \r\n      else if (last_ingredient.measurement === null ) \r\n      { \r\n        properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.product;\r\n      } \r\n      else {\r\n        properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.measurement+\" of \" + last_ingredient.product;\r\n      }\r\n      temp.push(properIngredientStringSyntax);\r\n    }\r\n    this.setState({ ingredientStrings: temp });  \r\n  }\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  handleUpdateSubmit(){    \r\n    const data = this.state; \r\n    var url = \"./api/updateSuggestItem\";\r\n    const {mealLabel,intro,servings,ingredientStrings,formatted_ingredient,instructionsChip,imgSrc,readTime,cookTime,categoryChips, selected_id } = data;\r\n    let sugestMealForm = new FormData();\r\n    sugestMealForm.set('id', selected_id);\r\n    sugestMealForm.set('mealLabel', mealLabel);\r\n    sugestMealForm.set('intro', intro);\r\n    sugestMealForm.set('servings', servings);\r\n    sugestMealForm.set('formatted_ingredient', JSON.stringify(formatted_ingredient));\r\n    sugestMealForm.set('instructionsChip', JSON.stringify(instructionsChip));\r\n    sugestMealForm.set('ingredientStrings', ingredientStrings);    \r\n    sugestMealForm.set('readTime', readTime);\r\n    sugestMealForm.set('cookTime', cookTime);\r\n    sugestMealForm.set('categoryChips', JSON.stringify(categoryChips));\r\n\r\n    if(this.state.img_change_flag){\r\n      sugestMealForm.set('imgSrc', imgSrc, imgSrc.name);\r\n      sugestMealForm.set('img_change_flag', \"true\");      \r\n    }else{\r\n      sugestMealForm.set('img_change_flag', \"false\");     \r\n    }\r\n\r\n    const config = {\r\n      method: 'POST',\r\n      data: sugestMealForm,\r\n      url: url\r\n    };\r\n    axios(config).then(response => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        console.log(\"Updated Meal submitted successfully\");\r\n        \r\n        return (window.location.href = \"/ViewSuggestedMeals\");\r\n\r\n      } else { console.log(\"Somthing happened wrong\"); }\r\n    }).catch(error => {   console.log(error); })\r\n  }\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  componentDidMount() {\r\n    var url = \"./api/get-all-products\";\r\n    fetch(url, { method: \"GET\"})\r\n      .then((res) => res.text())\r\n      .then((body) => {\r\n        var productsList = JSON.parse(body);\r\n        if (productsList && productsList.data.length !== 0) {\r\n          console.log(\"returns GET ALL PRODUCTS \");\r\n          console.log(productsList.data.length);\r\n          for (var i = 0; i < productsList.data.length; i++) {\r\n            this.products.push(productsList.data[i].product_name);\r\n          }\r\n          console.log(\"PRINTING ALL PRODUCTS LIST\");\r\n          console.log(this.products);\r\n          this.setState({ productsPopulated: true });\r\n        } else {\r\n          console.log(\"get all products function does not return\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    // //get category meals\r\n    // // url = \"./api/get-all-categories\";\r\n    // var url = \"http://localhost:5000/api/get-all-categories\"\r\n    // fetch(url).then((res) => res.text()).then((body) => {\r\n    //     console.log(\"should print body\");\r\n    //     console.log(body);\r\n    //     var categoryList = JSON.parse(body);\r\n    //     console.log(\"gggg,\",categoryList);\r\n    //     if (categoryList && categoryList.data.length !== 0) {\r\n    //       console.log(\"returns GET of ALL Categories \");\r\n    //       console.log(categoryList.data.length);\r\n    //       for (var i = 0; i < categoryList.data.length; i++) {\r\n    //         this.categories.push(categoryList.data[i]);\r\n    //       }\r\n    //       console.log(\"PRINTING UPDATED CATEGORIES LIST\");\r\n    //       console.log(this.categories);\r\n    //     } else {\r\n    //       console.log(\"get all products function does not return\");\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n\r\n\r\n    console.log(\"Comes in meal pages component did mount\");\r\n    var url = \"./api/get-suggested-meals\"\r\n    fetch(url).then(res => res.text()).then(body => {\r\n        var productsList = JSON.parse(body);\r\n        if(productsList && productsList.data.length !== 0){\r\n          console.log(\"shows products does return\");\r\n          this.setState({mealData_list:productsList.data});\r\n        }\r\n        else{  console.log(\"shows products do not return\"); }\r\n      }).catch(err => {console.log(err);});\r\n  }\r\n////////////////////////////////////////////////////////////////////////////\r\n  onTextFieldChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n  onTextFieldClick = (event) => {     \r\n    this.setState({ imgSrc: event.target.files[0] });\r\n\r\n    if (this.state.imgSrc !== null) {\r\n        this.setState({ loading_imgSrc:  URL.createObjectURL(event.target.files[0]) });\r\n        this.setState({ img_change_flag: true });\r\n    }\r\n  };\r\n////////////////////////////////////////////////////////////////////////////\r\n  handleAddIngredientChip(chip) {\r\n    let temp = this.state.ingredientStrings;\r\n    temp.push(chip);\r\n    this.setState({ ingredientStrings: temp });\r\n  }\r\n////////////////////////////////////////////////////////////////////////////\r\n  handleAddCategoryChip(chip) {\r\n    this.setState({ categoryChips: [...this.state.categoryChips, chip] }); //\r\n  }\r\n////////////////////////////////////////////////////////////////////////////\r\n  handleAddInstructionStep(chip) {\r\n    this.setState({\r\n      instructionsChip: [...this.state.instructionsChip, chip],\r\n    });\r\n  }\r\n////////////////////////////////////////////////////////////////////////////\r\n  handleDeleteIngredientChip(chip) {\r\n    console.log(\"removing chop input\");\r\n    var array = [...this.state.ingredientStrings]; // make a separate copy of the array\r\n    var formatted_ingredient_array = [...this.state.formatted_ingredient]; // make a separate copy of the array\r\n\r\n\r\n    var index = array.indexOf(chip);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      formatted_ingredient_array.splice(index, 1);\r\n      this.setState({ ingredientStrings: array });\r\n      this.setState({ formatted_ingredient: formatted_ingredient_array });\r\n    }\r\n  }\r\n////////////////////////////////////////////////////////////////////////////\r\n  handleDeleteCategoryChip(chip) {\r\n    console.log(\"removing chop input\");\r\n    var array = [...this.state.categoryChips]; // make a separate copy of the array\r\n    var index = array.indexOf(chip);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ categoryChips: array });\r\n    }\r\n  }\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n  handleDeleteInstructionsStep(chip) {\r\n    console.log(\"removing chop input\");\r\n    var array = [...this.state.instructionsChip]; // make a separate copy of the array\r\n    var index = array.indexOf(chip);\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ instructionsChip: array });\r\n    }\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////////////\r\n  handleIngredientQuantity(event) {\r\n    console.log(event.target.value);\r\n    this.setState({ currentIngredientQuantity: event.target.value });\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////////////\r\n  handleIngredientDropdownChange(event) {\r\n    console.log(event.target);\r\n    if (event.target.value) {\r\n      this.setState({ currentIngredient: event.target.value });\r\n    } else {\r\n      this.setState({ currentIngredient: event.target.innerHTML });\r\n    }\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////////////\r\n  handleIngredientMeasurement(event) {\r\n    if (event.target.value) {\r\n      this.setState({ currentIngredientMeasurement: event.target.value });\r\n    } else {\r\n      this.setState({ currentIngredientMeasurement: event.target.innerHTML });\r\n    }\r\n  }\r\n////////////////////////////////////////////////////////////////////////////\r\n  addIngredientToMeal(event) {\r\n    event.preventDefault();\r\n    console.log(this.state.currentIngredientMeasurement);\r\n    var properIngredientStringSyntax;\r\n\r\n    if (document.getElementById(\"currentIngredient\").value === \"\") {\r\n      window.alert(\"Enter an ingredient to add to meal\");\r\n      return;\r\n    }\r\n\r\n    if (this.state.currentIngredientQuantity === 0) {\r\n      properIngredientStringSyntax = document.getElementById(\"currentIngredient\").value;\r\n    } else if (\r\n      document.getElementById(\"currentIngredientMeasurement\").value === null\r\n    ) {\r\n      properIngredientStringSyntax =\"\" + this.state.currentIngredientQuantity +\" \" + document.getElementById(\"currentIngredient\").value;\r\n    } else {\r\n      properIngredientStringSyntax =\"\" +this.state.currentIngredientQuantity +\" \" + document.getElementById(\"currentIngredientMeasurement\").value +\" of \" + document.getElementById(\"currentIngredient\").value;\r\n    }\r\n    var currIngredientObject = {\r\n      product: this.state.currentIngredient,\r\n      quantity: this.state.currentIngredientQuantity,\r\n      measurement: this.state.currentIngredientMeasurement,\r\n    };\r\n    console.log(properIngredientStringSyntax);\r\n    this.handleAddIngredientChip(properIngredientStringSyntax);\r\n    this.setState({ formatted_ingredient: [ ...this.state.formatted_ingredient, currIngredientObject, ], });\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////////////\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page: newPage});\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////////////////////\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({page: 0});\r\n    this.setState({rowsPerPage: +event.target.value});\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////////////////////\r\n  handleDeleteMealItem = (data) => {\r\n    var url = `./api/removeSeggestItem/${data._id}`;\r\n    fetch(url).then((res) => {\r\n      console.log(\"res,\",res);\r\n      return res.json();\r\n    })\r\n      .then((response) => {           \r\n        console.log(\"Delets item\");\r\n        return (window.location.href = \"/ViewSuggestedMeals\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"unDelets item\");\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////////////////////\r\n  handleClickOpen = (data, mealRole) => {\r\n    this.setState({open: true});\r\n    this.setState({ suggestMealRole: mealRole });\r\n    this.setState({ mealLabel: data.label });\r\n    this.setState({ intro: data.intro });\r\n    this.setState({ servings: data.servings });\r\n    this.setState({ formatted_ingredient:data.newer_ingredient_format});\r\n    const last_ingredient = data.newer_ingredient_format[data.newer_ingredient_format.length-1];\r\n    this.setState({ currentIngredientMeasurement: last_ingredient.measurement });\r\n    this.setState({ currentIngredientQuantity: last_ingredient.quantity });\r\n    this.setState({ currentIngredient: last_ingredient.product });\r\n    this.setState({ instructionsChip:  data.instructions});\r\n    this.setState({ readTime:  data.readTime});\r\n    this.setState({ cookTime:  data.cookTime});\r\n    this.setState({ loading_imgSrc:  `http://localhost:5000/${data.imageSrc}`});\r\n\r\n      let temp = [];\r\n    for(let i=0; i<data.newer_ingredient_format.length; i++)\r\n    {\r\n      const last_ingredient = data.newer_ingredient_format[i];\r\n      var properIngredientStringSyntax;\r\n  \r\n      if (last_ingredient.quantity === 0) {\r\n        properIngredientStringSyntax = last_ingredient.product;\r\n      } \r\n      else if (last_ingredient.measurement === null ) \r\n      { \r\n        properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.product;\r\n      } \r\n      else {\r\n        properIngredientStringSyntax =\"\" + last_ingredient.quantity + \" \" +  last_ingredient.measurement+\" of \" + last_ingredient.product;\r\n      }\r\n      temp.push(properIngredientStringSyntax);\r\n    }\r\n    this.setState({ ingredientStrings: temp });     \r\n };\r\n\r\n  handleClose = () => { this.setState({open: false});};\r\n\r\n  onTextFieldChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n////////////////////////////////////////////////////////////////////////////\r\n  render() {\r\n    var instructionSteps = (\r\n      <ol className=\"mdc-list\">\r\n        {this.state.instructionsChip.map((chip,index) => (\r\n          <li className=\"mdc-list-item\" tabIndex=\"0\" key={index}>\r\n            <span className=\"mdc-list-item__text\">{chip}</span>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    );\r\n\r\n    const { classes } = this.props;\r\n    const {mealData_list, page, rowsPerPage, open, suggestMealRole, loading_imgSrc} = this.state;\r\n    const {mealLabel, intro, servings, currentIngredient, currentIngredientQuantity, currentIngredientMeasurement, imgSrc,readTime, cookTime} = this.state;\r\n    \r\n    const data1 = this.state;\r\n    // console.log(\"KJJJ:\", imgSrc);\r\n\r\n    const theme = createMuiTheme({\r\n      palette: {\r\n        primary: green,\r\n      },\r\n    });\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell key={column.id} align={column.align}  style={{ minWidth: column.minWidth, fontSize:'15x', fontWeight:'600',padding: '10px 5px' }}>\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              { mealData_list&&\r\n              mealData_list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                return (               \r\n                  <TableRow  key={row._id}>\r\n                    {columns.map((column) => {\r\n                      if(column.id==\"active\"){                     \r\n                        return (\r\n                        <TableCell  key={column.id} style={{ padding: '0px 0px'}}>\r\n                          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick ={()=>this.handleClickOpen(row, \"moreView\")}>\r\n                            <VisibilityIcon />\r\n                          </IconButton>\r\n                          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick ={()=>this.updateSuggestItem(row,\"edit\")}>\r\n                            <EditIcon style={{ color: 'green'}}/>\r\n                          </IconButton>\r\n                          <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\"  onClick ={()=>this.handleDeleteMealItem(row)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        );\r\n                      }else{ const value = row[column.id]; return (<TableCell key={column.id} style={{ padding: '5px 5px'}}>{value}</TableCell> );}                    \r\n                    })                  \r\n                    }    \r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={mealData_list? mealData_list.length:0}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth = \"lg\"\r\n        fullWidth\r\n        >\r\n        <DialogTitle id=\"alert-dialog-title\">{suggestMealRole == \"moreView\" ? \"Suggest Meal\": \"Update Meal\"}</DialogTitle>\r\n        <DialogContent>\r\n          <form noValidate autoComplete=\"off\">\r\n              <Row className=\"mb-3\">\r\n                  <Col md={4}><TextField id=\"mealLabel\" fullWidth onChange={this.onTextFieldChange} label=\"Meal Name\" required variant=\"filled\"className=\"mb-2\" value={mealLabel}/></Col>\r\n                  <Col md={4}><TextField multiline id=\"intro\" fullWidth onChange={this.onTextFieldChange} label=\"Intro\"  variant=\"filled\" className=\"mb-2\" value={intro} /></Col>\r\n                  <Col md={4}><TextField id=\"servings\" fullWidth type=\"number\" onChange={this.onTextFieldChange} label=\"Servings\"  variant=\"filled\"  className=\"mb-2\" placeholder=\"1 person, 2, 4 or 10 people\" value={servings}/></Col>\r\n              </Row>\r\n              <Row className=\"mb-3\">\r\n                  <Col md={8}>\r\n                    <ChipInput\r\n                      label=\"IngredientsList\"\r\n                      value={this.state.ingredientStrings}\r\n                      onAdd={(chip) => this.handleAddIngredientChip(chip)}\r\n                      placeholder=\"e.g 1 Onion, 2 Cups of Water, etc\"\r\n                      onDelete={(chip, index) =>this.handleDeleteIngredientChip(chip, index)}\r\n                      variant=\"filled\"\r\n                      fullWidth \r\n                      className=\"mb-2\"\r\n                    />\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Autocomplete\r\n                      id=\"currentIngredient\"\r\n                      options={this.products.map((option) => option)}\r\n                      onChange={this.handleIngredientDropdownChange}\r\n                      freeSolo\r\n                      renderInput={(params) => ( <TextField {...params} label=\"Ingredient..\" variant=\"filled\"/>)}\r\n                      fullWidth \r\n                      className=\"mb-2\"\r\n                      value = {currentIngredient}\r\n                    />\r\n                  </Col>\r\n               </Row>\r\n               <Row className=\"mb-3\">\r\n                  <Col md={4}>\r\n                      <Autocomplete id=\"currentIngredientMeasurement\" options={this.measurements.map((option) => option)} value={currentIngredientMeasurement} onChange={this.handleIngredientMeasurement}\r\n                      freeSolo\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} label=\"Measurement..\" variant=\"filled\"/>\r\n                      )}\r\n                      className=\"mb-2\"\r\n                    />\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <TextField fullWidth id=\"currentIngredientQuantity\" type=\"number\"  onChange={this.onTextFieldChange}  label=\"Quantity\" variant=\"filled\" placeholder=\"1..\"  className=\"mb-2\" value={currentIngredientQuantity}/>\r\n                  </Col>\r\n                  <Col md={4}  style={{textAlign:\"center\", margin: \"auto\"}}> \r\n                    <Button variant=\"contained\" color=\"primary\" size=\"small\" disableRipple className={classes.margin}  onClick={this.addIngredientToMeal} style={{color:\"white\"}}  className=\"mb-2\" disabled={suggestMealRole===\"moreView\"? true:false}> Add Ingredient</Button>\r\n                  </Col>\r\n               </Row>\r\n               <Row className=\"mb-3\">\r\n                  <Col md={3}>\r\n                    <input accept=\"image/*\" id=\"imgSrc\" type=\"file\" className=\"mb-2\" onChange={(ev)=>this.onTextFieldClick(ev)} />\r\n                  </Col> \r\n                  <Col md={9}>\r\n                        {/* <div>Image Path: {imgSrc}</div> */}\r\n                        <img src={loading_imgSrc} width=\"300px\" height=\"200px\"/>\r\n                  </Col>                  \r\n               </Row>\r\n             \r\n               <Row className=\"mb-3\">\r\n                  <Col md={12}>\r\n                    <ChipInput label=\"Instructions\"  className=\"mb-2\" fullWidth  value={this.state.instructionsChip} onAdd={(chip) => this.handleAddInstructionStep(chip)} onDelete={(chip, index) =>this.handleDeleteInstructionsStep(chip, index)}   variant=\"filled\" />\r\n                  </Col>               \r\n               </Row>\r\n              <Row className=\"mb-3\">\r\n                  <Col md={12}  className=\"mb-2\">{instructionSteps}</Col>                 \r\n               </Row>\r\n               <Row className=\"mb-3\">\r\n                  <Col md={4}>\r\n                    <TextField id=\"readTime\"  className=\"mb-2\" type=\"number\" fullWidth onChange={this.onTextFieldChange} label=\"ReadTime (mins)\" variant=\"filled\" required value={readTime} />\r\n                  </Col>   \r\n                  <Col md={4}>\r\n                    <TextField id=\"cookTime\" className=\"mb-2\" type=\"number\" fullWidth onChange={this.onTextFieldChange} label=\"CookTime (mins)\" variant=\"filled\" required value={cookTime}/>\r\n                  </Col>   \r\n                  <Col md={4}>\r\n                    <Autocomplete multiple id=\"tags-filled\" className=\"mb-2\" fullWidth options={this.categories.map((option) => option)} defaultValue={[this.categories[0]]}\r\n                      freeSolo\r\n                      renderTags={(value, getTagProps) => value.map((option, index) => (<Chip variant=\"outlined\" label={option} {...getTagProps({ index })}/>))}\r\n                      renderInput={(params) => (<TextField {...params} variant=\"filled\" label=\"Categories\" placeholder=\"Suggest categories for this meal..\"/>)} />\r\n                  </Col>                        \r\n               </Row>\r\n\r\n              {\r\n                  suggestMealRole !== \"moreView\" &&\r\n                  <Row className=\"mb-5\">\r\n                    <Col md={4} style={{textAlign:\"center\", margin: \"auto\"}}>\r\n                      <ThemeProvider theme={theme}>\r\n                        <Button variant=\"contained\" className=\"mb-2\" color=\"primary\" size=\"small\"  className={classes.margin} style={{color:\"white\"}} onClick={()=>this.handleUpdateSubmit()}> Update Meal</Button>\r\n                      </ThemeProvider>\r\n                    </Col>       \r\n                  </Row>\r\n              }\r\n              \r\n              </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ViewSuggestedMeals);\r\n\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Table from '@material-ui/core/Table';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import { useEffect } from 'react'\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import VisibilityIcon from '@material-ui/icons/Visibility';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\n// import Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import ChipInput from \"material-ui-chip-input\";\r\n// import Chip from \"@material-ui/core/Chip\";\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\"; // createFilterOptions,\r\n\r\n// const columns = [\r\n//     { id: 'label', label: 'MealName', minWidth: 100 },\r\n//     { id: 'intro', label: 'Intro', minWidth: 100 },\r\n//     { id: 'servings', label: 'Servings',  minWidth: 30},\r\n//     { id: 'imageSrc', label: 'ImageSrc',  minWidth: 100},\r\n//     { id: 'readTime', label: 'ReadTime',  minWidth: 30},\r\n//     { id: 'cookTime', label: 'cookTime',  minWidth: 30},\r\n//     { id: 'active', label: 'Active',  minWidth: 150}\r\n//   ];\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     width: '95%',\r\n//     margin:'auto',\r\n//     marginTop:'20px',\r\n//   },\r\n//   container: {\r\n//     maxHeight: 440,\r\n//   },\r\n// });\r\n\r\n// class ViewSuggestedMeals extends Component{\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       mealLabel: \"\",\r\n//       intro: \"\",\r\n//       servings: 0,\r\n//       currentIngredient: \"Butter scotch\",\r\n//       currentIngredientMeasurement: null,\r\n//       currentIngredientQuantity: 0,\r\n//       ingredientStrings: [],\r\n//       formatted_ingredient: [],\r\n//       instructionsChip: [],\r\n//       imgSrc: \"\",\r\n//       readTime: \"0 mins read\",\r\n//       cookTime: \"10 mins cook time\",\r\n//       categoryChips: [\"snacks\", \"abc\", \"123\"],\r\n//       productsPopulated: false,\r\n\r\n//       mealData_list:[],\r\n//       mealData_list:null,\r\n//       page:0,\r\n//       rowsPerPage:10,\r\n//       open:false,\r\n//     };\r\n//     this.handleIngredientDropdownChange = this.handleIngredientDropdownChange.bind(\r\n//       this\r\n//     );\r\n//     this.handleIngredientMeasurement = this.handleIngredientMeasurement.bind(\r\n//       this\r\n//     );\r\n//     this.handleIngredientQuantity = this.handleIngredientQuantity.bind(this);\r\n//     this.addIngredientToMeal = this.addIngredientToMeal.bind(this);\r\n//   }\r\n\r\n//   // const [mealData_list, setMealData] = React.useState();\r\n//   products = [];\r\n//   categories = [];\r\n//   measurements = [\r\n//     \"mL\",    \"oz\",    \"L\",    \"cup(s)\",    \"Tbsp\",    \"tsp\",    \"pt\",    \"lb\",    \"g\",    \"kg\",    \"lb\",\r\n//   ];\r\n\r\n//   componentDidMount(){\r\n//     console.log(\"Comes in meal pages component did mount\");\r\n//     // var url = \"https://chopchowdev.herokuapp.com/api/get-suggested-meals\";\r\n//     var url = \"http://localhost:5000/api/get-suggested-meals\"\r\n\r\n//     fetch(url).then(res => res.text()).then(body => {\r\n//         var productsList = JSON.parse(body);\r\n//         if(productsList && productsList.data.length !== 0){\r\n//           console.log(\"shows products does return\");\r\n//           // console.log(productsList.data.length);\r\n\r\n//           // for (var i = 0; i < productsList.data.length; i++) {\r\n//           //   this.products.push(productsList.data[i]);\r\n//           // }\r\n//           // setMealData(productsList.data);\r\n//           this.setState({mealData_list:productsList.data});\r\n//           // console.log(\"dddd:\", mealData_list);\r\n//           // this.setState({meals_fetched:true});\r\n\r\n//         }\r\n//         else{  console.log(\"shows products do not return\"); }\r\n//       }).catch(err => {console.log(err);});\r\n//   }\r\n\r\n//   classes = useStyles();\r\n//   // const [page, setPage] = React.useState(0);\r\n//   // const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n//   handleChangePage = (event, newPage) => {\r\n//     this.setState({page: newPage});\r\n//   };\r\n\r\n//   handleChangeRowsPerPage = (event) => {\r\n//     // setRowsPerPage(+event.target.value);\r\n//     // setPage(0);\r\n//     this.setState({page: 0});\r\n//     this.setState({rowsPerPage: +event.target.value});\r\n//   };\r\n\r\n//   // const [open, setOpen] = React.useState(false);\r\n\r\n//   handleClickOpen = () => {this.setState({open: true}); };\r\n//   handleClose = () => { this.setState({open: false});};\r\n\r\n//   onTextFieldChange = (e) => {\r\n//     this.setState({ [e.target.id]: e.target.value });\r\n//   };\r\n\r\n//   onTextFieldClick = (event) => {     \r\n//     console.log(\"Comes in on change\");\r\n//     this.setState({ imgSrc: event.target.files[0] });\r\n//     console.log(\" file ---\", event.target.files[0]);\r\n//   };\r\n\r\n//   render() {\r\n//     var instructionSteps = (\r\n//       <ol className=\"mdc-list\">\r\n//         {this.state.instructionsChip.map((chip) => (\r\n//           <li className=\"mdc-list-item\" tabIndex=\"0\">\r\n//             <span className=\"mdc-list-item__text\">{chip}</span>\r\n//           </li>\r\n//         ))}\r\n//       </ol>\r\n//     );\r\n\r\n//    const {mealData_list, page, rowsPerPage, open} = this.state;\r\n//   return (\r\n//     <Paper className={this.classes.root}>\r\n//       <TableContainer className={this.classes.container}>\r\n//         <Table stickyHeader aria-label=\"sticky table\">\r\n//           <TableHead>\r\n//             <TableRow>\r\n//               {columns.map((column) => (\r\n//                 <TableCell\r\n//                   key={column.id}\r\n//                   align={column.align}\r\n//                   style={{ minWidth: column.minWidth, fontSize:'15x', fontWeight:'600',padding: '10px 5px' }}\r\n//                 >\r\n//                   {column.label}\r\n//                 </TableCell>\r\n//               ))}\r\n//             </TableRow>\r\n//           </TableHead>\r\n//           <TableBody>\r\n//             { mealData_list&&\r\n//              mealData_list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n//               return (\r\n//                 <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n//                   {columns.map((column) => {\r\n//                     if(column.id==\"active\"){\r\n//                       return (\r\n//                       <TableCell  key={column.id} style={{ padding: '0px 0px'}}>\r\n//                         <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick ={this.handleClickOpen}>\r\n//                           <VisibilityIcon />\r\n//                         </IconButton>\r\n//                         <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n//                           <EditIcon style={{ color: 'green'}}/>\r\n//                         </IconButton>\r\n//                         <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\">\r\n//                           <DeleteIcon />\r\n//                         </IconButton>\r\n//                       </TableCell>\r\n//                       );\r\n//                     }else{\r\n//                       const value = row[column.id];\r\n//                       return (\r\n//                         <TableCell key={column.id} style={{ padding: '5px 5px'}}>{value}</TableCell>\r\n//                       );\r\n//                     }                    \r\n//                   })                  \r\n//                   }    \r\n//                 </TableRow>\r\n//               );\r\n//             })}\r\n//           </TableBody>\r\n//         </Table>\r\n//       </TableContainer>\r\n//       <TablePagination\r\n//         rowsPerPageOptions={[10, 25, 100]}\r\n//         component=\"div\"\r\n//         count={mealData_list? mealData_list.length:0}\r\n//         rowsPerPage={rowsPerPage}\r\n//         page={page}\r\n//         onChangePage={this.handleChangePage}\r\n//         onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n//       />\r\n\r\n//       <Dialog\r\n//         open={open}\r\n//         onClose={this.handleClose}\r\n//         aria-labelledby=\"alert-dialog-title\"\r\n//         aria-describedby=\"alert-dialog-description\"\r\n//         >\r\n//         <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n//         <DialogContent>\r\n//           <DialogContentText id=\"alert-dialog-description\">\r\n//           <form autoComplete=\"off\" action=\"#\">\r\n//             <TextField id=\"mealLabel\" onChange={this.onTextFieldChange} label=\"Meal Name\" required variant=\"filled\"/>\r\n//             <TextField multiline id=\"intro\" onChange={this.onTextFieldChange} label=\"Intro\"  variant=\"filled\" />\r\n//             <TextField id=\"servings\" type=\"number\" onChange={this.onTextFieldChange} label=\"Servings\"  variant=\"filled\"  placeholder=\"1 person, 2, 4 or 10 people\" />\r\n//             <ChipInput\r\n//               label=\"IngredientsList\"\r\n//               value={this.state.ingredientStrings}\r\n//               onAdd={(chip) => this.handleAddIngredientChip(chip)}\r\n//               placeholder=\"e.g 1 Onion, 2 Cups of Water, etc\"\r\n//               onDelete={(chip, index) =>this.handleDeleteIngredientChip(chip, index)}\r\n//               variant=\"filled\"\r\n//             />\r\n//             <div>\r\n//               <Autocomplete\r\n//                 id=\"currentIngredient\"\r\n//                 options={this.products.map((option) => option)}\r\n//                 onChange={this.handleIngredientDropdownChange}\r\n//                 freeSolo\r\n//                 renderInput={(params) => (\r\n//                   <TextField\r\n//                     {...params}\r\n//                     label=\"Ingredient..\"\r\n//                     variant=\"filled\"\r\n//                   />\r\n//                 )}\r\n//               />\r\n//               <TextField\r\n//                 id=\"currentIngredientQuantity\"\r\n//                 type=\"number\"\r\n//                 onChange={this.onTextFieldChange}\r\n//                 label=\"Quantity\"\r\n//                 variant=\"filled\"\r\n//                 placeholder=\"1..\"\r\n//               />\r\n//               <Autocomplete\r\n//                 id=\"currentIngredientMeasurement\"\r\n//                 options={this.measurements.map((option) => option)}\r\n//                 onChange={this.handleIngredientMeasurement}\r\n//                 freeSolo\r\n//                 renderInput={(params) => (\r\n//                   <TextField\r\n//                     {...params}\r\n//                     label=\"Measurement..\"\r\n//                     variant=\"outlined\"\r\n//                   />\r\n//                 )}\r\n//               />\r\n//               <button onClick={this.addIngredientToMeal}>\r\n//                 {\" \"}\r\n//                 Add Ingredient +{\" \"}\r\n//               </button>\r\n//             </div>\r\n//             {instructionSteps}\r\n//             <ChipInput\r\n//               label=\"Instructions\"\r\n//               value={this.state.instructionsChip}\r\n//               onAdd={(chip) => this.handleAddInstructionStep(chip)}\r\n//               onDelete={(chip, index) =>\r\n//                 this.handleDeleteInstructionsStep(chip, index)\r\n//               }\r\n//             />\r\n//             <input\r\n//                 accept=\"image/*\"\r\n//                 id=\"imgSrc\" \r\n//                 type=\"file\" \r\n//                 onChange={(ev)=>this.onTextFieldClick(ev)}/>\r\n//             <TextField\r\n//               id=\"readTime\"\r\n//               type=\"number\"\r\n//               onChange={this.onTextFieldChange}\r\n//               label=\"ReadTime (mins)\"\r\n//               variant=\"filled\"\r\n//               required\r\n//             />\r\n//             <TextField\r\n//               id=\"cookTime\"\r\n//               type=\"number\"\r\n//               onChange={this.onTextFieldChange}\r\n//               label=\"CookTime (mins)\"\r\n//               variant=\"filled\"\r\n//               required\r\n//             />\r\n//             <Autocomplete\r\n//               multiple\r\n//               id=\"tags-filled\"\r\n//               options={this.categories.map((option) => option)}\r\n//               defaultValue={[this.categories[0]]}\r\n//               freeSolo\r\n//               renderTags={(value, getTagProps) =>\r\n//                 value.map((option, index) => (\r\n//                   <Chip\r\n//                     variant=\"outlined\"\r\n//                     label={option}\r\n//                     {...getTagProps({ index })}\r\n//                   />\r\n//                 ))\r\n//               }\r\n//               renderInput={(params) => (\r\n//                 <TextField\r\n//                   {...params}\r\n//                   variant=\"filled\"\r\n//                   label=\"Categories\"\r\n//                   placeholder=\"Suggest categories for this meal..\"\r\n//                 />\r\n//               )}\r\n//             />\r\n//             <br></br>\r\n//             <button> Suggest Meal </button>\r\n//           </form>\r\n\r\n//           </DialogContentText>\r\n//         </DialogContent>\r\n//         <DialogActions>\r\n//           <Button onClick={this.handleClose} color=\"primary\">\r\n//             Disagree\r\n//           </Button>\r\n//           <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n//             Agree\r\n//           </Button>\r\n//         </DialogActions>\r\n//         </Dialog>\r\n//     </Paper>\r\n//   );\r\n//   }\r\n// }\r\n// export default ViewSuggestedMeals;\r\n\r\n\r\n\r\n// // import React, { Component } from \"react\";\r\n// // import { Form, Button, Container, Modal, Row, Col } from \"react-bootstrap\";\r\n// // import PropTypes from 'prop-types';\r\n// // import clsx from 'clsx';\r\n// // import { lighten, makeStyles } from '@material-ui/core/styles';\r\n// // import Table from '@material-ui/core/Table';\r\n// // import TableBody from '@material-ui/core/TableBody';\r\n// // import TableCell from '@material-ui/core/TableCell';\r\n// // import TableContainer from '@material-ui/core/TableContainer';\r\n// // import TableHead from '@material-ui/core/TableHead';\r\n// // import TablePagination from '@material-ui/core/TablePagination';\r\n// // import TableRow from '@material-ui/core/TableRow';\r\n// // import TableSortLabel from '@material-ui/core/TableSortLabel';\r\n// // import Toolbar from '@material-ui/core/Toolbar';\r\n// // import Typography from '@material-ui/core/Typography';\r\n// // import Paper from '@material-ui/core/Paper';\r\n// // import Checkbox from '@material-ui/core/Checkbox';\r\n// // import IconButton from '@material-ui/core/IconButton';\r\n// // import Tooltip from '@material-ui/core/Tooltip';\r\n// // import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// // import Switch from '@material-ui/core/Switch';\r\n// // import DeleteIcon from '@material-ui/icons/Delete';\r\n// // import FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// // const useStyles = makeStyles((theme) => ({\r\n// //   root: {\r\n// //     width: '100%',\r\n// //   },\r\n// //   paper: {\r\n// //     width: '100%',\r\n// //     marginBottom: theme.spacing(2),\r\n// //   },\r\n// //   table: {\r\n// //     minWidth: 750,\r\n// //   },\r\n// //   visuallyHidden: {\r\n// //     border: 0,\r\n// //     clip: 'rect(0 0 0 0)',\r\n// //     height: 1,\r\n// //     margin: -1,\r\n// //     overflow: 'hidden',\r\n// //     padding: 0,\r\n// //     position: 'absolute',\r\n// //     top: 20,\r\n// //     width: 1,\r\n// //   },\r\n// // }));\r\n\r\n\r\n\r\n// // function stableSort(array, comparator) {\r\n// //   const stabilizedThis = array.map((el, index) => [el, index]);\r\n// //   stabilizedThis.sort((a, b) => {\r\n// //     const order = comparator(a[0], b[0]);\r\n// //     if (order !== 0) return order;\r\n// //     return a[1] - b[1];\r\n// //   });\r\n// //   return stabilizedThis.map((el) => el[0]);\r\n// // }\r\n\r\n// // function descendingComparator(a, b, orderBy) {\r\n// //   if (b[orderBy] < a[orderBy]) {\r\n// //     return -1;\r\n// //   }\r\n// //   if (b[orderBy] > a[orderBy]) {\r\n// //     return 1;\r\n// //   }\r\n// //   return 0;\r\n// // }\r\n\r\n\r\n// // function getComparator(order, orderBy) {\r\n// //   return order === 'desc'\r\n// //     ? (a, b) => descendingComparator(a, b, orderBy)\r\n// //     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// // }\r\n\r\n// // const useToolbarStyles = makeStyles((theme) => ({\r\n// //   root: {\r\n// //     paddingLeft: theme.spacing(2),\r\n// //     paddingRight: theme.spacing(1),\r\n// //   },\r\n// //   highlight:\r\n// //     theme.palette.type === 'light'\r\n// //       ? {\r\n// //           color: theme.palette.secondary.main,\r\n// //           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n// //         }\r\n// //       : {\r\n// //           color: theme.palette.text.primary,\r\n// //           backgroundColor: theme.palette.secondary.dark,\r\n// //         },\r\n// //   title: {\r\n// //     flex: '1 1 100%',\r\n// //   },\r\n// // }));\r\n\r\n// // const EnhancedTableToolbar = (props) => {\r\n// //   const classes = useToolbarStyles();\r\n// //   const { numSelected } = props;\r\n\r\n// //   return (\r\n// //     <Toolbar\r\n// //       className={clsx(classes.root, {\r\n// //         [classes.highlight]: numSelected > 0,\r\n// //       })}\r\n// //     >\r\n// //       {numSelected > 0 ? (\r\n// //         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n// //           {numSelected} selected\r\n// //         </Typography>\r\n// //       ) : (\r\n// //         <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n// //           Nutrition\r\n// //         </Typography>\r\n// //       )}\r\n\r\n// //       {numSelected > 0 ? (\r\n// //         <Tooltip title=\"Delete\">\r\n// //           <IconButton aria-label=\"delete\">\r\n// //             <DeleteIcon />\r\n// //           </IconButton>\r\n// //         </Tooltip>\r\n// //       ) : (\r\n// //         <Tooltip title=\"Filter list\">\r\n// //           <IconButton aria-label=\"filter list\">\r\n// //             <FilterListIcon />\r\n// //           </IconButton>\r\n// //         </Tooltip>\r\n// //       )}\r\n// //     </Toolbar>\r\n// //   );\r\n// // };\r\n\r\n// // // function EnhancedTableHead(props) {\r\n// // //   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n// // //   const createSortHandler = (property) => (event) => {\r\n// // //     onRequestSort(event, property);\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <TableHead>\r\n// // //       <TableRow>\r\n// // //         <TableCell padding=\"checkbox\">\r\n// // //           <Checkbox\r\n// // //             indeterminate={numSelected > 0 && numSelected < rowCount}\r\n// // //             checked={rowCount > 0 && numSelected === rowCount}\r\n// // //             onChange={onSelectAllClick}\r\n// // //             inputProps={{ 'aria-label': 'select all desserts' }}\r\n// // //           />\r\n// // //         </TableCell>\r\n// // //         {headCells.map((headCell) => (\r\n// // //           <TableCell\r\n// // //             key={headCell.id}\r\n// // //             align={headCell.numeric ? 'right' : 'left'}\r\n// // //             padding={headCell.disablePadding ? 'none' : 'default'}\r\n// // //             sortDirection={orderBy === headCell.id ? order : false}\r\n// // //           >\r\n// // //             <TableSortLabel\r\n// // //               active={orderBy === headCell.id}\r\n// // //               direction={orderBy === headCell.id ? order : 'asc'}\r\n// // //               onClick={createSortHandler(headCell.id)}\r\n// // //             >\r\n// // //               {headCell.label}\r\n// // //               {orderBy === headCell.id ? (\r\n// // //                 <span className={classes.visuallyHidden}>\r\n// // //                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n// // //                 </span>\r\n// // //               ) : null}\r\n// // //             </TableSortLabel>\r\n// // //           </TableCell>\r\n// // //         ))}\r\n// // //       </TableRow>\r\n// // //     </TableHead>\r\n// // //   );\r\n// // // }\r\n\r\n// // const isSelected = (name) => selected.indexOf(name) !== -1;\r\n// // const classes = useStyles();\r\n// // const [selected, setSelected] = React.useState([]);\r\n// // const [page, setPage] = React.useState(0);\r\n// // const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n// // const [order, setOrder] = React.useState('asc');\r\n// // const emptyRows = rowsPerPage - Math.min(rowsPerPage, this.state.mealsListed.length - page * rowsPerPage);\r\n// // const [dense, setDense] = React.useState(false);\r\n// // const [orderBy, setOrderBy] = React.useState('calories');\r\n\r\n\r\n// // export default class ViewSuggestedMeals extends Component {\r\n\r\n// //   constructor(props) {\r\n// //     super(props);\r\n// //     this.state = {\r\n// //       mealData_list:[],\r\n// //       meals_fetched : false,\r\n// //       suggestMealPopOver: false,\r\n// //       mealsListed: false,\r\n// //       mealSelected: false,\r\n// //       IngredientsListed: false,\r\n// //       recipes: this.meals, \r\n// //       valueAllDataLists: [],\r\n// //       showIngredients: {\r\n// //         hidden: true\r\n// //       },\r\n// //       showProducts: {\r\n// //         hidden: true\r\n// //       },\r\n// //       topNav_className: \"w3-bar w3-dark-grey w3-green topnav\"\r\n// //     };\r\n\r\n\r\n// //   }\r\n\r\n// //   componentDidMount() {\r\n// //     console.log(\"Comes in meal pages component did mount\");\r\n// //     // var url = \"https://chopchowdev.herokuapp.com/api/get-suggested-meals\";\r\n// //     var url = \"http://localhost:5000/api/get-suggested-meals\"\r\n\r\n// //     fetch(url).then(res => res.text()).then(body => {\r\n// //         var productsList = JSON.parse(body);\r\n// //         if(productsList && productsList.data.length !== 0){\r\n// //           console.log(\"shows products does return\");\r\n// //           // console.log(productsList.data.length);\r\n\r\n// //           // for (var i = 0; i < productsList.data.length; i++) {\r\n// //           //   this.products.push(productsList.data[i]);\r\n// //           // }\r\n// //           this.setState({mealData_list: productsList.data})\r\n// //           // console.log(this.products);\r\n// //           // this.setState({meals_fetched:true});\r\n// //         }\r\n// //         else{  console.log(\"shows products do not return\"); }\r\n// //       }).catch(err => {console.log(err);});\r\n// //   }\r\n\r\n// //   meal_popups = [];\r\n\r\n// //   showIngredient(index) {\r\n// //     console.log(\"updating popup boolean\");\r\n// //     this.meal_popups[index] = !this.meal_popups[index];\r\n// //   }\r\n\r\n// //   handleChangePage = (event, newPage) => {\r\n// //     this.setPage(newPage);\r\n// //   };\r\n\r\n// //   handleChangeRowsPerPage = (event) => {\r\n// //     setRowsPerPage(parseInt(event.target.value, 10));\r\n// //     setPage(0);\r\n// //   };\r\n\r\n// //   handleChangeDense = (event) => {\r\n// //     setDense(event.target.checked);\r\n// //   };\r\n  \r\n// // ////////////////////////////////////////////////////////////////////////////////\r\n// //   render() {\r\n    \r\n// //     return (\r\n// //       <div className={classes.root}>\r\n// //       <Paper className={classes.paper}>\r\n// //         <EnhancedTableToolbar numSelected={selected.length} />\r\n// //         <TableContainer>\r\n// //           <Table\r\n// //             className={classes.table}\r\n// //             aria-labelledby=\"tableTitle\"\r\n// //             size={dense ? 'small' : 'medium'}\r\n// //             aria-label=\"enhanced table\"\r\n// //           >\r\n// //             {/* <EnhancedTableHead\r\n// //               classes={classes}\r\n// //               numSelected={selected.length}\r\n// //               order={order}\r\n// //               orderBy={orderBy}\r\n// //               // onSelectAllClick={handleSelectAllClick}\r\n// //               // onRequestSort={handleRequestSort}\r\n// //               rowCount={this.state.mealsListed.length}\r\n// //             /> */}\r\n// //             <TableBody>\r\n// //               {stableSort(this.state.mealsListed, getComparator(order, orderBy))\r\n// //                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n// //                 .map((row, index) => {\r\n// //                   const isItemSelected = isSelected(row.label);\r\n// //                   const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n// //                   return (\r\n// //                     <TableRow>\r\n// //                       {/* <TableCell padding=\"checkbox\">\r\n// //                         <Checkbox\r\n// //                           checked={isItemSelected}\r\n// //                           inputProps={{ 'aria-labelledby': labelId }}\r\n// //                         />\r\n// //                       </TableCell> */}\r\n// //                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n// //                         {row.label}\r\n// //                       </TableCell>\r\n// //                       <TableCell align=\"right\">{row.intro}</TableCell>\r\n// //                       <TableCell align=\"right\">{row.imageSrc}</TableCell>\r\n// //                       <TableCell align=\"right\">{row.servings}</TableCell>\r\n// //                       <TableCell align=\"right\">{row.imageSrc}</TableCell>\r\n// //                       <TableCell align=\"right\">{row.readTime}</TableCell>\r\n// //                       <TableCell align=\"right\">{row.cookTime}</TableCell>\r\n// //                     </TableRow>\r\n// //                   );\r\n// //                 })}\r\n// //               {emptyRows > 0 && (\r\n// //                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n// //                   <TableCell colSpan={6} />\r\n// //                 </TableRow>\r\n// //               )}\r\n// //             </TableBody>\r\n// //           </Table>\r\n// //         </TableContainer>\r\n// //         <TablePagination\r\n// //           rowsPerPageOptions={[5, 10, 25]}\r\n// //           component=\"div\"\r\n// //           count={this.state.mealsListed.length}\r\n// //           rowsPerPage={rowsPerPage}\r\n// //           page={page}\r\n// //           onChangePage={this.handleChangePage}\r\n// //           onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n// //         />\r\n// //       </Paper>\r\n// //       <FormControlLabel\r\n// //         control={<Switch checked={dense} onChange={this.handleChangeDense} />}\r\n// //         label=\"Dense padding\"\r\n// //       />\r\n// //     </div>\r\n// //   // );\r\n// //   //     <div>\r\n// //   //       <div id=\"title\">\r\n// //   //         <b>Suggested Meals</b>\r\n// //   //       </div>\r\n// //   //       <table>\r\n// //   //         <tr>\r\n// //   //           <th>Meal Name</th>\r\n// //   //           <th>Lastname</th>\r\n// //   //           <th>Savings</th>\r\n// //   //         </tr>\r\n\r\n// //   //         <div className=\"container\">\r\n// //   //           {\r\n// //   //             this.state.mealData_list&&\r\n// //   //             this.state.mealData_list.map((data, index)=>(\r\n// //   //               <div key={index}>\r\n// //   //                 {data.label}\r\n// //   //               </div>\r\n// //   //             ))              \r\n// //   //           }\r\n// //   //         </div>\r\n// //   //       </table>\r\n        \r\n// //   //     </div>\r\n// //     )\r\n// //   };\r\n// // }\r\n\r\n// // const containerStyle = {\r\n// //   //font: \"50px\",\r\n// //   display: \"inline-block\",\r\n// //   width: \"100%\",\r\n// //   height: \"100%\"\r\n// // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // // import React, { Component } from \"react\";\r\n// // // // import MyModal from \"./mealsPage/Mymodal\";\r\n// // // // import WithScrollbar from \"./mealsPage/product_slider/WithScrollbar\";\r\n\r\n// // // class ViewSuggestedMeals extends Component {\r\n\r\n// // //     // Mongo\r\n// // //     products = [];\r\n// // //     entries;\r\n\r\n// // //   constructor(props) {\r\n// // //     super(props);\r\n// // //     this.state = {\r\n// // //       meals_fetched : false,\r\n// // //       suggestMealPopOver: false,\r\n// // //       mealsListed: false,\r\n// // //       mealSelected: false,\r\n// // //       IngredientsListed: false,\r\n// // //       recipes: this.meals, //[this.Garri, this.Jollof_Rice],\r\n// // //       valueAllDataLists: [],\r\n// // //       showIngredients: {\r\n// // //         hidden: true\r\n// // //       },\r\n// // //       showProducts: {\r\n// // //         hidden: true\r\n// // //       },\r\n// // //       //open: false,\r\n// // //       topNav_className: \"w3-bar w3-dark-grey w3-green topnav\"\r\n// // //     };\r\n// // //   }\r\n\r\n// // //   componentDidMount() {\r\n// // //     console.log(\"Comes in meal pages component did mount\");\r\n// // //     // var url = \"https://chopchowdev.herokuapp.com/api/get-suggested-meals\";\r\n// // //     var url = \"http://localhost:5000/api/get-suggested-meals\"\r\n\r\n// // //     fetch(url)\r\n// // //       .then(res => res.text())\r\n// // //       .then(body => {\r\n// // //         // console.log(\"should print body\");\r\n// // //         // console.log(body);\r\n// // //         var productsList = JSON.parse(body);\r\n// // //         // console.log(productsList);\r\n// // //         if(productsList && productsList.data.length !== 0){\r\n// // //           console.log(\"shows products does return\");\r\n// // //           console.log(productsList.data.length);\r\n// // //           for (var i = 0; i < productsList.data.length; i++) {\r\n// // //             this.products.push(productsList.data[i]);\r\n// // //           }\r\n// // //           console.log(this.products);\r\n// // //           // this.entries = Object.entries(this.products);\r\n// // //           // console.log(entries);\r\n// // //           this.setState({meals_fetched:true});\r\n// // //         }\r\n// // //         else{\r\n// // //           console.log(\"shows products do not return\");\r\n// // //         }\r\n// // //       })\r\n// // //       .catch(err => {\r\n// // //         console.log(err);\r\n// // //       });\r\n// // //   }\r\n\r\n// // //   meal_popups = [];\r\n\r\n// // //   showIngredient(index) {\r\n// // //     console.log(\"updating popup boolean\");\r\n// // //     this.meal_popups[index] = !this.meal_popups[index];\r\n// // //   }\r\n\r\n\r\n// // //   render() {\r\n// // //     const items = [];\r\n// // //     console.log(\"Hello RENDER\");\r\n// // //     for (const [index, value] of this.products.entries()) {\r\n// // //       console.log(\"COMES IN RENDER\");\r\n// // //       //console.log();\r\n// // //       // var base_index = 0;\r\n// // //       console.log(value);\r\n// // //       // const mealPrep = value.instructions.map(step => (\r\n// // //       //   <text key={value.label + \" - \" + step}> {step} <br></br></text>\r\n// // //       // ));\r\n// // //       // console.log(mealPrep);\r\n\r\n// // //       // const instructionsLength = value.instructions.length;\r\n// // //       //console.log(instructionsLength);\r\n\r\n// // //       // var mealIngredient = value.ingredients ;\r\n// // //       // const ingredientsList = value.ingredients.map(step => (\r\n// // //       //   <li key={step}> {step} </li>\r\n// // //       // ));\r\n// // //       this.meal_popups.push(false);\r\n// // //       // console.log(this.meal_popups);\r\n// // //       // console.log(index);\r\n// // //       items.push(\r\n// // //         <div key={value.label + value.id} className=\"col-sm-12 col-md-4 col-lg-3 mealContainer\">\r\n// // //           <div>\r\n// // //             <div style={containerStyle}>\r\n// // //               <img\r\n// // //                 src={value.imageSrc}\r\n// // //                 className=\"images\"\r\n// // //                 style={{ width: \"200px\", height: \"180px\" }}\r\n// // //                 alt={value.id}\r\n// // //                 onClick={() => {\r\n// // //                   this.meal_popups[index] = !this.meal_popups[index];\r\n// // //                   console.log(this.meal_popups);\r\n// // //                   var x = document.getElementById(value.id);\r\n// // //                   var y = document.getElementById(value.id + \"products\");\r\n// // //                   if (this.meal_popups[index]) {\r\n// // //                     x.style.display = \"block\";\r\n// // //                     y.style.display = \"block\";\r\n// // //                   } else {\r\n// // //                     x.style.display = \"none\";\r\n// // //                     y.style.display = \"none\";\r\n// // //                   }\r\n// // //                 }}\r\n// // //               ></img>\r\n// // //               {/* <img src={value.imageSrc} className=\"images\" style={{width:\"100%\"}} alt={value.id} onClick={this.showIngredient(index)}></img> */}\r\n// // //               <div>\r\n// // //                 {\" \"}\r\n// // //                 {/* <b> */}\r\n// // //                 {\" \"}\r\n// // //                 <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\r\n// // //                 {/* </b> */}\r\n// // //                 {\" \"}\r\n\r\n// // //                 {\" \"}\r\n// // //                 <span style={{ color: \"grey\" }}>View Details | {value.cookTime}</span>\r\n// // //                 <span\r\n// // //                   style={{ color: \"black\" }}\r\n// // //                   onClick={() => {\r\n// // //                     this.meal_popups[index] = !this.meal_popups[index];\r\n// // //                     console.log(this.meal_popups);\r\n// // //                     var x = document.getElementById(value.id);\r\n// // //                     var y = document.getElementById(value.id + \"products\");\r\n// // //                     if (this.meal_popups[index]) {\r\n// // //                       x.style.display = \"block\";\r\n// // //                       y.style.display = \"block\";\r\n// // //                     } else {\r\n// // //                       x.style.display = \"none\";\r\n// // //                       y.style.display = \"none\";\r\n// // //                     }\r\n// // //                   }}\r\n// // //                 >\r\n// // //                 </span>\r\n// // //                 <div id={value.id} style={{ display: \"none\" }}>\r\n// // //                   {value.intro}\r\n// // //                   {/* <MyModal\r\n// // //                     value={value}\r\n// // //                     mealPrep={mealPrep}\r\n// // //                     ingredientsList={value.ingredients}\r\n// // //                   /> */}\r\n\r\n// // //                 </div>\r\n// // //                 <br></br>\r\n// // //                 <br></br>\r\n// // //                 <br></br>\r\n// // //               </div>\r\n// // //               <div id={value.id + \"products\"} style={{ display: \"none\" }}>\r\n// // //                 {/* Meal Ingredients */}\r\n// // //                 <br></br>\r\n// // //                 {value.products}\r\n// // //                 {/* <WithScrollbar\r\n// // //                   products={value} */}\r\n// // //                 {/* // ingredients={[ */}\r\n// // //                 {/* //   { name: \"sugar\", image: \"/images/products/sugar.jpeg\" },\r\n// // //                 //   { name: \"onion\", image: \"/images/products/onion.jpg\" },\r\n// // //                 //   { name: \"tomato\", image: \"/images/products/tomato.jpg\" },\r\n// // //                 //   { name: \"water\", image: \"/images/products/water.jpeg\" },\r\n// // //                 //   { */}\r\n// // //                 {/* //     name: \"vegetable oil\",\r\n// // //                 //     image: \"/images/products/vegetable_oil.jpg\"\r\n// // //                 //   }\r\n// // //                 // ]}\r\n// // //                 // /> */}\r\n// // //                 {/* // <br /> */}\r\n// // //               </div>\r\n// // //             </div>\r\n\r\n// // //           </div>\r\n// // //         </div>\r\n// // //       );\r\n// // //     }\r\n// // //     return (\r\n// // //       <div>\r\n// // //         <div id=\"title\">\r\n// // //           <b>Suggested Meals</b>\r\n// // //         </div>\r\n// // //         <div className=\"container\">\r\n// // //           {/* <div className=\"row\"> */}\r\n// // //             {items}\r\n// // //             {/* </div> */}\r\n\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     )\r\n// // //   };\r\n// // // }\r\n\r\n// // // export default ViewSuggestedMeals;\r\n\r\n// // // const containerStyle = {\r\n// // //   //font: \"50px\",\r\n// // //   display: \"inline-block\",\r\n// // //   width: \"100%\",\r\n// // //   height: \"100%\"\r\n// // // };\r\n\r\n\r\n\r\n\r\n\r\n// // // import React, { Component } from \"react\";\r\n\r\n\r\n// // // class ViewSuggestedMeals extends Component {\r\n// // //     products = [];\r\n// // //     entries;\r\n\r\n// // //   constructor(props) {\r\n// // //     super(props);\r\n// // //     this.state = {\r\n// // //       meals_fetched : false,\r\n// // //       suggestMealPopOver: false,\r\n// // //       mealsListed: false,\r\n// // //       mealSelected: false,\r\n// // //       IngredientsListed: false,\r\n// // //       recipes: this.meals, //[this.Garri, this.Jollof_Rice],\r\n// // //       valueAllDataLists: [],\r\n// // //       showIngredients: {\r\n// // //         hidden: true\r\n// // //       },\r\n// // //       showProducts: {\r\n// // //         hidden: true\r\n// // //       },\r\n// // //       //open: false,\r\n// // //       topNav_className: \"w3-bar w3-dark-grey w3-green topnav\"\r\n// // //     };\r\n// // //   }\r\n\r\n// // //   componentDidMount() {\r\n// // //     console.log(\"Comes in meal pages component did mount\");\r\n// // //     // var url = \"https://chopchowdev.herokuapp.com/api/get-suggested-meals\";\r\n// // //     var url = \"http://localhost:5000/api/get-suggested-meals\"\r\n\r\n// // //     fetch(url).then(res => res.text()).then(body => {\r\n// // //         var productsList = JSON.parse(body);\r\n// // //         if(productsList && productsList.data.length !== 0){\r\n// // //           console.log(\"shows products does return\");\r\n// // //           console.log(productsList.data.length);\r\n\r\n// // //           for (var i = 0; i < productsList.data.length; i++) {\r\n// // //             this.products.push(productsList.data[i]);\r\n// // //           }\r\n\r\n// // //           console.log(this.products);\r\n// // //           this.setState({meals_fetched:true});\r\n// // //         }\r\n// // //         else{\r\n// // //           console.log(\"shows products do not return\");\r\n// // //         }\r\n// // //       }).catch(err => {\r\n// // //         console.log(err);\r\n// // //       });\r\n// // //   }\r\n\r\n// // //   meal_popups = [];\r\n\r\n// // //   showIngredient(index) {\r\n// // //     console.log(\"updating popup boolean\");\r\n// // //     this.meal_popups[index] = !this.meal_popups[index];\r\n// // //   }\r\n\r\n\r\n// // //   render() {\r\n// // //     const items = [];\r\n// // //     console.log(\"Hello RENDER\");\r\n\r\n// // //     for (const [index, value] of this.products.entries()) {\r\n// // //       console.log(\"COMES IN RENDER\");\r\n// // //       console.log(value);\r\n\r\n// // //       this.meal_popups.push(false);\r\n\r\n// // //       items.push(\r\n// // //         <div key={value.label + value.id} className=\"col-sm-12 col-md-4 col-lg-3 mealContainer\">\r\n// // //           <div>\r\n// // //             <div style={containerStyle}>\r\n// // //               <img\r\n// // //                 src={\"http://localhost:5000/\"+value.imageSrc}\r\n// // //                 className=\"images\"\r\n// // //                 style={{ width: \"200px\", height: \"180px\" }}\r\n// // //                 alt={value.id}\r\n// // //                 onClick={() => {\r\n// // //                   this.meal_popups[index] = !this.meal_popups[index];\r\n// // //                   console.log(this.meal_popups);\r\n// // //                   var x = document.getElementById(value.id);\r\n// // //                   var y = document.getElementById(value.id + \"products\");\r\n// // //                   if (this.meal_popups[index]) {\r\n// // //                     x.style.display = \"block\";\r\n// // //                     y.style.display = \"block\";\r\n// // //                   } else {\r\n// // //                     x.style.display = \"none\";\r\n// // //                     y.style.display = \"none\";\r\n// // //                   }\r\n// // //                 }}\r\n// // //               ></img>\r\n// // //               <div>\r\n// // //                 <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\r\n// // //                 <span style={{ color: \"grey\" }}>View Details | {value.cookTime}</span>\r\n// // //                 <span\r\n// // //                   style={{ color: \"black\" }}\r\n// // //                   onClick={() => {\r\n// // //                     this.meal_popups[index] = !this.meal_popups[index];\r\n// // //                     console.log(this.meal_popups);\r\n\r\n// // //                     var x = document.getElementById(value.id);\r\n// // //                     var y = document.getElementById(value.id + \"products\");\r\n// // //                     if (this.meal_popups[index]) {\r\n// // //                       x.style.display = \"block\";\r\n// // //                       y.style.display = \"block\";\r\n// // //                     } else {\r\n// // //                       x.style.display = \"none\";\r\n// // //                       y.style.display = \"none\";\r\n// // //                     }\r\n// // //                   }}\r\n// // //                 >\r\n// // //                 </span>\r\n// // //                 <div id={value.id} style={{ display: \"none\" }}>\r\n// // //                   {value.intro}\r\n// // //                 </div>\r\n// // //               </div>\r\n// // //               <div id={value.id + \"products\"} style={{ display: \"none\" }}>\r\n// // //                 {/* Meal Ingredients */}\r\n// // //                 {value.products}\r\n// // //               </div>\r\n// // //             </div>\r\n\r\n// // //           </div>\r\n// // //         </div>\r\n// // //       );\r\n// // //     }\r\n// // //     return (\r\n// // //       <div>\r\n// // //         <div id=\"title\">\r\n// // //           <b>Suggested Meals</b>\r\n// // //         </div>\r\n// // //         <div className=\"container\">\r\n// // //           {/* <div className=\"row\"> */}\r\n// // //             {items}\r\n// // //             {/* </div> */}\r\n\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     )\r\n// // //   };\r\n// // // }\r\n\r\n// // // export default ViewSuggestedMeals;\r\n\r\n// // // const containerStyle = {\r\n// // //   //font: \"50px\",\r\n// // //   display: \"inline-block\",\r\n// // //   width: \"100%\",\r\n// // //   height: \"100%\"\r\n// // // };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // // // import React, { Component } from \"react\";\r\n// // // // // import MyModal from \"./mealsPage/Mymodal\";\r\n// // // // // import WithScrollbar from \"./mealsPage/product_slider/WithScrollbar\";\r\n\r\n// // // // class ViewSuggestedMeals extends Component {\r\n\r\n// // // //     // Mongo\r\n// // // //     products = [];\r\n// // // //     entries;\r\n\r\n// // // //   constructor(props) {\r\n// // // //     super(props);\r\n// // // //     this.state = {\r\n// // // //       meals_fetched : false,\r\n// // // //       suggestMealPopOver: false,\r\n// // // //       mealsListed: false,\r\n// // // //       mealSelected: false,\r\n// // // //       IngredientsListed: false,\r\n// // // //       recipes: this.meals, //[this.Garri, this.Jollof_Rice],\r\n// // // //       valueAllDataLists: [],\r\n// // // //       showIngredients: {\r\n// // // //         hidden: true\r\n// // // //       },\r\n// // // //       showProducts: {\r\n// // // //         hidden: true\r\n// // // //       },\r\n// // // //       //open: false,\r\n// // // //       topNav_className: \"w3-bar w3-dark-grey w3-green topnav\"\r\n// // // //     };\r\n// // // //   }\r\n\r\n// // // //   componentDidMount() {\r\n// // // //     console.log(\"Comes in meal pages component did mount\");\r\n// // // //     // var url = \"https://chopchowdev.herokuapp.com/api/get-suggested-meals\";\r\n// // // //     var url = \"http://localhost:5000/api/get-suggested-meals\"\r\n\r\n// // // //     fetch(url)\r\n// // // //       .then(res => res.text())\r\n// // // //       .then(body => {\r\n// // // //         // console.log(\"should print body\");\r\n// // // //         // console.log(body);\r\n// // // //         var productsList = JSON.parse(body);\r\n// // // //         // console.log(productsList);\r\n// // // //         if(productsList && productsList.data.length !== 0){\r\n// // // //           console.log(\"shows products does return\");\r\n// // // //           console.log(productsList.data.length);\r\n// // // //           for (var i = 0; i < productsList.data.length; i++) {\r\n// // // //             this.products.push(productsList.data[i]);\r\n// // // //           }\r\n// // // //           console.log(this.products);\r\n// // // //           // this.entries = Object.entries(this.products);\r\n// // // //           // console.log(entries);\r\n// // // //           this.setState({meals_fetched:true});\r\n// // // //         }\r\n// // // //         else{\r\n// // // //           console.log(\"shows products do not return\");\r\n// // // //         }\r\n// // // //       })\r\n// // // //       .catch(err => {\r\n// // // //         console.log(err);\r\n// // // //       });\r\n// // // //   }\r\n\r\n// // // //   meal_popups = [];\r\n\r\n// // // //   showIngredient(index) {\r\n// // // //     console.log(\"updating popup boolean\");\r\n// // // //     this.meal_popups[index] = !this.meal_popups[index];\r\n// // // //   }\r\n\r\n\r\n// // // //   render() {\r\n// // // //     const items = [];\r\n// // // //     console.log(\"Hello RENDER\");\r\n// // // //     for (const [index, value] of this.products.entries()) {\r\n// // // //       console.log(\"COMES IN RENDER\");\r\n// // // //       //console.log();\r\n// // // //       // var base_index = 0;\r\n// // // //       console.log(value);\r\n// // // //       // const mealPrep = value.instructions.map(step => (\r\n// // // //       //   <text key={value.label + \" - \" + step}> {step} <br></br></text>\r\n// // // //       // ));\r\n// // // //       // console.log(mealPrep);\r\n\r\n// // // //       // const instructionsLength = value.instructions.length;\r\n// // // //       //console.log(instructionsLength);\r\n\r\n// // // //       // var mealIngredient = value.ingredients ;\r\n// // // //       // const ingredientsList = value.ingredients.map(step => (\r\n// // // //       //   <li key={step}> {step} </li>\r\n// // // //       // ));\r\n// // // //       this.meal_popups.push(false);\r\n// // // //       // console.log(this.meal_popups);\r\n// // // //       // console.log(index);\r\n// // // //       items.push(\r\n// // // //         <div key={value.label + value.id} className=\"col-sm-12 col-md-4 col-lg-3 mealContainer\">\r\n// // // //           <div>\r\n// // // //             <div style={containerStyle}>\r\n// // // //               <img\r\n// // // //                 src={value.imageSrc}\r\n// // // //                 className=\"images\"\r\n// // // //                 style={{ width: \"200px\", height: \"180px\" }}\r\n// // // //                 alt={value.id}\r\n// // // //                 onClick={() => {\r\n// // // //                   this.meal_popups[index] = !this.meal_popups[index];\r\n// // // //                   console.log(this.meal_popups);\r\n// // // //                   var x = document.getElementById(value.id);\r\n// // // //                   var y = document.getElementById(value.id + \"products\");\r\n// // // //                   if (this.meal_popups[index]) {\r\n// // // //                     x.style.display = \"block\";\r\n// // // //                     y.style.display = \"block\";\r\n// // // //                   } else {\r\n// // // //                     x.style.display = \"none\";\r\n// // // //                     y.style.display = \"none\";\r\n// // // //                   }\r\n// // // //                 }}\r\n// // // //               ></img>\r\n// // // //               {/* <img src={value.imageSrc} className=\"images\" style={{width:\"100%\"}} alt={value.id} onClick={this.showIngredient(index)}></img> */}\r\n// // // //               <div>\r\n// // // //                 {\" \"}\r\n// // // //                 {/* <b> */}\r\n// // // //                 {\" \"}\r\n// // // //                 <span style={{ color: \"orange\" }} >{value.label}</span> <br></br>\r\n// // // //                 {/* </b> */}\r\n// // // //                 {\" \"}\r\n\r\n// // // //                 {\" \"}\r\n// // // //                 <span style={{ color: \"grey\" }}>View Details | {value.cookTime}</span>\r\n// // // //                 <span\r\n// // // //                   style={{ color: \"black\" }}\r\n// // // //                   onClick={() => {\r\n// // // //                     this.meal_popups[index] = !this.meal_popups[index];\r\n// // // //                     console.log(this.meal_popups);\r\n// // // //                     var x = document.getElementById(value.id);\r\n// // // //                     var y = document.getElementById(value.id + \"products\");\r\n// // // //                     if (this.meal_popups[index]) {\r\n// // // //                       x.style.display = \"block\";\r\n// // // //                       y.style.display = \"block\";\r\n// // // //                     } else {\r\n// // // //                       x.style.display = \"none\";\r\n// // // //                       y.style.display = \"none\";\r\n// // // //                     }\r\n// // // //                   }}\r\n// // // //                 >\r\n// // // //                 </span>\r\n// // // //                 <div id={value.id} style={{ display: \"none\" }}>\r\n// // // //                   {value.intro}\r\n// // // //                   {/* <MyModal\r\n// // // //                     value={value}\r\n// // // //                     mealPrep={mealPrep}\r\n// // // //                     ingredientsList={value.ingredients}\r\n// // // //                   /> */}\r\n\r\n// // // //                 </div>\r\n// // // //                 <br></br>\r\n// // // //                 <br></br>\r\n// // // //                 <br></br>\r\n// // // //               </div>\r\n// // // //               <div id={value.id + \"products\"} style={{ display: \"none\" }}>\r\n// // // //                 {/* Meal Ingredients */}\r\n// // // //                 <br></br>\r\n// // // //                 {value.products}\r\n// // // //                 {/* <WithScrollbar\r\n// // // //                   products={value} */}\r\n// // // //                 {/* // ingredients={[ */}\r\n// // // //                 {/* //   { name: \"sugar\", image: \"/images/products/sugar.jpeg\" },\r\n// // // //                 //   { name: \"onion\", image: \"/images/products/onion.jpg\" },\r\n// // // //                 //   { name: \"tomato\", image: \"/images/products/tomato.jpg\" },\r\n// // // //                 //   { name: \"water\", image: \"/images/products/water.jpeg\" },\r\n// // // //                 //   { */}\r\n// // // //                 {/* //     name: \"vegetable oil\",\r\n// // // //                 //     image: \"/images/products/vegetable_oil.jpg\"\r\n// // // //                 //   }\r\n// // // //                 // ]}\r\n// // // //                 // /> */}\r\n// // // //                 {/* // <br /> */}\r\n// // // //               </div>\r\n// // // //             </div>\r\n\r\n// // // //           </div>\r\n// // // //         </div>\r\n// // // //       );\r\n// // // //     }\r\n// // // //     return (\r\n// // // //       <div>\r\n// // // //         <div id=\"title\">\r\n// // // //           <b>Suggested Meals</b>\r\n// // // //         </div>\r\n// // // //         <div className=\"container\">\r\n// // // //           {/* <div className=\"row\"> */}\r\n// // // //             {items}\r\n// // // //             {/* </div> */}\r\n\r\n// // // //         </div>\r\n// // // //       </div>\r\n// // // //     )\r\n// // // //   };\r\n// // // // }\r\n\r\n// // // // export default ViewSuggestedMeals;\r\n\r\n// // // // const containerStyle = {\r\n// // // //   //font: \"50px\",\r\n// // // //   display: \"inline-block\",\r\n// // // //   width: \"100%\",\r\n// // // //   height: \"100%\"\r\n// // // // };\r\n\r\n","import React from \"react\";\r\nimport \"./AdminPanel.scss\";\r\nimport { Container, Alert, Card, Col, Row, Button } from \"react-bootstrap\";\r\nimport img_oil from \"../../assets/images/ola_ola_palm_oil.jpg\";\r\nimport img_logo from \"../../assets/images/logo2.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//////////////////////////////////////////////////////////////////////\r\nclass AdminPanel extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      open:false\r\n    };\r\n  }\r\n//////////////////////////////////////////////////////////////////////\r\n  handleOnClickItems=(item, userRole)=>{\r\n    if (item ==\"suggest\" && userRole==\"admin\"){\r\n      return (window.location.href = \"/ViewSuggestedMeals\");\r\n    }else{\r\n      this.setState({open:true});\r\n    }\r\n  }\r\n\r\n  handleClose = () => { this.setState({open: false});};\r\n    //////////////////////////////////////////////////////////////////////\r\n  render() {\r\n    const userRole = window.localStorage.getItem(\"userRole\");\r\n    console.log(\"yyy:\", userRole);\r\n    return (\r\n      <Container className=\"admin-page\">\r\n          <Row>\r\n            <Col md={12} className=\"admin-title-region\">\r\n                  <div className=\"admin-title\"><div style={{width: \"100%\"}}>Admin Dashboard</div></div>\r\n            </Col>\r\n\r\n            <Col md={4} className=\"admin-item-panel\">\r\n                <div className=\"item-card\">\r\n                  <div className=\"admin-item-title\"><div style={{width: \"100%\"}}>INVENTORY</div></div>\r\n                  <img src={img_oil} className=\"admin-item-img\"/>\r\n                </div>\r\n            </Col> \r\n            <Col md={4} className=\"admin-item-panel\">\r\n                <div className=\"item-card\">\r\n                  <div className=\"admin-item-title\"><div style={{width: \"100%\"}}>ORDERS</div></div>\r\n                  <img src={img_oil} className=\"admin-item-img\"/>\r\n                </div>\r\n            </Col> \r\n            <Col md={4} className=\"admin-item-panel\">\r\n              <div className=\"item-card\" id=\"suggest_admin\" onClick={()=>this.handleOnClickItems(\"suggest\", userRole)}>\r\n                <div className=\"admin-item-title\"><div style={{width: \"100%\"}}>MEAL SUGGESTIONS/SUPPORT</div></div>\r\n                <img src={img_logo} className=\"admin-item-img\"/>\r\n              </div>\r\n            </Col> \r\n           </Row>\r\n           <Row className=\"admin-items-section\">                         \r\n           </Row>\r\n\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n          maxWidth = \"sm\"\r\n          fullWidth\r\n          >\r\n          <DialogTitle id=\"alert-dialog-title\">Informtation</DialogTitle>\r\n          <DialogContent>  \r\n            <DialogContentText>Only admin user can open</DialogContentText>       \r\n          </DialogContent>\r\n        </Dialog>\r\n      </Container>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default AdminPanel;","import React, { Component } from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport { Link, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport MealsPage from \"./components/mealsPage/MealsPage\";\r\nimport ProductsSection from \"./components/productsPage/ProductsPage\";\r\nimport Login from \"./components/Login\";\r\nimport GroceryPage from \"./components/GroceryPage\";\r\nimport ProductFullDetail from \"./components/ProductFullDetail/ProductFullDetail\";\r\nimport SignUp from \"./components/signup\";\r\nimport ForgotPassword from \"./components/forgotpassword\";\r\nimport ResetPassword from \"./components/resetpassword\";\r\nimport SuggestMeal from \"./components/SuggestMeal\";\r\nimport ViewSuggestedMeals from \"./components/ViewSuggestedMeals\";\r\nimport AdminPanel from \"./components/AdminPanel/AdminPanel\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateLogInStatus = this.updateLogInStatus.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n\r\n    this.state = {\r\n      suggestMealPopOver: false,\r\n      isAuthenticated: false,\r\n      customerId: null,\r\n    };\r\n  }\r\n\r\n \r\n  updateLogInStatus(customerId) {\r\n    console.log(\"updates log in status before\");\r\n    this.setState({ isAuthenticated: true });\r\n    this.setState({ customerId: customerId });\r\n\r\n    console.log(\"updates log in status after\");\r\n    console.log(\"customerID is:\" + customerId);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   console.log(\"Comes in app.js's component did mount\");\r\n  //   this.authenticateUser();\r\n  //   console.log(\"customerID is:\" + this.state.customerId);\r\n  // }\r\n\r\n  // authenticateUser() {\r\n  //   var localToken = window.localStorage.getItem(\"userToken\");\r\n  //   // api authenticate user calls authenticationVerify,isAuthenticated\r\n\r\n  //   // var url = `https://chopchowdev.herokuapp.com/api/authenticate-grocery-page`;\r\n  //   var url = `/api/authenticate-app-page`;\r\n  //   // var url = `http://localhost:5000/api/authenticate-grocery-page`\r\n  //   fetch(url, {\r\n  //     method: \"GET\",\r\n  //     credentials: \"same-origin\",\r\n  //     headers: {\r\n  //       \"Content-type\": \"application/json\",\r\n  //       Authorization: \"Bearer \" + localToken,\r\n  //     },\r\n  //   })\r\n  //     .then((res) => {\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((response) => {\r\n  //       console.log(\"api/ authenticate (app page) response:\");\r\n  //       console.log(response);\r\n\r\n  //       if (response.success && response.data) {\r\n  //         this.setState({ isAuthenticated: true });\r\n  //       } else {\r\n  //         this.setState({ isAuthenticated: false });\r\n  //       }\r\n\r\n  //       this.setState({ customerId: response.data });\r\n  //       const { customerId } = this.state;\r\n  //       console.log(\"customer id iis: \" + customerId);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"fails to authenticate app page\");\r\n  //       console.log(err);\r\n  //     });\r\n  // }\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  componentDidMount() {\r\n    console.log(\"Comes in app.js's component did mount\");\r\n    this.authenticateUser();\r\n    console.log(\"customerID is:\" + this.state.customerId);\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  authenticateUser() {\r\n    var localToken = window.localStorage.getItem(\"userToken\");\r\n    // api authenticate user calls authenticationVerify,isAuthenticated\r\n    // var url = `https://chopchowdev.herokuapp.com/api/authenticate-grocery-page`;\r\n    var url = `/api/authenticate-app-page`;\r\n    // var url = `http://localhost:5000/api/authenticate-grocery-page`\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localToken,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((response) => {\r\n        console.log(\"api/ authenticate (app page) response:\");\r\n        console.log(response);\r\n\r\n        if (response.success && response.data) {\r\n          this.setState({ isAuthenticated: true });\r\n        } else { this.setState({ isAuthenticated: false }); }\r\n\r\n        this.setState({ customerId: response.data, username: response.username });\r\n        const { customerId, username } = this.state;\r\n        console.log(\"customer id iis: \" + customerId);\r\n        console.log(\"username iis: \" + username);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"fails to authenticate app page\");\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleLogout() {\r\n    //clear cookie cache\r\n    window.localStorage.setItem(\"userToken\", null);\r\n\r\n    var url = \"/api/logout\";\r\n\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        response.json().then((res) => {\r\n          console.log(\"logout response is:\");\r\n          console.log(res);\r\n          console.log(\"should print body\");\r\n          // var bodyResponse = JSON.parse(res.body);\r\n          console.log(res.data);\r\n          if (res.data === \"success\") {\r\n            console.log(\"comes to turn off authentication state\");\r\n            this.setState({ isAuthenticated: false });\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"fails to authenticate app page\");\r\n        console.log(err);\r\n      });\r\n\r\n    this.setState({ isAuthenticated: false });\r\n    window.location.reload(false);\r\n  }\r\n\r\n  render() {\r\n    // Render your page inside\r\n    // the layout provider\r\n    const { itemTypeahead, isAuthenticated,  customerId,  username,  } = this.state;\r\n    const items = [];\r\n    var userRole = window.localStorage.getItem(\"userRole\");\r\n    var userToken = window.localStorage.getItem(\"userToken\");\r\n\r\n    return (\r\n      <div>        \r\n        <Header data = {this.state}/>    \r\n        <Switch>\r\n            <Route exact path=\"/login\"  \r\n              render={() => (\r\n                <Login updateLogInStatus={this.updateLogInStatus}/>\r\n              )}\r\n            />\r\n            <Route exact path=\"/admin\" render={(props) => <AdminPanel {...props} />} />\r\n            <Route exact path=\"/signup\" render={(props) => <SignUp {...props} />} />\r\n            <Route exact path=\"/resetpass\" render={(props) => <ResetPassword {...props} />} />\r\n            <Route exact path=\"/forgotpass\" render={(props) => <ForgotPassword {...props} />}/>\r\n            <Route exact path=\"/\" render={(props) => (\r\n                <div>\r\n                  <div id=\"title\"><b>Meals</b></div>\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">{items}</div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n\r\n            <Route path=\"/home\" render={() => (userToken!==\"null\")?<HomePage />:(<Redirect to={{pathname:\"#\"}}/>)} />\r\n            <Route path=\"/v2\" render={() =>  (userToken!==\"null\")?<MealsPage />: (<Redirect to={{pathname:\"#\"}}/>)}/>\r\n            <Route exact path=\"/grocery\"\r\n              render={() => (userToken!==\"null\")?(\r\n                <GroceryPage\r\n                  auth={userToken}\r\n                  dataTypeaheadProps={itemTypeahead}\r\n                  customerId={customerId}\r\n                />):(<Redirect to={{pathname:\"#\"}}/>)\r\n              }\r\n            />\r\n            <Route path=\"/products\" render={(props) => {\r\n              return (userToken !== \"null\")? (<ProductsSection/>):(<Redirect to={{pathname:\"/\"}}/>)\r\n            }} />\r\n            <Route exact path=\"/SuggestMeal\" render={(props) => (userToken!==\"null\")? (<SuggestMeal />):(<Redirect to={{pathname:\"/\"}}/>)}/>\r\n            <Route exact path=\"/ViewSuggestedMeals\" render={(props) => ( (userToken!==\"null\") && (userRole===\"admin\"))? <ViewSuggestedMeals/> :(<Redirect to={{pathname:\"#\"}}/>)}/>\r\n            <Route path=\"/product-detail/:customerId/:productId\" render={(props) => (userToken!==\"null\")? <ProductFullDetail/>:(<Redirect to={{pathname:\"#\"}}/>)}/>\r\n            {/* <Route path=\"/product-detail/:customerId/:productId\" component={ProductFullDetail} /> */}\r\n          </Switch>    \r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import App2 from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter} from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter >\r\n        <App/>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo2.8340d35f.png\";"],"sourceRoot":""}