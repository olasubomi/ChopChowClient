{"ast":null,"code":"import React from'react';import'./style.css';import PageTitle from'../CommonComponents/PageTitle';import{Spinner}from'react-bootstrap';import{Container,Alert,Card,Col,Row,Form,Button,Modal}from'react-bootstrap';import{Typeahead}from\"react-bootstrap-typeahead\";import{Link}from'react-router-dom';// import { fileLoader } from 'ejs';\nexport default class GroceryPage extends React.Component{constructor(...args){super(...args);this.products=[];this.productNamesForTypeahead=new Map();this.state={newcustomerId:'',customerList:null,Authentication:false,customerId:null,email:'',password:'',messageErr:false,messageSuccess:false,messageErrCreate:false,showAlert:false,messageAlert:'',variant:'',productID:'',deletedItemId:null,showGroceryList:true,selectedProduct:null,idsItems:null,deletedItemsId:null,lasIdListState:null,valueProductName:'',valueProductImage:'',valueProductPrice:'',valueProductSize:'',valuePricePerOunce:'',errormsg:''};this.handleChange=({target:{value,name}})=>this.setState({[name]:value});this.handleLoginClick=()=>{const _this$state=this.state,email=_this$state.email,password=_this$state.password;if(email&&password){fetch('/api/login',{method:'POST',credentials:'include',headers:{'Content-type':'application/json'},body:JSON.stringify({email,password})}).then(response=>{if(response.status===400||response.status===404){this.setState({messageErr:'Bad Request , Check username or password ... !!'});}else if(response.status===401){this.setState({messageErr:'you are UnAuthorized'});}else if(response.status>=500){this.setState({messageErr:'Sorry , Internal Server ERROR'});}else{this.setState({messageErr:''});this.setState({isAuthenticated:true});this.setState({messageSuccess:'login sucessfully '});return window.location.href='/grocery';}}).catch(()=>{this.setState({messageAlert:'Internal Server Error while logging in',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});}else{this.setState({messageErr:'Please enter all fields'});}};this.handleClose=e=>{if(e)e.stopPropagation();this.setState({showGroceryList:false});};this.handleShowDeleteItem=productID=>{this.setState({deletedItemId:productID});const _this$state2=this.state,customerId=_this$state2.customerId,deletedItemId=_this$state2.deletedItemId;var url=\"https://chopchowdev.herokuapp.com//api/remove-item/\".concat(productID,\"/\").concat(customerId);// var url = `http://localhost:5000/api/remove-item/${productID}/${customerId}`\nfetch(url,{method:'DELETE',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{this.setState({messageAlert:'deleted successfully',showAlert:true,variant:'success'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},3500));this.setState(prevState=>{// delete item on client side\nconst newValueData=prevState.customerList.filter(// do we need catch sttmnt for filter\nitem=>item.id!==deletedItemId);return{customerList:newValueData};});}).catch(()=>{this.setState({messageAlert:'Internal Server Error while deleting item',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});};this.handleDeleteList=()=>{const customerId=this.state.customerId;// fetch(`/api/get-ids-items/${customerId}`, {\n//   method: 'GET',\n//   credentials: 'same-origin',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n// })\n//   .then(res => res.json())\n//   .then(response => {\n//     if (response) {\n//       let arrResItemDelete = response.data\n//       arrResItemDelete.map((resDelete) =>\n//         this.setState({ deletedItemsId: resDelete })\n//       )\n//     }\n//   })\n//   .catch(() => {\n//     this.setState({\n//       messageAlert: 'Internal Server Error while getting item id',\n//       showAlert: true,\n//       variant: 'danger'\n//     },\n//       () =>\n//         setTimeout(() => {\n//           this.setState({ messageAlert: '', showAlert: false })\n//         }, 8000)\n//     )\n//   })\nfetch(\"/api/remove-list/\".concat(customerId),{method:'DELETE',headers:{'Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{this.setState({messageAlert:'deleted successfully',showAlert:true,variant:'success'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},3500));this.setState({customerList:[]});}).catch(()=>{this.setState({messageAlert:'Internal Server Error while deleting list',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});};this.handleShowGroceryList=()=>{this.setState({showGroceryList:true});};this.handleClickTypeahead=selected=>{this.setState({selectedProduct:selected});// var arrayOfProductNames = Array.from(this.productNamesForTypeahead.keys());\nconsole.log(\"selected is:\");console.log(selected[0]);console.log(typeof selected[0]);console.log(\"arrayo fproduct names is:\");console.log(this.productNamesForTypeahead);this.productNamesForTypeahead.get(selected);// var index = arrayOfProductNames.findIndex((el) => el === selected[0]);\nvar productID=this.productNamesForTypeahead.get(selected[0]);// var productID = index+1;\nconsole.log(\"productID is: \"+productID);console.log();if(isNaN(productID)){var url=\"https://chopchowdev.herokuapp.com/api/add-data-typeahead-for-customer/\".concat(productID,\"/\").concat(this.state.customerId);// var url = `http://localhost:5000/api/add-data-typeahead-for-customer/${productID}/${this.state.customerId}`\nfetch(url,{method:'POST',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(response=>{// .then(res => {\n// return res.json();\n// })\nif(response){// const { customerList } = this.state;\nconsole.log(\"Comes in handleClickTypeahead's then on client side\");// this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n}});}};}componentDidMount(){// checks if user is already logged in in app.\nconst auth=this.props.auth;this.setState({Authentication:auth});// if (!auth || auth === undefined){}\n// api grocery calls authenticationVerify,isAuthenticated\nfetch('/api/grocery',{method:'GET',headers:{'Content-type':'application/json'}}).then(res=>{return res.json();}).then(response=>{console.log(\"api/grocery response:\");console.log(response);if(response.success&&response.data){this.setState({Authentication:true});}else{this.setState({Authenticated:false});}this.setState({customerId:response.data});const customerId=this.state.customerId;// get Lists, from customer_lists of customerID.\nfetch(\"/api/getCustomerGroceryList/\".concat(customerId),{method:'GET',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{if(response){this.setState({customerList:response.data});}}).catch(()=>{this.setState({messageAlert:'Internal Server Error while getting users grocery list...',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});});// fetch('/api/get-customers-lists', {\n//   method: 'GET',\n//   credentials: 'same-origin',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   }\n// })\n//   .then(res => {\n//     return res.json()\n//   })\n//   .then(response => {\n//     console.log(\"get list ids\");\n//     console.log(response);\n//     let arrResponse = response.data;\n//     console.log(arrResponse);\n//     const lasIdList = arrResponse[arrResponse.length - 1]\n//     console.log(lasIdList);\n//     this.setState({ lasIdListState: lasIdList + 1 })\n//   })\nfetch('/api/get-ids-customers',{method:'GET',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{let arrResponse=response.data;const lasIdCustomer=arrResponse[arrResponse.length-1];this.setState({newcustomerId:lasIdCustomer+1});}).catch(()=>{this.setState({messageAlert:'Internal Server Error while getting customer ids',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});var url=\"https://chopchowdev.herokuapp.com/api/get-all-products\";// var url = \"http://localhost:5000/api/get-all-products\"\nfetch(url).then(res=>res.text()).then(body=>{// console.log(\"should print body\");\n// console.log(body);\nvar productsList=JSON.parse(body);console.log(\"PRINTING ALL PRODUCTS LIST\");// console.log(productsList);\nif(productsList&&productsList.data.length!==0){console.log(\"returns GET ALL PRODUCTS \");console.log(productsList.data.length);for(var i=0;i<productsList.data.length;i++){this.products.push(productsList.data[i]);this.productNamesForTypeahead.set(productsList.data[i].product_name,productsList.data[i].id);}console.log(this.products);// this.entries = Object.entries(this.products);\n// console.log(entries);\n}else{console.log(\"get all products function does not return\");}}).catch(err=>{console.log(err);});}render(){const _this$state3=this.state,email=_this$state3.email,password=_this$state3.password,showAlert=_this$state3.showAlert,variant=_this$state3.variant,messageAlert=_this$state3.messageAlert,customerList=_this$state3.customerList,messageErr=_this$state3.messageErr,messageSuccess=_this$state3.messageSuccess;// const { showGroceryList, valueProductName, valueProductImage, valueProductSize, valueProductPrice, valuePricePerOunce, lasIdListState, messageErrCreate } = this.state;\nconst typeaheadProducts=this.products.typeaheadProducts;return(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Typeahead// multiple\n,{options:Array.from(this.productNamesForTypeahead.keys()),placeholder:\"Find Meals (and Ingredients) here..\",id:\"typeahead\",onChange:selected=>{// console.log(selected);\nthis.handleClickTypeahead(selected);}// filterBy={['product_name']}\n}),/*#__PURE__*/React.createElement(Alert,{show:showAlert,key:1,variant:variant},messageAlert),this.state.messageVisible?/*#__PURE__*/React.createElement(\"div\",null,\"you can not add in this item because it is already in customers grocery list\"):null,this.state.Authentication?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PageTitle,{title:\" Your Grocery List\"}),/*#__PURE__*/React.createElement(Alert,{show:showAlert,key:1,variant:variant},messageAlert),/*#__PURE__*/React.createElement(Container,{className:\"page__container\"},customerList&&customerList.length!==0?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Button,{className:\"yourlist__buttonDeleteList\",variant:\"danger\",onClick:e=>{e.stopPropagation();this.handleDeleteList();}},\"Delete All Items\"),typeaheadProducts?/*#__PURE__*/React.createElement(React.Fragment,null,typeaheadProducts.map(ingredient_item_grocery_search=>{return(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{xs:12,md:12,lg:12,key:ingredient_item_grocery_search.id},/*#__PURE__*/React.createElement(\"img\",{src:\"/images/products/\".concat(ingredient_item_grocery_search.product_image),className:\"dataTypeahead__card-img\",alt:\"product_img\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"dataTypeahead__card-div\"},/*#__PURE__*/React.createElement(Card.Header,{className:\"dataTypeahead__grocery_item_card-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dataTypeahead__header__name-product\"},\"Product Name: \",ingredient_item_grocery_search.product_name)),/*#__PURE__*/React.createElement(Card.Text,{className:\"dataTypeahead__grocery_item_card-text\"},\"Product Price :  \",ingredient_item_grocery_search&&ingredient_item_grocery_search.product_price),/*#__PURE__*/React.createElement(Card.Text,{className:\"dataTypeahead__grocery_item_card-text\"},\"Product Size : \",ingredient_item_grocery_search.sizes)),/*#__PURE__*/React.createElement(\"div\",{className:\"dataTypeahead__buttonAdd\"},/*#__PURE__*/React.createElement(Button,{onClick:e=>{e.stopPropagation();this.handleAddItemToCart(ingredient_item_grocery_search.id);}},\" Add To Cart\"),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\"dataTypeahead__buttonDelete\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-remove\",onClick:e=>{e.stopPropagation();this.handleShowDeleteItem(ingredient_item_grocery_search.id);}})))));})):null,customerList?customerList.map(customer_grocery_product_item=>{let productID=customer_grocery_product_item.id;return(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{xs:12,md:12,lg:12,key:customer_grocery_product_item.id},customer_grocery_product_item.product_image.startsWith('http://')||customer_grocery_product_item.product_image.startsWith('data')?/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(customer_grocery_product_item.product_image),alt:\"product_img \",className:\"card-img\"}):/*#__PURE__*/React.createElement(\"img\",{src:\"/images/products/\".concat(customer_grocery_product_item.product_image),alt:\"product_img \",className:\"card-img\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"grocery_item_card-div\"},/*#__PURE__*/React.createElement(Card.Header,{className:\"grocery_item_card-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header__name-product\"},\" Product Name : \",customer_grocery_product_item.product_name)),/*#__PURE__*/React.createElement(Card.Text,{className:\"grocery_item_card-text\"},\"Product Price :  \",customer_grocery_product_item&&customer_grocery_product_item.product_price),/*#__PURE__*/React.createElement(Card.Text,{className:\"grocery_item_card-text\"},\"Product Size : \",customer_grocery_product_item.sizes)),/*#__PURE__*/React.createElement(\"div\",{className:\"yourlist__buttonAdd\"},/*#__PURE__*/React.createElement(Button,{onClick:e=>{e.stopPropagation();this.handleAddItemToCart(productID);}},\" Add To Cart\"),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\"yourlist__buttonDelete\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-remove\",onClick:e=>{e.stopPropagation();this.handleShowDeleteItem(customer_grocery_product_item.id);}})))));}):/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",variant:\"info\"})):/*#__PURE__*/React.createElement(React.Fragment,null),\";\")):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,\"Log in as guest or user to load your grocery list\"),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Modal,{show:true,onHide:this.handleClose,className:\"modal loginformmm\",backdrop:\"static\"},/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Form,{className:\"login__form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login__form-div-title\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"login__form-title\"},\"Log in to View Grocery\")),/*#__PURE__*/React.createElement(\"div\",{className:\"vl\"},/*#__PURE__*/React.createElement(\"span\",{className:\"vl-innertext\"},\"or\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"button\",{className:\"fb btn\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-facebook fa-fw\"}),\" Login with Facebook\"),/*#__PURE__*/React.createElement(\"button\",{className:\"google btn\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-google fa-fw\"}),\" Login with Google+\")),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{className:\"login__form__label\"},\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",name:\"email\",value:email,placeholder:\"Enter your email\",onChange:this.handleChange,className:\"login__form__input\"})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{className:\"login__form__label\"},\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",name:\"password\",value:password,placeholder:\"Enter your password\",onChange:this.handleChange,className:\"login__form__input\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"msg-success\"},messageSuccess),/*#__PURE__*/React.createElement(\"p\",{className:\"msg-err\"},messageErr),/*#__PURE__*/React.createElement(Link,{to:\"/forgotpass\"},/*#__PURE__*/React.createElement(\"span\",{className:\"link-forgot-password\"},\"Forget Password  ?\")),/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"login__form-btn\",onClick:this.handleLoginClick},\"Log in\"),/*#__PURE__*/React.createElement(Form.Text,{className:\"login__form__text-muted\"},\"Don\\u2019t have an account? \",'',/*#__PURE__*/React.createElement(Link,{className:\"link-signup-word\",to:\"/signup\"},\"Sign Up\"),/*#__PURE__*/React.createElement(\"br\",null),\"or\",/*#__PURE__*/React.createElement(Link,{className:\"link-guest-word\",to:\"/v2\"},\"continue as guest\")))))))));/* Move Create List option to suggest meal */ /* <Container>\n              {showGroceryList ? (\n                <Modal show={showGroceryList} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                  <Modal.Body className=\"modal-create__body\">\n                    <Form.Group>\n                      <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductName\"\n                        value={valueProductName}\n                        placeholder=\"Enter name list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductImage\"\n                        value={valueProductImage}\n                        placeholder=\"Enter image list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valueProductPrice\"\n                        value={valueProductPrice}\n                        placeholder=\"Enter price list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductSize\"\n                        value={valueProductSize}\n                        placeholder=\"Enter size list\"\n                        onChange={this.handleChange}\n\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valuePricePerOunce\"\n                        value={valuePricePerOunce}\n                        placeholder=\"Enter Price Per Ounce list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {messageErrCreate ? (\n                      <p className=\"create__msg-err\">{messageErrCreate}</p>\n                    ) : null}\n                  </Modal.Body>\n                  <Modal.Footer className=\"confirm__success\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={this.handleClose}\n                    >\n                      Close\n                    </Button>\n                    <Button\n                      className='create-button'\n                      variant=\"success\"\n                      onClick={this.handleCreateList}\n                    >\n                      create\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              ) : <div>No list to show</div>}\n                    </Container> \n                  \n                    handleCreateList = () => {\n    const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n    // if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n    //   if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n\n    const { customerId } = this.state;\n    const productID = lasIdListState;\n    fetch(`/api/create-list/${productID}/${customerId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        valueProductName,\n        valueProductImage,\n        valueProductPrice,\n        valueProductSize,\n        valuePricePerOunce,\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response) {\n          const { customerList } = this.state;\n          this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n        }\n      })\n\n    //     } else {\n    //     this.setState({ messageErrCreate: 'should be the image start word  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n    //   }\n    // } else {\n    //   this.setState({ messageErrCreate: 'should be sure fill all fields ' })\n    // }\n\n  }\n*/}}","map":{"version":3,"sources":["/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/GroceryPage/index.jsx"],"names":["React","PageTitle","Spinner","Container","Alert","Card","Col","Row","Form","Button","Modal","Typeahead","Link","GroceryPage","Component","products","productNamesForTypeahead","Map","state","newcustomerId","customerList","Authentication","customerId","email","password","messageErr","messageSuccess","messageErrCreate","showAlert","messageAlert","variant","productID","deletedItemId","showGroceryList","selectedProduct","idsItems","deletedItemsId","lasIdListState","valueProductName","valueProductImage","valueProductPrice","valueProductSize","valuePricePerOunce","errormsg","handleChange","target","value","name","setState","handleLoginClick","fetch","method","credentials","headers","body","JSON","stringify","then","response","status","isAuthenticated","window","location","href","catch","setTimeout","handleClose","e","stopPropagation","handleShowDeleteItem","url","Accept","res","json","prevState","newValueData","filter","item","id","handleDeleteList","handleShowGroceryList","handleClickTypeahead","selected","console","log","get","isNaN","componentDidMount","auth","props","success","data","Authenticated","arrResponse","lasIdCustomer","length","text","productsList","parse","i","push","set","product_name","err","render","typeaheadProducts","Array","from","keys","messageVisible","map","ingredient_item_grocery_search","product_image","product_price","sizes","handleAddItemToCart","customer_grocery_product_item","startsWith"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,+BAAtB,CACA,OAASC,OAAT,KAAwB,iBAAxB,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,IAA3B,CAAiCC,GAAjC,CAAsCC,GAAtC,CAA2CC,IAA3C,CAAiDC,MAAjD,CAAyDC,KAAzD,KAAsE,iBAAtE,CACA,OAASC,SAAT,KAA0B,2BAA1B,CAEA,OAASC,IAAT,KAAqB,kBAArB,CACA;AACA,cAAe,MAAMC,CAAAA,WAAN,QAA0Bb,CAAAA,KAAK,CAACc,SAAU,0CAEvDC,QAFuD,CAE5C,EAF4C,MAGvDC,wBAHuD,CAG5B,GAAIC,CAAAA,GAAJ,EAH4B,MAKvDC,KALuD,CAK/C,CACNC,aAAa,CAAE,EADT,CAENC,YAAY,CAAE,IAFR,CAGNC,cAAc,CAAE,KAHV,CAINC,UAAU,CAAE,IAJN,CAKNC,KAAK,CAAE,EALD,CAMNC,QAAQ,CAAE,EANJ,CAQNC,UAAU,CAAE,KARN,CASNC,cAAc,CAAE,KATV,CAUNC,gBAAgB,CAAE,KAVZ,CAWNC,SAAS,CAAE,KAXL,CAYNC,YAAY,CAAE,EAZR,CAcNC,OAAO,CAAE,EAdH,CAeNC,SAAS,CAAE,EAfL,CAgBNC,aAAa,CAAE,IAhBT,CAiBNC,eAAe,CAAE,IAjBX,CAkBNC,eAAe,CAAE,IAlBX,CAmBNC,QAAQ,CAAE,IAnBJ,CAoBNC,cAAc,CAAE,IApBV,CAqBNC,cAAc,CAAE,IArBV,CAsBNC,gBAAgB,CAAE,EAtBZ,CAuBNC,iBAAiB,CAAE,EAvBb,CAwBNC,iBAAiB,CAAE,EAxBb,CAyBNC,gBAAgB,CAAE,EAzBZ,CA0BNC,kBAAkB,CAAE,EA1Bd,CA2BNC,QAAQ,CAAE,EA3BJ,CAL+C,MAmCvDC,YAnCuD,CAmCxC,CAAC,CAAEC,MAAM,CAAE,CAAEC,KAAF,CAASC,IAAT,CAAV,CAAD,GACb,KAAKC,QAAL,CAAc,CAAE,CAACD,IAAD,EAAQD,KAAV,CAAd,CApCqD,MAiLvDG,gBAjLuD,CAiLpC,IAAM,mBACK,KAAK/B,KADV,CACfK,KADe,aACfA,KADe,CACRC,QADQ,aACRA,QADQ,CAEvB,GAAID,KAAK,EAAIC,QAAb,CAAuB,CACrB0B,KAAK,CAAC,YAAD,CAAe,CAClBC,MAAM,CAAE,MADU,CAElBC,WAAW,CAAE,SAFK,CAGlBC,OAAO,CAAE,CACP,eAAgB,kBADT,CAHS,CAMlBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBjC,KADmB,CAEnBC,QAFmB,CAAf,CANY,CAAf,CAAL,CAWGiC,IAXH,CAWQC,QAAQ,EAAI,CAChB,GAAIA,QAAQ,CAACC,MAAT,GAAoB,GAApB,EAA2BD,QAAQ,CAACC,MAAT,GAAoB,GAAnD,CAAwD,CACtD,KAAKX,QAAL,CAAc,CAAEvB,UAAU,CAAE,iDAAd,CAAd,EACD,CAFD,IAEO,IAAIiC,QAAQ,CAACC,MAAT,GAAoB,GAAxB,CAA6B,CAClC,KAAKX,QAAL,CAAc,CAAEvB,UAAU,CAAE,sBAAd,CAAd,EACD,CAFM,IAEA,IAAIiC,QAAQ,CAACC,MAAT,EAAmB,GAAvB,CAA4B,CACjC,KAAKX,QAAL,CAAc,CAAEvB,UAAU,CAAE,+BAAd,CAAd,EACD,CAFM,IAEA,CACL,KAAKuB,QAAL,CAAc,CAAEvB,UAAU,CAAE,EAAd,CAAd,EACA,KAAKuB,QAAL,CAAc,CAAEY,eAAe,CAAE,IAAnB,CAAd,EACA,KAAKZ,QAAL,CAAc,CAAEtB,cAAc,CAAE,oBAAlB,CAAd,EACA,MAAOmC,CAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,UAA9B,CACD,CACF,CAxBH,EAyBGC,KAzBH,CAyBS,IAAM,CACX,KAAKhB,QAAL,CAAc,CACZnB,YAAY,CAAE,wCADF,CAEZD,SAAS,CAAE,IAFC,CAGZE,OAAO,CAAE,QAHG,CAAd,CAKE,IACEmC,UAAU,CAAC,IAAM,CACf,KAAKjB,QAAL,CAAc,CAAEnB,YAAY,CAAE,EAAhB,CAAoBD,SAAS,CAAE,KAA/B,CAAd,EACD,CAFS,CAEP,IAFO,CANd,EAUD,CApCH,EAqCD,CAtCD,IAsCO,CACL,KAAKoB,QAAL,CAAc,CAAEvB,UAAU,CAAE,yBAAd,CAAd,EACD,CACF,CA5NsD,MA8NvDyC,WA9NuD,CA8NzCC,CAAC,EAAI,CACjB,GAAIA,CAAJ,CAAOA,CAAC,CAACC,eAAF,GACP,KAAKpB,QAAL,CAAc,CAAEf,eAAe,CAAE,KAAnB,CAAd,EACD,CAjOsD,MAmOvDoC,oBAnOuD,CAmO/BtC,SAAD,EAAe,CACpC,KAAKiB,QAAL,CAAc,CAAEhB,aAAa,CAAED,SAAjB,CAAd,EADoC,mBAEE,KAAKb,KAFP,CAE5BI,UAF4B,cAE5BA,UAF4B,CAEhBU,aAFgB,cAEhBA,aAFgB,CAGpC,GAAIsC,CAAAA,GAAG,8DAAyDvC,SAAzD,aAAsET,UAAtE,CAAP,CAEA;AAEA4B,KAAK,CAACoB,GAAD,CAAM,CACTnB,MAAM,CAAE,QADC,CAETE,OAAO,CAAE,CACPkB,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAFA,CAAN,CAAL,CAQGd,IARH,CAQQe,GAAG,EAAI,CACX,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CAED,CAXH,EAYGhB,IAZH,CAYQC,QAAQ,EAAI,CAChB,KAAKV,QAAL,CAAc,CACZnB,YAAY,CAAE,sBADF,CAEZD,SAAS,CAAE,IAFC,CAGZE,OAAO,CAAE,SAHG,CAAd,CAKE,IACEmC,UAAU,CAAC,IAAM,CACf,KAAKjB,QAAL,CAAc,CAAEnB,YAAY,CAAE,EAAhB,CAAoBD,SAAS,CAAE,KAA/B,CAAd,EACD,CAFS,CAEP,IAFO,CANd,EAUA,KAAKoB,QAAL,CAAc0B,SAAS,EAAI,CACzB;AACA,KAAMC,CAAAA,YAAY,CAAGD,SAAS,CAACtD,YAAV,CAAuBwD,MAAvB,CACnB;AACAC,IAAI,EAAIA,IAAI,CAACC,EAAL,GAAY9C,aAFD,CAArB,CAIA,MAAO,CAAEZ,YAAY,CAAEuD,YAAhB,CAAP,CACD,CAPD,EASD,CAhCH,EAiCGX,KAjCH,CAiCS,IAAM,CACX,KAAKhB,QAAL,CAAc,CACZnB,YAAY,CAAE,2CADF,CAEZD,SAAS,CAAE,IAFC,CAGZE,OAAO,CAAE,QAHG,CAAd,CAKE,IACEmC,UAAU,CAAC,IAAM,CACf,KAAKjB,QAAL,CAAc,CAAEnB,YAAY,CAAE,EAAhB,CAAoBD,SAAS,CAAE,KAA/B,CAAd,EACD,CAFS,CAEP,IAFO,CANd,EAUD,CA5CH,EA6CD,CAvRsD,MAyRvDmD,gBAzRuD,CAyRpC,IAAM,MACfzD,CAAAA,UADe,CACA,KAAKJ,KADL,CACfI,UADe,CAEvB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA4B,KAAK,4BAAqB5B,UAArB,EAAmC,CACtC6B,MAAM,CAAE,QAD8B,CAEtCE,OAAO,CAAE,CACP,eAAgB,kBADT,CAF6B,CAAnC,CAAL,CAOGI,IAPH,CAOQe,GAAG,EAAI,CACX,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACD,CATH,EAUGhB,IAVH,CAUQC,QAAQ,EAAI,CAChB,KAAKV,QAAL,CAAc,CACZnB,YAAY,CAAE,sBADF,CAEZD,SAAS,CAAE,IAFC,CAGZE,OAAO,CAAE,SAHG,CAAd,CAKE,IACEmC,UAAU,CAAC,IAAM,CACf,KAAKjB,QAAL,CAAc,CAAEnB,YAAY,CAAE,EAAhB,CAAoBD,SAAS,CAAE,KAA/B,CAAd,EACD,CAFS,CAEP,IAFO,CANd,EAWA,KAAKoB,QAAL,CAAc,CAAE5B,YAAY,CAAE,EAAhB,CAAd,EACD,CAvBH,EAwBG4C,KAxBH,CAwBS,IAAM,CACX,KAAKhB,QAAL,CAAc,CACZnB,YAAY,CAAE,2CADF,CAEZD,SAAS,CAAE,IAFC,CAGZE,OAAO,CAAE,QAHG,CAAd,CAKE,IACEmC,UAAU,CAAC,IAAM,CACf,KAAKjB,QAAL,CAAc,CAAEnB,YAAY,CAAE,EAAhB,CAAoBD,SAAS,CAAE,KAA/B,CAAd,EACD,CAFS,CAEP,IAFO,CANd,EAUD,CAnCH,EAoCD,CA7VsD,MA+VvDoD,qBA/VuD,CA+V/B,IAAM,CAC5B,KAAKhC,QAAL,CAAc,CAAEf,eAAe,CAAE,IAAnB,CAAd,EACD,CAjWsD,MAmWvDgD,oBAnWuD,CAmW/BC,QAAD,EAAc,CACnC,KAAKlC,QAAL,CAAc,CAAEd,eAAe,CAAEgD,QAAnB,CAAd,EACA;AAGAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAAC,CAAD,CAApB,EACAC,OAAO,CAACC,GAAR,CAAY,MAAQF,CAAAA,QAAQ,CAAC,CAAD,CAA5B,EACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACAD,OAAO,CAACC,GAAR,CAAY,KAAKpE,wBAAjB,EAEA,KAAKA,wBAAL,CAA8BqE,GAA9B,CAAkCH,QAAlC,EAGA;AACA,GAAInD,CAAAA,SAAS,CAAG,KAAKf,wBAAL,CAA8BqE,GAA9B,CAAkCH,QAAQ,CAAC,CAAD,CAA1C,CAAhB,CACA;AACAC,OAAO,CAACC,GAAR,CAAY,iBAAmBrD,SAA/B,EACAoD,OAAO,CAACC,GAAR,GACA,GAAIE,KAAK,CAACvD,SAAD,CAAT,CAAsB,CACpB,GAAIuC,CAAAA,GAAG,iFAA4EvC,SAA5E,aAAyF,KAAKb,KAAL,CAAWI,UAApG,CAAP,CACA;AAEA4B,KAAK,CAACoB,GAAD,CAAM,CACTnB,MAAM,CAAE,MADC,CAETE,OAAO,CAAE,CACPkB,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAFA,CAAN,CAAL,CAOGd,IAPH,CAOQC,QAAQ,EAAI,CAChB;AACA;AACA;AACA,GAAIA,QAAJ,CAAc,CACZ;AACAyB,OAAO,CAACC,GAAR,CAAY,qDAAZ,EACA;AACD,CACF,CAhBH,EAiBD,CAEF,CA7YsD,EAsCvDG,iBAAiB,EAAG,CAClB;AADkB,KAEVC,CAAAA,IAFU,CAED,KAAKC,KAFJ,CAEVD,IAFU,CAGlB,KAAKxC,QAAL,CAAc,CAAE3B,cAAc,CAAEmE,IAAlB,CAAd,EACA;AAEA;AACAtC,KAAK,CAAC,cAAD,CAAiB,CACpBC,MAAM,CAAE,KADY,CAEpBE,OAAO,CAAE,CACP,eAAgB,kBADT,CAFW,CAAjB,CAAL,CAMGI,IANH,CAMQe,GAAG,EAAI,CACX,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACD,CARH,EASGhB,IATH,CASQC,QAAQ,EAAI,CAChByB,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACAD,OAAO,CAACC,GAAR,CAAY1B,QAAZ,EACA,GAAIA,QAAQ,CAACgC,OAAT,EAAoBhC,QAAQ,CAACiC,IAAjC,CAAuC,CACrC,KAAK3C,QAAL,CAAc,CAAE3B,cAAc,CAAE,IAAlB,CAAd,EACD,CAFD,IAEO,CACL,KAAK2B,QAAL,CAAc,CAAE4C,aAAa,CAAE,KAAjB,CAAd,EACD,CAED,KAAK5C,QAAL,CAAc,CAAE1B,UAAU,CAAEoC,QAAQ,CAACiC,IAAvB,CAAd,EATgB,KAURrE,CAAAA,UAVQ,CAUO,KAAKJ,KAVZ,CAURI,UAVQ,CAWhB;AACA4B,KAAK,uCAAgC5B,UAAhC,EAA8C,CACjD6B,MAAM,CAAE,KADyC,CAEjDC,WAAW,CAAE,aAFoC,CAGjDC,OAAO,CAAE,CACP,eAAgB,kBADT,CAHwC,CAA9C,CAAL,CAQGI,IARH,CAQQe,GAAG,EAAI,CACX,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACD,CAVH,EAWGhB,IAXH,CAWQC,QAAQ,EAAI,CAChB,GAAIA,QAAJ,CAAc,CACZ,KAAKV,QAAL,CAAc,CAAE5B,YAAY,CAAEsC,QAAQ,CAACiC,IAAzB,CAAd,EACD,CACF,CAfH,EAgBG3B,KAhBH,CAgBS,IAAM,CACX,KAAKhB,QAAL,CAAc,CACZnB,YAAY,CAAE,2DADF,CAEZD,SAAS,CAAE,IAFC,CAGZE,OAAO,CAAE,QAHG,CAAd,CAKE,IACEmC,UAAU,CAAC,IAAM,CACf,KAAKjB,QAAL,CAAc,CAAEnB,YAAY,CAAE,EAAhB,CAAoBD,SAAS,CAAE,KAA/B,CAAd,EACD,CAFS,CAEP,IAFO,CANd,EAUD,CA3BH,EA4BD,CAjDH,EAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEAsB,KAAK,CAAC,wBAAD,CAA2B,CAC9BC,MAAM,CAAE,KADsB,CAE9BC,WAAW,CAAE,aAFiB,CAG9BC,OAAO,CAAE,CACP,eAAgB,kBADT,CAHqB,CAA3B,CAAL,CAOGI,IAPH,CAOQe,GAAG,EAAI,CACX,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACD,CATH,EAUGhB,IAVH,CAUQC,QAAQ,EAAI,CAChB,GAAImC,CAAAA,WAAW,CAAGnC,QAAQ,CAACiC,IAA3B,CACA,KAAMG,CAAAA,aAAa,CAAGD,WAAW,CAACA,WAAW,CAACE,MAAZ,CAAqB,CAAtB,CAAjC,CACA,KAAK/C,QAAL,CAAc,CAAE7B,aAAa,CAAE2E,aAAa,CAAG,CAAjC,CAAd,EACD,CAdH,EAeG9B,KAfH,CAeS,IAAM,CACX,KAAKhB,QAAL,CAAc,CACZnB,YAAY,CAAE,kDADF,CAEZD,SAAS,CAAE,IAFC,CAGZE,OAAO,CAAE,QAHG,CAAd,CAKE,IACEmC,UAAU,CAAC,IAAM,CACf,KAAKjB,QAAL,CAAc,CAAEnB,YAAY,CAAE,EAAhB,CAAoBD,SAAS,CAAE,KAA/B,CAAd,EACD,CAFS,CAEP,IAFO,CANd,EAUD,CA1BH,EA4BA,GAAI0C,CAAAA,GAAG,CAAG,wDAAV,CACA;AAEApB,KAAK,CAACoB,GAAD,CAAL,CACGb,IADH,CACQe,GAAG,EAAIA,GAAG,CAACwB,IAAJ,EADf,EAEGvC,IAFH,CAEQH,IAAI,EAAI,CACZ;AACA;AACA,GAAI2C,CAAAA,YAAY,CAAG1C,IAAI,CAAC2C,KAAL,CAAW5C,IAAX,CAAnB,CACA6B,OAAO,CAACC,GAAR,CAAY,4BAAZ,EACA;AACA,GAAIa,YAAY,EAAIA,YAAY,CAACN,IAAb,CAAkBI,MAAlB,GAA6B,CAAjD,CAAoD,CAClDZ,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACAD,OAAO,CAACC,GAAR,CAAYa,YAAY,CAACN,IAAb,CAAkBI,MAA9B,EACA,IAAK,GAAII,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,YAAY,CAACN,IAAb,CAAkBI,MAAtC,CAA8CI,CAAC,EAA/C,CAAmD,CACjD,KAAKpF,QAAL,CAAcqF,IAAd,CAAmBH,YAAY,CAACN,IAAb,CAAkBQ,CAAlB,CAAnB,EACA,KAAKnF,wBAAL,CAA8BqF,GAA9B,CAAkCJ,YAAY,CAACN,IAAb,CAAkBQ,CAAlB,EAAqBG,YAAvD,CAAqEL,YAAY,CAACN,IAAb,CAAkBQ,CAAlB,EAAqBrB,EAA1F,EACD,CACDK,OAAO,CAACC,GAAR,CAAY,KAAKrE,QAAjB,EACA;AACA;AACD,CAVD,IAWK,CACHoE,OAAO,CAACC,GAAR,CAAY,2CAAZ,EACD,CACF,CAtBH,EAuBGpB,KAvBH,CAuBSuC,GAAG,EAAI,CACZpB,OAAO,CAACC,GAAR,CAAYmB,GAAZ,EACD,CAzBH,EA2BD,CAgODC,MAAM,EAAG,oBACiG,KAAKtF,KADtG,CACCK,KADD,cACCA,KADD,CACQC,QADR,cACQA,QADR,CACkBI,SADlB,cACkBA,SADlB,CAC6BE,OAD7B,cAC6BA,OAD7B,CACsCD,YADtC,cACsCA,YADtC,CACoDT,YADpD,cACoDA,YADpD,CACkEK,UADlE,cACkEA,UADlE,CAC8EC,cAD9E,cAC8EA,cAD9E,CAEP;AAFO,KAGC+E,CAAAA,iBAHD,CAGuB,KAAK1F,QAH5B,CAGC0F,iBAHD,CAKP,oBACE,qDACE,oBAAC,SACC;AADF,EAEE,OAAO,CAAEC,KAAK,CAACC,IAAN,CAAW,KAAK3F,wBAAL,CAA8B4F,IAA9B,EAAX,CAFX,CAGE,WAAW,CAAC,qCAHd,CAIE,EAAE,CAAC,WAJL,CAKE,QAAQ,CAAG1B,QAAD,EAAc,CACtB;AACA,KAAKD,oBAAL,CAA0BC,QAA1B,EACD,CACH;AATA,EADF,cAaE,oBAAC,KAAD,EAAO,IAAI,CAAEtD,SAAb,CAAwB,GAAG,CAAE,CAA7B,CAAgC,OAAO,CAAEE,OAAzC,EACGD,YADH,CAbF,CAiBG,KAAKX,KAAL,CAAW2F,cAAX,cACC,8GADD,CAEG,IAnBN,CAoBG,KAAK3F,KAAL,CAAWG,cAAX,cACC,qDACE,oBAAC,SAAD,EAAW,KAAK,CAAC,oBAAjB,EADF,cAGE,oBAAC,KAAD,EAAO,IAAI,CAAEO,SAAb,CAAwB,GAAG,CAAE,CAA7B,CAAgC,OAAO,CAAEE,OAAzC,EACGD,YADH,CAHF,cASE,oBAAC,SAAD,EAAW,SAAS,CAAC,iBAArB,EAEGT,YAAY,EAAIA,YAAY,CAAC2E,MAAb,GAAwB,CAAxC,cACC,oBAAC,GAAD,mBACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,4BAAlB,CACE,OAAO,CAAC,QADV,CAEE,OAAO,CAAE5B,CAAC,EAAI,CACZA,CAAC,CAACC,eAAF,GACA,KAAKW,gBAAL,GACD,CALH,qBADF,CAaG0B,iBAAiB,cAChB,wCAEGA,iBAAiB,CAACK,GAAlB,CAAsBC,8BAA8B,EAAI,CACvD,oBAAO,qDACL,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,CAAqB,EAAE,CAAE,EAAzB,CAA6B,GAAG,CAAEA,8BAA8B,CAACjC,EAAjE,eACE,2BAAK,GAAG,4BAAsBiC,8BAA8B,CAACC,aAArD,CAAR,CAA8E,SAAS,CAAC,yBAAxF,CAAkH,GAAG,CAAC,aAAtH,EADF,cAEE,2BAAK,SAAS,CAAC,yBAAf,eACE,oBAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,yCAAvB,eACE,2BAAK,SAAS,CAAC,qCAAf,mBAAoED,8BAA8B,CAACT,YAAnG,CADF,CADF,cAIE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,uCAArB,sBACoBS,8BAA8B,EAAIA,8BAA8B,CAACE,aADrF,CAJF,cAOE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,uCAArB,oBACkBF,8BAA8B,CAACG,KADjD,CAPF,CAFF,cAaE,2BAAK,SAAS,CAAC,0BAAf,eAA0C,oBAAC,MAAD,EAAQ,OAAO,CAAE/C,CAAC,EAAI,CAC9DA,CAAC,CAACC,eAAF,GACA,KAAK+C,mBAAL,CAAyBJ,8BAA8B,CAACjC,EAAxD,EACD,CAHyC,iBAA1C,KAbF,cAkBE,2BAAK,SAAS,CAAC,6BAAf,eAA6C,yBAAG,KAAK,CAAC,cAAT,CAAwB,OAAO,CAAEX,CAAC,EAAI,CACjFA,CAAC,CAACC,eAAF,GACA,KAAKC,oBAAL,CAA0B0C,8BAA8B,CAACjC,EAAzD,EAED,CAJ4C,EAA7C,CAlBF,CADK,CAAP,EA0BD,CA3BA,CAFH,CADgB,CAgCd,IA7CN,CAgDG1D,YAAY,CACXA,YAAY,CAAC0F,GAAb,CAAkBM,6BAAD,EAAmC,CAClD,GAAIrF,CAAAA,SAAS,CAAGqF,6BAA6B,CAACtC,EAA9C,CACA,oBAAO,qDACL,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,EAAjB,CAAqB,EAAE,CAAE,EAAzB,CAA6B,GAAG,CAAEsC,6BAA6B,CAACtC,EAAhE,EACGsC,6BAA6B,CAACJ,aAA9B,CAA4CK,UAA5C,CAAuD,SAAvD,GAAqED,6BAA6B,CAACJ,aAA9B,CAA4CK,UAA5C,CAAuD,MAAvD,CAArE,cACC,2BAAK,GAAG,WAAKD,6BAA6B,CAACJ,aAAnC,CAAR,CAA4D,GAAG,CAAC,cAAhE,CAA+E,SAAS,CAAC,UAAzF,EADD,cAGG,2BAAK,GAAG,4BAAsBI,6BAA6B,CAACJ,aAApD,CAAR,CAA6E,GAAG,CAAC,cAAjF,CAAgG,SAAS,CAAC,UAA1G,EAJN,cAME,2BAAK,SAAS,CAAC,uBAAf,eACE,oBAAC,IAAD,CAAM,MAAN,EAAa,SAAS,CAAC,0BAAvB,eACE,2BAAK,SAAS,CAAC,sBAAf,qBAAuDI,6BAA6B,CAACd,YAArF,CADF,CADF,cAIE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,wBAArB,sBACoBc,6BAA6B,EAAIA,6BAA6B,CAACH,aADnF,CAJF,cAOE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,wBAArB,oBACkBG,6BAA6B,CAACF,KADhD,CAPF,CANF,cAiBE,2BAAK,SAAS,CAAC,qBAAf,eAAqC,oBAAC,MAAD,EAAQ,OAAO,CAAE/C,CAAC,EAAI,CACzDA,CAAC,CAACC,eAAF,GACA,KAAK+C,mBAAL,CAAyBpF,SAAzB,EACD,CAHoC,iBAArC,KAjBF,cAqBE,2BAAK,SAAS,CAAC,wBAAf,eAAwC,yBAAG,SAAS,CAAC,cAAb,CAA4B,OAAO,CAAEoC,CAAC,EAAI,CAChFA,CAAC,CAACC,eAAF,GACA,KAAKC,oBAAL,CAA0B+C,6BAA6B,CAACtC,EAAxD,EACD,CAHuC,EAAxC,CArBF,CADK,CAAP,EA4BD,CA9BD,CADW,cAgCT,oBAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,OAAO,CAAC,MAApC,EAhFN,CADD,cAoFG,wCAtFN,KATF,CADD,cAqGG,qDAEE,mFAFF,cAKE,oBAAC,SAAD,mBACE,oBAAC,KAAD,EAAO,IAAI,CAAE,IAAb,CAAmB,MAAM,CAAE,KAAKZ,WAAhC,CAA6C,SAAS,CAAC,mBAAvD,CAA2E,QAAQ,CAAC,QAApF,eACE,oBAAC,KAAD,CAAO,IAAP,mBACE,oBAAC,IAAD,EAAM,SAAS,CAAC,aAAhB,eACE,2BAAK,SAAS,CAAC,uBAAf,eACE,0BAAI,SAAS,CAAC,mBAAd,2BADF,CADF,cAIE,2BAAK,SAAS,CAAC,IAAf,eACE,4BAAM,SAAS,CAAC,cAAhB,OADF,CAJF,cAOE,2BAAK,SAAS,CAAC,KAAf,eACE,8BAAQ,SAAS,CAAC,QAAlB,eACE,yBAAG,SAAS,CAAC,sBAAb,EADF,wBADF,cAIE,8BAAQ,SAAS,CAAC,YAAlB,eAA+B,yBAAG,SAAS,CAAC,oBAAb,EAA/B,uBAJF,CAPF,cAgBE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,oBAAtB,UADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAE3C,KAHT,CAIE,WAAW,CAAC,kBAJd,CAKE,QAAQ,CAAE,KAAKqB,YALjB,CAME,SAAS,CAAC,oBANZ,EAFF,CAhBF,cA2BE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,oBAAtB,aADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEpB,QAHT,CAIE,WAAW,CAAC,qBAJd,CAKE,QAAQ,CAAE,KAAKoB,YALjB,CAME,SAAS,CAAC,oBANZ,EAFF,CA3BF,cAuCE,yBAAG,SAAS,CAAC,aAAb,EAA4BlB,cAA5B,CAvCF,cAwCE,yBAAG,SAAS,CAAC,SAAb,EAAwBD,UAAxB,CAxCF,cAyCE,oBAAC,IAAD,EAAM,EAAE,CAAC,aAAT,eACE,4BAAM,SAAS,CAAC,sBAAhB,uBADF,CAzCF,cA6CE,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,iBAFZ,CAGE,OAAO,CAAE,KAAKwB,gBAHhB,WA7CF,cAoDE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,yBAArB,iCAC0B,EAD1B,cAEE,oBAAC,IAAD,EAAM,SAAS,CAAC,kBAAhB,CAAmC,EAAE,CAAC,SAAtC,YAFF,cAKE,8BALF,mBAOG,oBAAC,IAAD,EAAM,SAAS,CAAC,iBAAhB,CAAkC,EAAE,CAAC,KAArC,sBAPH,CApDF,CADF,CADF,CADF,CALF,CAzHN,CADF,EA0MA,6CA/MO,CAgNP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6HD,CA5tBsD","sourcesContent":["\nimport React from 'react';\nimport './style.css';\nimport PageTitle from '../CommonComponents/PageTitle'\nimport { Spinner } from 'react-bootstrap'\nimport { Container, Alert, Card, Col, Row, Form, Button, Modal } from 'react-bootstrap'\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport { Link } from 'react-router-dom';\n// import { fileLoader } from 'ejs';\nexport default class GroceryPage extends React.Component {\n  // Mongo\n  products = [];\n  productNamesForTypeahead = new Map();\n\n  state = {\n    newcustomerId: '',\n    customerList: null,\n    Authentication: false,\n    customerId: null,\n    email: '',\n    password: '',\n\n    messageErr: false,\n    messageSuccess: false,\n    messageErrCreate: false,\n    showAlert: false,\n    messageAlert: '',\n\n    variant: '',\n    productID: '',\n    deletedItemId: null,\n    showGroceryList: true,\n    selectedProduct: null,\n    idsItems: null,\n    deletedItemsId: null,\n    lasIdListState: null,\n    valueProductName: '',\n    valueProductImage: '',\n    valueProductPrice: '',\n    valueProductSize: '',\n    valuePricePerOunce: '',\n    errormsg: '',\n  }\n\n  handleChange = ({ target: { value, name } }) =>\n    this.setState({ [name]: value });\n\n  componentDidMount() {\n    // checks if user is already logged in in app.\n    const { auth } = this.props;\n    this.setState({ Authentication: auth })\n    // if (!auth || auth === undefined){}\n\n    // api grocery calls authenticationVerify,isAuthenticated\n    fetch('/api/grocery', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        console.log(\"api/grocery response:\")\n        console.log(response);\n        if (response.success && response.data) {\n          this.setState({ Authentication: true });\n        } else {\n          this.setState({ Authenticated: false })\n        }\n\n        this.setState({ customerId: response.data })\n        const { customerId } = this.state;\n        // get Lists, from customer_lists of customerID.\n        fetch(`/api/getCustomerGroceryList/${customerId}`, {\n          method: 'GET',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n\n        })\n          .then(res => {\n            return res.json()\n          })\n          .then(response => {\n            if (response) {\n              this.setState({ customerList: response.data })\n            }\n          })\n          .catch(() => {\n            this.setState({\n              messageAlert: 'Internal Server Error while getting users grocery list...',\n              showAlert: true,\n              variant: 'danger'\n            },\n              () =>\n                setTimeout(() => {\n                  this.setState({ messageAlert: '', showAlert: false })\n                }, 8000)\n            )\n          })\n      })\n\n    // fetch('/api/get-customers-lists', {\n    //   method: 'GET',\n    //   credentials: 'same-origin',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   }\n    // })\n    //   .then(res => {\n    //     return res.json()\n    //   })\n    //   .then(response => {\n    //     console.log(\"get list ids\");\n    //     console.log(response);\n    //     let arrResponse = response.data;\n    //     console.log(arrResponse);\n    //     const lasIdList = arrResponse[arrResponse.length - 1]\n    //     console.log(lasIdList);\n\n    //     this.setState({ lasIdListState: lasIdList + 1 })\n    //   })\n\n    fetch('/api/get-ids-customers', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        let arrResponse = response.data;\n        const lasIdCustomer = arrResponse[arrResponse.length - 1]\n        this.setState({ newcustomerId: lasIdCustomer + 1 })\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while getting customer ids',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n\n    var url = \"https://chopchowdev.herokuapp.com/api/get-all-products\";\n    // var url = \"http://localhost:5000/api/get-all-products\"\n\n    fetch(url)\n      .then(res => res.text())\n      .then(body => {\n        // console.log(\"should print body\");\n        // console.log(body);\n        var productsList = JSON.parse(body);\n        console.log(\"PRINTING ALL PRODUCTS LIST\")\n        // console.log(productsList);\n        if (productsList && productsList.data.length !== 0) {\n          console.log(\"returns GET ALL PRODUCTS \");\n          console.log(productsList.data.length);\n          for (var i = 0; i < productsList.data.length; i++) {\n            this.products.push(productsList.data[i]);\n            this.productNamesForTypeahead.set(productsList.data[i].product_name, productsList.data[i].id)\n          }\n          console.log(this.products);\n          // this.entries = Object.entries(this.products);\n          // console.log(entries);\n        }\n        else {\n          console.log(\"get all products function does not return\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n  }\n\n  handleLoginClick = () => {\n    const { email, password } = this.state;\n    if (email && password) {\n      fetch('/api/login', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      })\n        .then(response => {\n          if (response.status === 400 || response.status === 404) {\n            this.setState({ messageErr: 'Bad Request , Check username or password ... !!' });\n          } else if (response.status === 401) {\n            this.setState({ messageErr: 'you are UnAuthorized' });\n          } else if (response.status >= 500) {\n            this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n          } else {\n            this.setState({ messageErr: '' });\n            this.setState({ isAuthenticated: true })\n            this.setState({ messageSuccess: 'login sucessfully ' });\n            return window.location.href = '/grocery'\n          }\n        })\n        .catch(() => {\n          this.setState({\n            messageAlert: 'Internal Server Error while logging in',\n            showAlert: true,\n            variant: 'danger'\n          },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: '', showAlert: false })\n              }, 8000)\n          )\n        })\n    } else {\n      this.setState({ messageErr: 'Please enter all fields' });\n    }\n  };\n\n  handleClose = e => {\n    if (e) e.stopPropagation();\n    this.setState({ showGroceryList: false });\n  };\n\n  handleShowDeleteItem = (productID) => {\n    this.setState({ deletedItemId: productID });\n    const { customerId, deletedItemId } = this.state;\n    var url = `https://chopchowdev.herokuapp.com//api/remove-item/${productID}/${customerId}`\n\n    // var url = `http://localhost:5000/api/remove-item/${productID}/${customerId}`\n\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => {\n        return res.json()\n\n      })\n      .then(response => {\n        this.setState({\n          messageAlert: 'deleted successfully',\n          showAlert: true,\n          variant: 'success'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 3500)\n        )\n        this.setState(prevState => {\n          // delete item on client side\n          const newValueData = prevState.customerList.filter(\n            // do we need catch sttmnt for filter\n            item => item.id !== deletedItemId\n          );\n          return { customerList: newValueData };\n        });\n\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while deleting item',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n  }\n\n  handleDeleteList = () => {\n    const { customerId } = this.state;\n    // fetch(`/api/get-ids-items/${customerId}`, {\n    //   method: 'GET',\n    //   credentials: 'same-origin',\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n\n    // })\n    //   .then(res => res.json())\n    //   .then(response => {\n    //     if (response) {\n    //       let arrResItemDelete = response.data\n    //       arrResItemDelete.map((resDelete) =>\n    //         this.setState({ deletedItemsId: resDelete })\n    //       )\n    //     }\n    //   })\n    //   .catch(() => {\n    //     this.setState({\n    //       messageAlert: 'Internal Server Error while getting item id',\n    //       showAlert: true,\n    //       variant: 'danger'\n    //     },\n    //       () =>\n    //         setTimeout(() => {\n    //           this.setState({ messageAlert: '', showAlert: false })\n    //         }, 8000)\n    //     )\n    //   })\n\n    fetch(`/api/remove-list/${customerId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        this.setState({\n          messageAlert: 'deleted successfully',\n          showAlert: true,\n          variant: 'success'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 3500)\n        )\n\n        this.setState({ customerList: [] });\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while deleting list',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n  }\n\n  handleShowGroceryList = () => {\n    this.setState({ showGroceryList: true })\n  }\n\n  handleClickTypeahead = (selected) => {\n    this.setState({ selectedProduct: selected });\n    // var arrayOfProductNames = Array.from(this.productNamesForTypeahead.keys());\n\n\n    console.log(\"selected is:\");\n    console.log(selected[0]);\n    console.log(typeof (selected[0]));\n    console.log(\"arrayo fproduct names is:\");\n    console.log(this.productNamesForTypeahead);\n\n    this.productNamesForTypeahead.get(selected)\n\n\n    // var index = arrayOfProductNames.findIndex((el) => el === selected[0]);\n    var productID = this.productNamesForTypeahead.get(selected[0]);\n    // var productID = index+1;\n    console.log(\"productID is: \" + productID);\n    console.log()\n    if (isNaN(productID)) {\n      var url = `https://chopchowdev.herokuapp.com/api/add-data-typeahead-for-customer/${productID}/${this.state.customerId}`\n      // var url = `http://localhost:5000/api/add-data-typeahead-for-customer/${productID}/${this.state.customerId}`\n\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(response => {\n          // .then(res => {\n          // return res.json();\n          // })\n          if (response) {\n            // const { customerList } = this.state;\n            console.log(\"Comes in handleClickTypeahead's then on client side\");\n            // this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n          }\n        })\n    }\n\n  }\n\n  render() {\n    const { email, password, showAlert, variant, messageAlert, customerList, messageErr, messageSuccess } = this.state;\n    // const { showGroceryList, valueProductName, valueProductImage, valueProductSize, valueProductPrice, valuePricePerOunce, lasIdListState, messageErrCreate } = this.state;\n    const { typeaheadProducts } = this.products;\n\n    return (\n      <>\n        <Typeahead\n          // multiple\n          options={Array.from(this.productNamesForTypeahead.keys())}\n          placeholder=\"Find Meals (and Ingredients) here..\"\n          id=\"typeahead\"\n          onChange={(selected) => {\n            // console.log(selected);\n            this.handleClickTypeahead(selected)\n          }}\n        // filterBy={['product_name']}\n        />\n\n        <Alert show={showAlert} key={1} variant={variant}>\n          {messageAlert}\n        </Alert>\n\n        {this.state.messageVisible ? (\n          <div>you can not add in this item because it is already in customers grocery list</div>\n        ) : null}\n        {this.state.Authentication ? (\n          <>\n            <PageTitle title=\" Your Grocery List\" />\n            {/* Display alert if there is any issue loading grocery page */}\n            <Alert show={showAlert} key={1} variant={variant}>\n              {messageAlert}\n            </Alert>\n\n\n            {/* display grocery page typeahead functionalities */}\n            <Container className=\"page__container\">\n\n              {customerList && customerList.length !== 0 ? (\n                <Row>\n                  <Button className='yourlist__buttonDeleteList'\n                    variant=\"danger\"\n                    onClick={e => {\n                      e.stopPropagation();\n                      this.handleDeleteList();\n                    }}\n                  >\n                    Delete All Items\n                  </Button>\n\n\n                  {/* display searchbar typeahead items if they exist */}\n                  {typeaheadProducts ? (\n                    <>\n                      {/* create all search bar options from typeahead's display on grocery list ? */}\n                      {typeaheadProducts.map(ingredient_item_grocery_search => {\n                        return <>\n                          <Col xs={12} md={12} lg={12} key={ingredient_item_grocery_search.id}>\n                            <img src={`/images/products/${ingredient_item_grocery_search.product_image}`} className=\"dataTypeahead__card-img\" alt=\"product_img\" />\n                            <div className=\"dataTypeahead__card-div\">\n                              <Card.Header className=\"dataTypeahead__grocery_item_card-header\">\n                                <div className=\"dataTypeahead__header__name-product\">Product Name: {ingredient_item_grocery_search.product_name}</div>\n                              </Card.Header>\n                              <Card.Text className=\"dataTypeahead__grocery_item_card-text\">\n                                Product Price :  {ingredient_item_grocery_search && ingredient_item_grocery_search.product_price}\n                              </Card.Text>\n                              <Card.Text className=\"dataTypeahead__grocery_item_card-text\">\n                                Product Size : {ingredient_item_grocery_search.sizes}\n                              </Card.Text>\n                            </div>\n                            <div className=\"dataTypeahead__buttonAdd\"><Button onClick={e => {\n                              e.stopPropagation();\n                              this.handleAddItemToCart(ingredient_item_grocery_search.id);\n                            }}> Add To Cart</Button> </div>\n\n                            <div className=\"dataTypeahead__buttonDelete\"><i class=\"fa fa-remove\" onClick={e => {\n                              e.stopPropagation();\n                              this.handleShowDeleteItem(ingredient_item_grocery_search.id);\n\n                            }} ></i></div>\n                          </Col>\n                        </>\n                      })}\n                    </>\n                  ) : null}\n\n                  {/* display grocery list, for any authenticated customer */}\n                  {customerList ? (\n                    customerList.map((customer_grocery_product_item) => {\n                      let productID = customer_grocery_product_item.id;\n                      return <>\n                        <Col xs={12} md={12} lg={12} key={customer_grocery_product_item.id}>\n                          {customer_grocery_product_item.product_image.startsWith('http://') || customer_grocery_product_item.product_image.startsWith('data') ? (\n                            <img src={`${customer_grocery_product_item.product_image}`} alt=\"product_img \" className=\"card-img\" />\n                          ) : (\n                              <img src={`/images/products/${customer_grocery_product_item.product_image}`} alt=\"product_img \" className=\"card-img\" />\n                            )}\n                          <div className=\"grocery_item_card-div\">\n                            <Card.Header className=\"grocery_item_card-header\">\n                              <div className=\"header__name-product\"> Product Name : {customer_grocery_product_item.product_name}</div>\n                            </Card.Header>\n                            <Card.Text className=\"grocery_item_card-text\">\n                              Product Price :  {customer_grocery_product_item && customer_grocery_product_item.product_price}\n                            </Card.Text>\n                            <Card.Text className=\"grocery_item_card-text\">\n                              Product Size : {customer_grocery_product_item.sizes}\n                            </Card.Text>\n                          </div>\n                          <div className=\"yourlist__buttonAdd\"><Button onClick={e => {\n                            e.stopPropagation();\n                            this.handleAddItemToCart(productID);\n                          }}> Add To Cart</Button> </div>\n                          <div className=\"yourlist__buttonDelete\"><i className=\"fa fa-remove\" onClick={e => {\n                            e.stopPropagation();\n                            this.handleShowDeleteItem(customer_grocery_product_item.id);\n                          }} ></i></div>\n                        </Col>\n                      </>\n                    })\n                  ) : <Spinner animation=\"border\" variant=\"info\" />}\n                </Row>\n              ) : (\n                  <></>\n                )};\n             </Container>\n          </>\n        ) : (\n            <>\n              {/* display create list option if customer has no grocery list */}\n              <div>Log in as guest or user to load your grocery list</div>\n              {/* <Button className=\"yourlist__button-create\" onClick={this.handleShowGroceryList}>create list</Button> */}\n              {/* display log in pop-up on grocery page. (May be best to separate this into its own fileLoader, to be used on any page) */}\n              <Container>\n                <Modal show={true} onHide={this.handleClose} className=\"modal loginformmm\" backdrop=\"static\">\n                  <Modal.Body>\n                    <Form className=\"login__form\">\n                      <div className=\"login__form-div-title\">\n                        <h2 className=\"login__form-title\">Log in to View Grocery</h2>\n                      </div>\n                      <div className=\"vl\">\n                        <span className=\"vl-innertext\">or</span>\n                      </div>\n                      <div className=\"col\">\n                        <button className=\"fb btn\">\n                          <i className=\"fa fa-facebook fa-fw\"></i> Login with Facebook\n                        </button>\n                        <button className=\"google btn\"><i className=\"fa fa-google fa-fw\">\n                        </i> Login with Google+\n                        </button>\n                      </div>\n\n                      <Form.Group>\n                        <Form.Label className=\"login__form__label\">Email</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"email\"\n                          value={email}\n                          placeholder=\"Enter your email\"\n                          onChange={this.handleChange}\n                          className='login__form__input'\n                        />\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Label className=\"login__form__label\">Password</Form.Label>\n                        <Form.Control\n                          type=\"password\"\n                          name=\"password\"\n                          value={password}\n                          placeholder=\"Enter your password\"\n                          onChange={this.handleChange}\n                          className='login__form__input'\n\n                        />\n                      </Form.Group>\n                      <p className=\"msg-success\">{messageSuccess}</p>\n                      <p className=\"msg-err\">{messageErr}</p>\n                      <Link to=\"/forgotpass\">\n                        <span className=\"link-forgot-password\">Forget Password  ?</span>\n                      </Link>\n\n                      <Button\n                        type=\"button\"\n                        className=\"login__form-btn\"\n                        onClick={this.handleLoginClick}\n                      >\n                        Log in\n                          </Button>\n                      <Form.Text className=\"login__form__text-muted\">\n                        Don’t have an account? {''}\n                        <Link className=\"link-signup-word\" to=\"/signup\">\n                          Sign Up\n                        </Link>\n                        <br />\n                        or\n                         <Link className=\"link-guest-word\" to=\"/v2\">\n                          continue as guest\n                        </Link>\n                      </Form.Text>\n                    </Form>\n                  </Modal.Body>\n                </Modal>\n              </Container>\n            </>\n          )}\n      </>\n    )\n\n    /* Move Create List option to suggest meal */\n    /* <Container>\n              {showGroceryList ? (\n                <Modal show={showGroceryList} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                  <Modal.Body className=\"modal-create__body\">\n                    <Form.Group>\n                      <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductName\"\n                        value={valueProductName}\n                        placeholder=\"Enter name list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductImage\"\n                        value={valueProductImage}\n                        placeholder=\"Enter image list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valueProductPrice\"\n                        value={valueProductPrice}\n                        placeholder=\"Enter price list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductSize\"\n                        value={valueProductSize}\n                        placeholder=\"Enter size list\"\n                        onChange={this.handleChange}\n\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valuePricePerOunce\"\n                        value={valuePricePerOunce}\n                        placeholder=\"Enter Price Per Ounce list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {messageErrCreate ? (\n                      <p className=\"create__msg-err\">{messageErrCreate}</p>\n                    ) : null}\n                  </Modal.Body>\n                  <Modal.Footer className=\"confirm__success\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={this.handleClose}\n                    >\n                      Close\n                    </Button>\n                    <Button\n                      className='create-button'\n                      variant=\"success\"\n                      onClick={this.handleCreateList}\n                    >\n                      create\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              ) : <div>No list to show</div>}\n                    </Container> \n                  \n                    handleCreateList = () => {\n    const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n    // if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n    //   if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n\n    const { customerId } = this.state;\n    const productID = lasIdListState;\n    fetch(`/api/create-list/${productID}/${customerId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        valueProductName,\n        valueProductImage,\n        valueProductPrice,\n        valueProductSize,\n        valuePricePerOunce,\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response) {\n          const { customerList } = this.state;\n          this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n        }\n      })\n\n    //     } else {\n    //     this.setState({ messageErrCreate: 'should be the image start word  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n    //   }\n    // } else {\n    //   this.setState({ messageErrCreate: 'should be sure fill all fields ' })\n    // }\n\n  }\n*/}\n}"]},"metadata":{},"sourceType":"module"}