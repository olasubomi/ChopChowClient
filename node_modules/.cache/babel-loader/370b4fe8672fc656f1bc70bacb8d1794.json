{"ast":null,"code":"var _jsxFileName = \"/Users/olasubomiawokoya/Documents/projects/ChopChowClient/src/components/resetpassword/index.jsx\";\nimport React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\nimport { setTimeout } from 'timers';\nexport default class ResetPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password1: '',\n      password2: '',\n      messageErr: false,\n      messageSuccess: false,\n      showModal: true\n    };\n\n    this.handleChange = e => {\n      let name = e.currentTarget.name;\n      let value = e.currentTarget.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClose = delay => {\n      setTimeout(() => {\n        this.props.history.push('/grocery');\n      }, delay || 0);\n    };\n\n    this.formSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.password1 || this.state.password2) {\n        this.submitForm();\n      } else {\n        this.setState({\n          messageErr: 'Please enter correct data.'\n        });\n      }\n    };\n\n    this.submitForm = () => {\n      let token = this.props.location.search.replace('?', '').split('=')[1];\n      let formData = Object.assign({}, this.state, {\n        token\n      });\n      fetch('/api/resetpass', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(response => {\n        if (response.status === 400 || response.status === 404) {\n          this.setState({\n            messageErr: 'Bad Request , Check username or email ... !!'\n          });\n        } else if (response.status === 401) {\n          this.setState({\n            messageErr: 'you are UnAuthorized'\n          });\n        } else if (response.status >= 500) {\n          this.setState({\n            messageErr: 'Sorry , Internal Server ERROR'\n          });\n        } else {\n          this.setState({\n            messageErr: '',\n            isAuthenticated: true,\n            messageSuccess: 'Please check your inbox for more details! '\n          });\n          this.handleClose(5000);\n        }\n      });\n    };\n  }\n\n  render() {\n    let isItReset = this.props.location.search.replace('?', '').split('=');\n\n    if (isItReset.length > 1) {\n      isItReset = isItReset[1];\n      return (\n        /*#__PURE__*/\n        React.createElement(Modal, {\n          show: this.state.showModal,\n          onHide: this.handleClose,\n          className: \"modal resetpassword\",\n          backdrop: \"static\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 5\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Modal.Header, {\n          closeButton: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Modal.Title, {\n          style: {\n            width: '100%',\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, \"Reset Password\"))),\n        /*#__PURE__*/\n        React.createElement(Modal.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Container, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Row, {\n          className: \"justify-content-md-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Col, {\n          xs: true,\n          lg: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Form, {\n          className: \"\",\n          onSubmit: this.formSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Form.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Form.Control, {\n          type: \"hidden\",\n          name: \"token\",\n          value: isItReset,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Form.Control, {\n          type: \"password\",\n          name: \"password1\",\n          value: this.state.password1,\n          placeholder: \"New Password\",\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Form.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Form.Control, {\n          type: \"password\",\n          name: \"password2\",\n          value: this.state.password2,\n          placeholder: \"Retype Password\",\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Form.Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        })),\n        /*#__PURE__*/\n        React.createElement(\"p\", {\n          className: \"msg-success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 23\n          }\n        }, this.state.messageSuccess),\n        /*#__PURE__*/\n        React.createElement(\"p\", {\n          className: \"msg-err\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }\n        }, this.state.messageErr),\n        /*#__PURE__*/\n        React.createElement(ButtonToolbar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 23\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Button, {\n          variant: \"secondary\",\n          type: \"submit\",\n          className: \"login__form-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }\n        }, \"Reset\"))))))))\n      );\n    } else {\n      return (\n        /*#__PURE__*/\n        React.createElement(Modal, {\n          show: this.state.showModal,\n          onHide: this.handleClose,\n          className: \"modal resetpassword\",\n          backdrop: \"static\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 5\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Modal.Header, {\n          closeButton: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Modal.Title, {\n          style: {\n            width: '100%',\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }\n        }, \"Something wrong with yout token please try again.\"))))\n      );\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/olasubomiawokoya/Documents/projects/ChopChowClient/src/components/resetpassword/index.jsx"],"names":["React","Form","Button","Container","Modal","Row","Col","ButtonToolbar","setTimeout","ResetPassword","Component","state","password1","password2","messageErr","messageSuccess","showModal","handleChange","e","name","currentTarget","value","setState","handleClose","delay","props","history","push","formSubmit","preventDefault","submitForm","token","location","search","replace","split","formData","Object","assign","fetch","method","credentials","headers","body","JSON","stringify","then","response","status","isAuthenticated","render","isItReset","length","width","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\nimport { setTimeout } from 'timers';\n\nexport default class ResetPassword extends React.Component {\n  state = {\n    password1: '',\n    password2: '',\n    messageErr: false,\n    messageSuccess: false,\n    showModal: true,\n  };\n\n\n  handleChange = (e) => {\n    let name = e.currentTarget.name;\n    let value = e.currentTarget.value;\n    this.setState({ [name]: value });\n  }\n\n\n  handleClose = (delay) => {\n    setTimeout(() => {\n      this.props.history.push('/grocery');\n    }, delay || 0);\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    if((this.state.password1 || this.state.password2)) {\n      this.submitForm();\n    } else {\n      this.setState({ messageErr: 'Please enter correct data.' });\n    }\n  };\n\n  submitForm = () => {\n    let token = this.props.location.search.replace('?', '').split('=')[1];\n    let formData = Object.assign({}, this.state, {token})\n    fetch('/api/resetpass', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    }).then(response => {\n        if (response.status === 400 || response.status === 404) {\n          this.setState({ messageErr: 'Bad Request , Check username or email ... !!' });\n        } else if (response.status === 401) {\n          this.setState({ messageErr: 'you are UnAuthorized' });\n        } else if (response.status >= 500) {\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n        } else {\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'Please check your inbox for more details! ' });\n          this.handleClose(5000);\n        }\n      })\n  };\n\n  render() {\n\nlet isItReset = this.props.location.search.replace('?', '').split('=');\nif(isItReset.length > 1) {\n  isItReset = isItReset[1];\n  return (\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n          <div>Reset Password</div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg>\n              <Form className=\"\" onSubmit={this.formSubmit}>\n              <Form.Group>\n              <Form.Control type=\"hidden\" name=\"token\" value={isItReset} />\n                <Form.Control\n                          type=\"password\"\n                          name=\"password1\"\n                          value={this.state.password1}\n                          placeholder=\"New Password\"\n                          onChange={this.handleChange}\n                        />\n                    \n                      </Form.Group>\n                      <Form.Label></Form.Label>\n                      <Form.Group>\n                      <Form.Control\n                          type=\"password\"\n                          name=\"password2\"\n                          value={this.state.password2}\n                          placeholder=\"Retype Password\"\n                          onChange={this.handleChange}\n                        />\n                        <Form.Label></Form.Label>\n                        \n                      </Form.Group>\n                      \n                      <p className=\"msg-success\">{this.state.messageSuccess}</p>\n                      <p className=\"msg-err\">{this.state.messageErr}</p>\n                      <ButtonToolbar>\n                        <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Reset</Button>\n                      </ButtonToolbar>\n                      \n                    </Form>\n                  </Col>\n                </Row>\n              </Container>\n            </Modal.Body>\n          </Modal>\n        );\n} else {\n  return (\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n          <div>Something wrong with yout token please try again.</div>\n        </Modal.Title>\n      </Modal.Header>\n      \n          </Modal>\n        )\n  \n}\n\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}