{"ast":null,"code":"import React from'react';import'./style.css';import PageTitle from'../CommonComponents/PageTitle';import{Spinner}from'react-bootstrap';import{Container,Alert,Card,Col,Row,Form,Button,Modal}from'react-bootstrap';import{Link}from'react-router-dom';// import { fileLoader } from 'ejs';\nexport default class GroceryPage extends React.Component{constructor(...args){super(...args);this.state={newcustomerId:'',customerList:null,Authentication:false,customerId:null,email:'',password:'',messageErr:false,messageSuccess:false,messageErrCreate:false,showAlert:false,messageAlert:'',variant:'',idItem:'',deletedItemId:null,showGroceryList:true,idsItems:null,deletedItemsId:null,lasIdListState:null,valueProductName:'',valueProductImage:'',valueProductPrice:'',valueProductSize:'',valuePricePerOunce:'',errormsg:''};this.handleChange=({target:{value,name}})=>this.setState({[name]:value});this.handleClick=()=>{const _this$state=this.state,email=_this$state.email,password=_this$state.password;if(email&&password){fetch('/api/login',{method:'POST',credentials:'include',headers:{'Content-type':'application/json'},body:JSON.stringify({email,password})}).then(response=>{if(response.status===400||response.status===404){this.setState({messageErr:'Bad Request , Check username or password ... !!'});}else if(response.status===401){this.setState({messageErr:'you are UnAuthorized'});}else if(response.status>=500){this.setState({messageErr:'Sorry , Internal Server ERROR'});}else{this.setState({messageErr:''});this.setState({isAuthenticated:true});this.setState({messageSuccess:'login sucessfully '});return window.location.href='/grocery';}}).catch(()=>{this.setState({messageAlert:'Internal Server Error while logging in',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});}else{this.setState({messageErr:'Please enter all fields'});}};this.handleClose=e=>{if(e)e.stopPropagation();this.setState({showGroceryList:false});};this.handleShowDeleteItem=idItem=>{this.setState({deletedItemId:idItem});const _this$state2=this.state,customerId=_this$state2.customerId,deletedItemId=_this$state2.deletedItemId;fetch(\"/api/remove-item/\".concat(idItem,\"/\").concat(customerId),{method:'DELETE',headers:{Accept:'application/json','Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{this.setState({messageAlert:'deleted successfully',showAlert:true,variant:'success'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},3500));this.setState(prevState=>{const newValueData=prevState.customerList.filter(// do we need catch sttmnt for filter\nitem=>item.id!==deletedItemId);return{customerList:newValueData};});}).catch(()=>{this.setState({messageAlert:'Internal Server Error while deleting item',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});};this.handleShowAddItem=idItem=>{window.location.href=\"cart-page/\".concat(idItem);};this.handleShowDeleteList=idsItems=>{const customerId=this.state.customerId;fetch(\"/api/get-ids-items/\".concat(customerId),{method:'GET',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(res=>res.json()).then(response=>{if(response){let arrResItemDelete=response.data;arrResItemDelete.map(resDelete=>this.setState({deletedItemsId:resDelete}));}}).catch(()=>{this.setState({messageAlert:'Internal Server Error while getting item id',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});fetch(\"/api/remove-list/\".concat(customerId),{method:'DELETE',headers:{'Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{this.setState({messageAlert:'deleted successfully',showAlert:true,variant:'success'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},3500));this.setState({customerList:[]});}).catch(()=>{this.setState({messageAlert:'Internal Server Error while deleting list',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});};this.handleShowGroceryList=()=>{this.setState({showGroceryList:true});};}componentDidMount(){// checks if user is already logged in in app.\nconst auth=this.props.auth;this.setState({Authentication:auth});// if (!auth || auth === undefined){}\n// api grocery calls authenticationVerify,isAuthenticated\nfetch('/api/grocery',{method:'GET',headers:{'Content-type':'application/json'}}).then(res=>{return res.json();}).then(response=>{console.log(\"api/grocery response:\");console.log(response);if(response.success&&response.data){this.setState({Authentication:true});}else{this.setState({Authenticated:false});}this.setState({customerId:response.data});const customerId=this.state.customerId;fetch(\"/api/getList/\".concat(customerId),{method:'GET',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{if(response){this.setState({customerList:response.data});}}).catch(()=>{this.setState({messageAlert:'Internal Server Error while getting users grocery list...',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});});fetch('/api/get-ids-list',{method:'GET',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{let arrResponse=response.data;const lasIdList=arrResponse[arrResponse.length-1];this.setState({lasIdListState:lasIdList+1});});fetch('/api/get-ids-customers',{method:'GET',credentials:'same-origin',headers:{'Content-Type':'application/json'}}).then(res=>{return res.json();}).then(response=>{let arrResponse=response.data;const lasIdCustomer=arrResponse[arrResponse.length-1];this.setState({newcustomerId:lasIdCustomer+1});}).catch(()=>{this.setState({messageAlert:'Internal Server Error while getting customer ids',showAlert:true,variant:'danger'},()=>setTimeout(()=>{this.setState({messageAlert:'',showAlert:false});},8000));});}render(){const _this$state3=this.state,email=_this$state3.email,password=_this$state3.password,showAlert=_this$state3.showAlert,variant=_this$state3.variant,messageAlert=_this$state3.messageAlert,customerList=_this$state3.customerList,idsItems=_this$state3.idsItems,messageErr=_this$state3.messageErr,messageSuccess=_this$state3.messageSuccess;// const { showGroceryList, valueProductName, valueProductImage, valueProductSize, valueProductPrice, valuePricePerOunce, lasIdListState, messageErrCreate } = this.state;\nconst dataTypeaheadProps=this.props.dataTypeaheadProps;return(/*#__PURE__*/React.createElement(React.Fragment,null,this.state.Authentication?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PageTitle,{title:\" Your Grocery List\"}),/*#__PURE__*/React.createElement(Alert,{show:showAlert,key:1,variant:variant},messageAlert),/*#__PURE__*/React.createElement(Container,{className:\"page__container\"},customerList&&customerList.length!==0?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Button,{className:\"yourlist__buttonDeleteList\",variant:\"danger\",onClick:e=>{e.stopPropagation();this.handleShowDeleteList(idsItems);}},\"Delete All Items\"),dataTypeaheadProps?/*#__PURE__*/React.createElement(React.Fragment,null,dataTypeaheadProps.map(ingredient_item_grocery_search=>{return(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{xs:12,md:12,lg:12,key:ingredient_item_grocery_search.id},/*#__PURE__*/React.createElement(\"img\",{src:\"/images/products/\".concat(ingredient_item_grocery_search.product_image),className:\"dataTypeahead__card-img\",alt:\"product_img\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"dataTypeahead__card-div\"},/*#__PURE__*/React.createElement(Card.Header,{className:\"dataTypeahead__yourlist__card-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dataTypeahead__header__name-product\"},\"Product Name: \",ingredient_item_grocery_search.product_name)),/*#__PURE__*/React.createElement(Card.Text,{className:\"dataTypeahead__yourlist__card-text\"},\"Product Price :  \",ingredient_item_grocery_search&&ingredient_item_grocery_search.product_price),/*#__PURE__*/React.createElement(Card.Text,{className:\"dataTypeahead__yourlist__card-text\"},\"Product Size : \",ingredient_item_grocery_search.sizes)),/*#__PURE__*/React.createElement(\"div\",{className:\"dataTypeahead__buttonAdd\"},/*#__PURE__*/React.createElement(Button,{onClick:e=>{e.stopPropagation();this.handleShowAddItem(ingredient_item_grocery_search.id);}},\" Add To Cart\"),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\"dataTypeahead__buttonDelete\"},/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-remove\",onClick:e=>{e.stopPropagation();this.handleShowDeleteItem(ingredient_item_grocery_search.id);}})))));})):null,customerList?customerList.map(ingredient_item_customers_grocery=>{let idItem=ingredient_item_customers_grocery.id;return(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{xs:12,md:12,lg:12,key:ingredient_item_customers_grocery.id},ingredient_item_customers_grocery.product_image.startsWith('http://')||ingredient_item_customers_grocery.product_image.startsWith('data')?/*#__PURE__*/React.createElement(\"img\",{src:\"\".concat(ingredient_item_customers_grocery.product_image),alt:\"product_img \",className:\"card-img\"}):/*#__PURE__*/React.createElement(\"img\",{src:\"/images/products/\".concat(ingredient_item_customers_grocery.product_image),alt:\"product_img \",className:\"card-img\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"yourlist__card-div\"},/*#__PURE__*/React.createElement(Card.Header,{className:\"yourlist__card-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header__name-product\"},\"Name Product : \",ingredient_item_customers_grocery.product_name)),/*#__PURE__*/React.createElement(Card.Text,{className:\"yourlist__card-text\"},\"Product Price :  \",ingredient_item_customers_grocery&&ingredient_item_customers_grocery.product_price),/*#__PURE__*/React.createElement(Card.Text,{className:\"yourlist__card-text\"},\"Product Size : \",ingredient_item_customers_grocery.sizes)),/*#__PURE__*/React.createElement(\"div\",{className:\"yourlist__buttonAdd\"},/*#__PURE__*/React.createElement(Button,{onClick:e=>{e.stopPropagation();this.handleShowAddItem(idItem);}},\" Add To Cart\"),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\"yourlist__buttonDelete\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-remove\",onClick:e=>{e.stopPropagation();this.handleShowDeleteItem(ingredient_item_customers_grocery.id);}})))));}):/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",variant:\"info\"})):/*#__PURE__*/React.createElement(React.Fragment,null),\";\")):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,\"Log in as guest or user to load your grocery list\"),/*#__PURE__*/React.createElement(Button,{className:\"yourlist__button-create\",onClick:this.handleShowGroceryList},\"create list\"),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Modal,{show:true,onHide:this.handleClose,className:\"modal loginformmm\",backdrop:\"static\"},/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Form,{className:\"login__form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login__form-div-title\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"login__form-title\"},\"Log in to View Grocery\")),/*#__PURE__*/React.createElement(\"div\",{className:\"vl\"},/*#__PURE__*/React.createElement(\"span\",{className:\"vl-innertext\"},\"or\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"button\",{className:\"fb btn\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-facebook fa-fw\"}),\" Login with Facebook\"),/*#__PURE__*/React.createElement(\"button\",{className:\"google btn\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-google fa-fw\"}),\" Login with Google+\")),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{className:\"login__form__label\"},\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",name:\"email\",value:email,placeholder:\"Enter your email\",onChange:this.handleChange,className:\"login__form__input\"})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{className:\"login__form__label\"},\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",name:\"password\",value:password,placeholder:\"Enter your password\",onChange:this.handleChange,className:\"login__form__input\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"msg-success\"},messageSuccess),/*#__PURE__*/React.createElement(\"p\",{className:\"msg-err\"},messageErr),/*#__PURE__*/React.createElement(Link,{to:\"/forgotpass\"},/*#__PURE__*/React.createElement(\"span\",{className:\"link-forgot-password\"},\"Forget Password  ?\")),/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"login__form-btn\",onClick:this.handleClick},\"Log in\"),/*#__PURE__*/React.createElement(Form.Text,{className:\"login__form__text-muted\"},\"Don\\u2019t have an account? \",'',/*#__PURE__*/React.createElement(Link,{className:\"link-signup-word\",to:\"/signup\"},\"Sign Up\"),/*#__PURE__*/React.createElement(\"br\",null),\"or\",/*#__PURE__*/React.createElement(Link,{className:\"link-guest-word\",to:\"/v2\"},\"continue as guest\")))))))));/* Move Create List option to suggest meal */ /* <Container>\n              {showGroceryList ? (\n                <Modal show={showGroceryList} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                  <Modal.Body className=\"modal-create__body\">\n                    <Form.Group>\n                      <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductName\"\n                        value={valueProductName}\n                        placeholder=\"Enter name list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductImage\"\n                        value={valueProductImage}\n                        placeholder=\"Enter image list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valueProductPrice\"\n                        value={valueProductPrice}\n                        placeholder=\"Enter price list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductSize\"\n                        value={valueProductSize}\n                        placeholder=\"Enter size list\"\n                        onChange={this.handleChange}\n\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valuePricePerOunce\"\n                        value={valuePricePerOunce}\n                        placeholder=\"Enter Price Per Ounce list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {messageErrCreate ? (\n                      <p className=\"create__msg-err\">{messageErrCreate}</p>\n                    ) : null}\n                  </Modal.Body>\n                  <Modal.Footer className=\"confirm__success\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={this.handleClose}\n                    >\n                      Close\n                    </Button>\n                    <Button\n                      className='create-button'\n                      variant=\"success\"\n                      onClick={this.handleCreateList}\n                    >\n                      create\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              ) : <div>No list to show</div>}\n                    </Container> \n                  \n                    handleCreateList = () => {\n    const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n    // if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n    //   if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n\n    const { customerId } = this.state;\n    const idItem = lasIdListState;\n    fetch(`/api/create-list/${idItem}/${customerId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        valueProductName,\n        valueProductImage,\n        valueProductPrice,\n        valueProductSize,\n        valuePricePerOunce,\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response) {\n          const { customerList } = this.state;\n          this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n        }\n      })\n\n    //     } else {\n    //     this.setState({ messageErrCreate: 'should be the image start word  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n    //   }\n    // } else {\n    //   this.setState({ messageErrCreate: 'should be sure fill all fields ' })\n    // }\n\n  }\n*/}}","map":{"version":3,"sources":["/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/GroceryPage/index.jsx"],"names":["React","PageTitle","Spinner","Container","Alert","Card","Col","Row","Form","Button","Modal","Link","GroceryPage","Component","state","newcustomerId","customerList","Authentication","customerId","email","password","messageErr","messageSuccess","messageErrCreate","showAlert","messageAlert","variant","idItem","deletedItemId","showGroceryList","idsItems","deletedItemsId","lasIdListState","valueProductName","valueProductImage","valueProductPrice","valueProductSize","valuePricePerOunce","errormsg","handleChange","target","value","name","setState","handleClick","fetch","method","credentials","headers","body","JSON","stringify","then","response","status","isAuthenticated","window","location","href","catch","setTimeout","handleClose","e","stopPropagation","handleShowDeleteItem","Accept","res","json","prevState","newValueData","filter","item","id","handleShowAddItem","handleShowDeleteList","arrResItemDelete","data","map","resDelete","handleShowGroceryList","componentDidMount","auth","props","console","log","success","Authenticated","arrResponse","lasIdList","length","lasIdCustomer","render","dataTypeaheadProps","ingredient_item_grocery_search","product_image","product_name","product_price","sizes","ingredient_item_customers_grocery","startsWith"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './style.css';\nimport PageTitle from '../CommonComponents/PageTitle'\nimport { Spinner } from 'react-bootstrap'\nimport { Container, Alert, Card, Col, Row, Form, Button, Modal } from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\n// import { fileLoader } from 'ejs';\nexport default class GroceryPage extends React.Component {\n  state = {\n    newcustomerId: '',\n    customerList: null,\n    Authentication: false,\n    customerId: null,\n    email: '',\n    password: '',\n    messageErr: false,\n    messageSuccess: false,\n    messageErrCreate: false,\n    showAlert: false,\n    messageAlert: '',\n    variant: '',\n    idItem: '',\n    deletedItemId: null,\n    showGroceryList: true,\n    idsItems: null,\n    deletedItemsId: null,\n    lasIdListState: null,\n    valueProductName: '',\n    valueProductImage: '',\n    valueProductPrice: '',\n    valueProductSize: '',\n    valuePricePerOunce: '',\n    errormsg: '',\n  }\n\n  handleChange = ({ target: { value, name } }) =>\n    this.setState({ [name]: value });\n\n  componentDidMount() {\n    // checks if user is already logged in in app.\n    const { auth } = this.props;\n    this.setState({ Authentication: auth })\n    // if (!auth || auth === undefined){}\n\n    // api grocery calls authenticationVerify,isAuthenticated\n    fetch('/api/grocery', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        console.log(\"api/grocery response:\")\n        console.log(response);\n        if (response.success && response.data) {\n          this.setState({ Authentication: true });\n        } else {\n          this.setState({ Authenticated: false })\n        }\n\n        this.setState({ customerId: response.data })\n        const { customerId } = this.state;\n        fetch(`/api/getList/${customerId}`, {\n          method: 'GET',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n\n        })\n          .then(res => {\n            return res.json()\n          })\n          .then(response => {\n            if (response) {\n              this.setState({ customerList: response.data })\n            }\n          })\n          .catch(() => {\n            this.setState({\n              messageAlert: 'Internal Server Error while getting users grocery list...',\n              showAlert: true,\n              variant: 'danger'\n            },\n              () =>\n                setTimeout(() => {\n                  this.setState({ messageAlert: '', showAlert: false })\n                }, 8000)\n            )\n          })\n      })\n\n    fetch('/api/get-ids-list', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        let arrResponse = response.data;\n        const lasIdList = arrResponse[arrResponse.length - 1]\n        this.setState({ lasIdListState: lasIdList + 1 })\n      })\n\n    fetch('/api/get-ids-customers', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        let arrResponse = response.data;\n        const lasIdCustomer = arrResponse[arrResponse.length - 1]\n        this.setState({ newcustomerId: lasIdCustomer + 1 })\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while getting customer ids',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n  }\n\n  handleClick = () => {\n    const { email, password } = this.state;\n    if (email && password) {\n      fetch('/api/login', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      })\n        .then(response => {\n          if (response.status === 400 || response.status === 404) {\n            this.setState({ messageErr: 'Bad Request , Check username or password ... !!' });\n          } else if (response.status === 401) {\n            this.setState({ messageErr: 'you are UnAuthorized' });\n          } else if (response.status >= 500) {\n            this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n          } else {\n            this.setState({ messageErr: '' });\n            this.setState({ isAuthenticated: true })\n            this.setState({ messageSuccess: 'login sucessfully ' });\n            return window.location.href = '/grocery'\n          }\n        })\n        .catch(() => {\n          this.setState({\n            messageAlert: 'Internal Server Error while logging in',\n            showAlert: true,\n            variant: 'danger'\n          },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: '', showAlert: false })\n              }, 8000)\n          )\n        })\n    } else {\n      this.setState({ messageErr: 'Please enter all fields' });\n    }\n  };\n\n  handleClose = e => {\n    if (e) e.stopPropagation();\n    this.setState({ showGroceryList: false });\n  };\n\n  handleShowDeleteItem = (idItem) => {\n    this.setState({ deletedItemId: idItem });\n    const { customerId, deletedItemId } = this.state;\n    fetch(`/api/remove-item/${idItem}/${customerId}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => {\n        return res.json()\n\n      })\n      .then(response => {\n        this.setState({\n          messageAlert: 'deleted successfully',\n          showAlert: true,\n          variant: 'success'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 3500)\n        )\n        this.setState(prevState => {\n          const newValueData = prevState.customerList.filter(\n            // do we need catch sttmnt for filter\n            item => item.id !== deletedItemId\n          );\n          return { customerList: newValueData };\n        });\n\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while deleting item',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n  }\n\n  handleShowAddItem = (idItem) => {\n    window.location.href = `cart-page/${idItem}`\n  }\n\n  handleShowDeleteList = (idsItems) => {\n    const { customerId } = this.state;\n    fetch(`/api/get-ids-items/${customerId}`, {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response) {\n          let arrResItemDelete = response.data\n          arrResItemDelete.map((resDelete) =>\n            this.setState({ deletedItemsId: resDelete })\n          )\n        }\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while getting item id',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n\n    fetch(`/api/remove-list/${customerId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        this.setState({\n          messageAlert: 'deleted successfully',\n          showAlert: true,\n          variant: 'success'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 3500)\n        )\n\n        this.setState({ customerList: [] });\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while deleting list',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n  }\n\n  handleShowGroceryList = () => {\n    this.setState({ showGroceryList: true })\n  }\n\n\n  render() {\n    const { email, password, showAlert, variant, messageAlert, customerList, idsItems, messageErr, messageSuccess } = this.state;\n    // const { showGroceryList, valueProductName, valueProductImage, valueProductSize, valueProductPrice, valuePricePerOunce, lasIdListState, messageErrCreate } = this.state;\n    const { dataTypeaheadProps } = this.props;\n\n    return (\n      <>\n        {this.state.Authentication ? (\n          <>\n            <PageTitle title=\" Your Grocery List\" />\n            {/* Display alert if there is any issue loading grocery page */}\n            <Alert show={showAlert} key={1} variant={variant}>\n              {messageAlert}\n            </Alert>\n\n\n            {/* display grocery page typeahead functionalities */}\n            <Container className=\"page__container\">\n              {customerList && customerList.length !== 0 ? (\n                <Row>\n                  <Button className='yourlist__buttonDeleteList'\n                    variant=\"danger\"\n                    onClick={e => {\n                      e.stopPropagation();\n                      this.handleShowDeleteList(idsItems);\n                    }}\n                  >\n                    Delete All Items\n                  </Button>\n\n                  {/* display searchbar typeahead items if they exist */}\n                  {dataTypeaheadProps ? (\n                    <>\n                      {/* create all search bar options from typeahead's display on grocery list ? */}\n                      {dataTypeaheadProps.map(ingredient_item_grocery_search => {\n                        return <>\n                          <Col xs={12} md={12} lg={12} key={ingredient_item_grocery_search.id}>\n                            <img src={`/images/products/${ingredient_item_grocery_search.product_image}`} className=\"dataTypeahead__card-img\" alt=\"product_img\" />\n                            <div className=\"dataTypeahead__card-div\">\n                              <Card.Header className=\"dataTypeahead__yourlist__card-header\">\n                                <div className=\"dataTypeahead__header__name-product\">Product Name: {ingredient_item_grocery_search.product_name}</div>\n                              </Card.Header>\n                              <Card.Text className=\"dataTypeahead__yourlist__card-text\">\n                                Product Price :  {ingredient_item_grocery_search && ingredient_item_grocery_search.product_price}\n                              </Card.Text>\n                              <Card.Text className=\"dataTypeahead__yourlist__card-text\">\n                                Product Size : {ingredient_item_grocery_search.sizes}\n                              </Card.Text>\n                            </div>\n                            <div className=\"dataTypeahead__buttonAdd\"><Button onClick={e => {\n                              e.stopPropagation();\n                              this.handleShowAddItem(ingredient_item_grocery_search.id);\n                            }}> Add To Cart</Button> </div>\n\n                            <div className=\"dataTypeahead__buttonDelete\"><i class=\"fa fa-remove\" onClick={e => {\n                              e.stopPropagation();\n                              this.handleShowDeleteItem(ingredient_item_grocery_search.id);\n\n                            }} ></i></div>\n                          </Col>\n                        </>\n                      })}\n                    </>\n                  ) : null}\n                  {/* display grocery list, for any authenticated customer */}\n                  {customerList ? (\n                    customerList.map((ingredient_item_customers_grocery) => {\n                      let idItem = ingredient_item_customers_grocery.id;\n                      return <>\n                        <Col xs={12} md={12} lg={12} key={ingredient_item_customers_grocery.id}>\n                          {ingredient_item_customers_grocery.product_image.startsWith('http://') || ingredient_item_customers_grocery.product_image.startsWith('data') ? (\n                            <img src={`${ingredient_item_customers_grocery.product_image}`} alt=\"product_img \" className=\"card-img\" />\n                          ) : (\n                              <img src={`/images/products/${ingredient_item_customers_grocery.product_image}`} alt=\"product_img \" className=\"card-img\" />\n                            )}\n                          <div className=\"yourlist__card-div\">\n                            <Card.Header className=\"yourlist__card-header\">\n                              <div className=\"header__name-product\">Name Product : {ingredient_item_customers_grocery.product_name}</div>\n                            </Card.Header>\n                            <Card.Text className=\"yourlist__card-text\">\n                              Product Price :  {ingredient_item_customers_grocery && ingredient_item_customers_grocery.product_price}\n                            </Card.Text>\n                            <Card.Text className=\"yourlist__card-text\">\n                              Product Size : {ingredient_item_customers_grocery.sizes}\n                            </Card.Text>\n                          </div>\n                          <div className=\"yourlist__buttonAdd\"><Button onClick={e => {\n                            e.stopPropagation();\n                            this.handleShowAddItem(idItem);\n                          }}> Add To Cart</Button> </div>\n                          <div className=\"yourlist__buttonDelete\"><i className=\"fa fa-remove\" onClick={e => {\n                            e.stopPropagation();\n                            this.handleShowDeleteItem(ingredient_item_customers_grocery.id);\n                          }} ></i></div>\n                        </Col>\n                      </>\n                    })\n                  ) : <Spinner animation=\"border\" variant=\"info\" />}\n                </Row>\n              ) : (\n                  <></>\n                )};\n             </Container>\n          </>\n        ) : (\n            <>\n              {/* display create list option if customer has no grocery list */}\n              <div>Log in as guest or user to load your grocery list</div>\n              <Button className=\"yourlist__button-create\" onClick={this.handleShowGroceryList}>create list</Button>\n              {/* display log in pop-up on grocery page. (May be best to separate this into its own fileLoader, to be used on any page) */}\n              <Container>\n                <Modal show={true} onHide={this.handleClose} className=\"modal loginformmm\" backdrop=\"static\">\n                  <Modal.Body>\n                    <Form className=\"login__form\">\n                      <div className=\"login__form-div-title\">\n                        <h2 className=\"login__form-title\">Log in to View Grocery</h2>\n                      </div>\n                      <div className=\"vl\">\n                        <span className=\"vl-innertext\">or</span>\n                      </div>\n                      <div className=\"col\">\n                        <button className=\"fb btn\">\n                          <i className=\"fa fa-facebook fa-fw\"></i> Login with Facebook\n                        </button>\n                        <button className=\"google btn\"><i className=\"fa fa-google fa-fw\">\n                        </i> Login with Google+\n                        </button>\n                      </div>\n\n                      <Form.Group>\n                        <Form.Label className=\"login__form__label\">Email</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"email\"\n                          value={email}\n                          placeholder=\"Enter your email\"\n                          onChange={this.handleChange}\n                          className='login__form__input'\n                        />\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Label className=\"login__form__label\">Password</Form.Label>\n                        <Form.Control\n                          type=\"password\"\n                          name=\"password\"\n                          value={password}\n                          placeholder=\"Enter your password\"\n                          onChange={this.handleChange}\n                          className='login__form__input'\n\n                        />\n                      </Form.Group>\n                      <p className=\"msg-success\">{messageSuccess}</p>\n                      <p className=\"msg-err\">{messageErr}</p>\n                      <Link to=\"/forgotpass\">\n                        <span className=\"link-forgot-password\">Forget Password  ?</span>\n                      </Link>\n\n                      <Button\n                        type=\"button\"\n                        className=\"login__form-btn\"\n                        onClick={this.handleClick}\n                      >\n                        Log in\n                          </Button>\n                      <Form.Text className=\"login__form__text-muted\">\n                        Don’t have an account? {''}\n                        <Link className=\"link-signup-word\" to=\"/signup\">\n                          Sign Up\n                        </Link>\n                        <br />\n                        or\n                         <Link className=\"link-guest-word\" to=\"/v2\">\n                          continue as guest\n                        </Link>\n                      </Form.Text>\n                    </Form>\n                  </Modal.Body>\n                </Modal>\n              </Container>\n            </>\n          )}\n      </>\n    )\n\n    /* Move Create List option to suggest meal */ \n    /* <Container>\n              {showGroceryList ? (\n                <Modal show={showGroceryList} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                  <Modal.Body className=\"modal-create__body\">\n                    <Form.Group>\n                      <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductName\"\n                        value={valueProductName}\n                        placeholder=\"Enter name list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductImage\"\n                        value={valueProductImage}\n                        placeholder=\"Enter image list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valueProductPrice\"\n                        value={valueProductPrice}\n                        placeholder=\"Enter price list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductSize\"\n                        value={valueProductSize}\n                        placeholder=\"Enter size list\"\n                        onChange={this.handleChange}\n\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valuePricePerOunce\"\n                        value={valuePricePerOunce}\n                        placeholder=\"Enter Price Per Ounce list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {messageErrCreate ? (\n                      <p className=\"create__msg-err\">{messageErrCreate}</p>\n                    ) : null}\n                  </Modal.Body>\n                  <Modal.Footer className=\"confirm__success\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={this.handleClose}\n                    >\n                      Close\n                    </Button>\n                    <Button\n                      className='create-button'\n                      variant=\"success\"\n                      onClick={this.handleCreateList}\n                    >\n                      create\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              ) : <div>No list to show</div>}\n                    </Container> \n                  \n                    handleCreateList = () => {\n    const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n    // if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n    //   if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n\n    const { customerId } = this.state;\n    const idItem = lasIdListState;\n    fetch(`/api/create-list/${idItem}/${customerId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        valueProductName,\n        valueProductImage,\n        valueProductPrice,\n        valueProductSize,\n        valuePricePerOunce,\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response) {\n          const { customerList } = this.state;\n          this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n        }\n      })\n\n    //     } else {\n    //     this.setState({ messageErrCreate: 'should be the image start word  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n    //   }\n    // } else {\n    //   this.setState({ messageErrCreate: 'should be sure fill all fields ' })\n    // }\n\n  }\n*/}}"]},"metadata":{},"sourceType":"module"}