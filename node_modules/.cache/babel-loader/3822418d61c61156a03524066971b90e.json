{"ast":null,"code":"import _defineProperty from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/resetpassword/index.jsx\";\nimport React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setTimeout } from 'timers';\n\nvar ResetPassword =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResetPassword, _React$Component);\n\n  function ResetPassword() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResetPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResetPassword)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      password1: '',\n      password2: '',\n      messageErr: false,\n      messageSuccess: false,\n      showModal: true\n    };\n\n    _this.handleChange = function (e) {\n      var name = e.currentTarget.name;\n      var value = e.currentTarget.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleClose = function (delay) {\n      setTimeout(function () {\n        _this.props.history.push('/grocery');\n      }, delay || 0);\n    };\n\n    _this.formSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.password1 || _this.state.password2) {\n        _this.submitForm();\n      } else {\n        _this.setState({\n          messageErr: 'Please enter correct data.'\n        });\n      }\n    };\n\n    _this.submitForm = function () {\n      var token = _this.props.location.search.replace('?', '').split('=')[1];\n\n      var formData = Object.assign({}, _this.state, {\n        token: token\n      });\n      fetch('/api/resetpass', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      }).then(function (response) {\n        if (response.status === 400 || response.status === 404) {\n          _this.setState({\n            messageErr: 'Bad Request , Check username or email ... !!'\n          });\n        } else if (response.status === 401) {\n          _this.setState({\n            messageErr: 'you are UnAuthorized'\n          });\n        } else if (response.status >= 500) {\n          _this.setState({\n            messageErr: 'Sorry , Internal Server ERROR'\n          });\n        } else {\n          _this.setState({\n            messageErr: '',\n            isAuthenticated: true,\n            messageSuccess: 'Please check your inbox for more details! '\n          });\n\n          _this.handleClose(5000);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ResetPassword, [{\n    key: \"render\",\n    value: function render() {\n      var isItReset = this.props.location.search.replace('?', '').split('=');\n\n      if (isItReset.length > 1) {\n        isItReset = isItReset[1];\n        return React.createElement(Modal, {\n          show: this.state.showModal,\n          onHide: this.handleClose,\n          className: \"modal resetpassword\",\n          backdrop: \"static\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          style: {\n            width: '100%',\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Reset Password\"))), React.createElement(Modal.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Row, {\n          className: \"justify-content-md-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: true,\n          lg: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Form, {\n          className: \"\",\n          onSubmit: this.formSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"hidden\",\n          name: \"token\",\n          value: isItReset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(Form.Control, {\n          type: \"password\",\n          name: \"password1\",\n          value: this.state.password1,\n          placeholder: \"New Password\",\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        })), React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"password\",\n          name: \"password2\",\n          value: this.state.password2,\n          placeholder: \"Retype Password\",\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          className: \"msg-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, this.state.messageSuccess), React.createElement(\"p\", {\n          className: \"msg-err\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.state.messageErr), React.createElement(ButtonToolbar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"secondary\",\n          type: \"submit\",\n          className: \"login__form-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Reset\"))))))));\n      } else {\n        return React.createElement(Modal, {\n          show: this.state.showModal,\n          onHide: this.handleClose,\n          className: \"modal resetpassword\",\n          backdrop: \"static\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Modal.Header, {\n          closeButton: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Modal.Title, {\n          style: {\n            width: '100%',\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Something wrong with yout token please try again.\"))));\n      }\n    }\n  }]);\n\n  return ResetPassword;\n}(React.Component);\n\nexport { ResetPassword as default };","map":{"version":3,"sources":["/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/resetpassword/index.jsx"],"names":["React","Form","Button","Container","Modal","Row","Col","ButtonToolbar","Link","Redirect","setTimeout","ResetPassword","state","password1","password2","messageErr","messageSuccess","showModal","handleChange","e","name","currentTarget","value","setState","handleClose","delay","props","history","push","formSubmit","preventDefault","submitForm","token","location","search","replace","split","formData","Object","assign","fetch","method","credentials","headers","body","JSON","stringify","then","response","status","isAuthenticated","isItReset","length","width","textAlign","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\n\nimport { Link, Redirect } from 'react-router-dom';\nimport { setTimeout } from 'timers';\n\nexport default class ResetPassword extends React.Component {\n  state = {\n    password1: '',\n    password2: '',\n    messageErr: false,\n    messageSuccess: false,\n    showModal: true,\n  };\n\n\n  handleChange = (e) => {\n    let name = e.currentTarget.name;\n    let value = e.currentTarget.value;\n    this.setState({ [name]: value });\n  }\n\n\n  handleClose = (delay) => {\n    setTimeout(() => {\n      this.props.history.push('/grocery');\n    }, delay || 0);\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    if((this.state.password1 || this.state.password2)) {\n      this.submitForm();\n    } else {\n      this.setState({ messageErr: 'Please enter correct data.' });\n    }\n  };\n\n  submitForm = () => {\n    let token = this.props.location.search.replace('?', '').split('=')[1];\n    let formData = Object.assign({}, this.state, {token})\n    fetch('/api/resetpass', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    }).then(response => {\n        if (response.status === 400 || response.status === 404) {\n          this.setState({ messageErr: 'Bad Request , Check username or email ... !!' });\n        } else if (response.status === 401) {\n          this.setState({ messageErr: 'you are UnAuthorized' });\n        } else if (response.status >= 500) {\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n        } else {\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'Please check your inbox for more details! ' });\n          this.handleClose(5000);\n        }\n      })\n  };\n\n  render() {\n\nlet isItReset = this.props.location.search.replace('?', '').split('=');\nif(isItReset.length > 1) {\n  isItReset = isItReset[1];\n  return (\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n          <div>Reset Password</div>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg>\n              <Form className=\"\" onSubmit={this.formSubmit}>\n              <Form.Group>\n              <Form.Control type=\"hidden\" name=\"token\" value={isItReset} />\n                <Form.Control\n                          type=\"password\"\n                          name=\"password1\"\n                          value={this.state.password1}\n                          placeholder=\"New Password\"\n                          onChange={this.handleChange}\n                        />\n                    \n                      </Form.Group>\n                      <Form.Label></Form.Label>\n                      <Form.Group>\n                      <Form.Control\n                          type=\"password\"\n                          name=\"password2\"\n                          value={this.state.password2}\n                          placeholder=\"Retype Password\"\n                          onChange={this.handleChange}\n                        />\n                        <Form.Label></Form.Label>\n                        \n                      </Form.Group>\n                      \n                      <p className=\"msg-success\">{this.state.messageSuccess}</p>\n                      <p className=\"msg-err\">{this.state.messageErr}</p>\n                      <ButtonToolbar>\n                        <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Reset</Button>\n                      </ButtonToolbar>\n                      \n                    </Form>\n                  </Col>\n                </Row>\n              </Container>\n            </Modal.Body>\n          </Modal>\n        );\n} else {\n  return (\n    <Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal resetpassword\" backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n          <div>Something wrong with yout token please try again.</div>\n        </Modal.Title>\n      </Modal.Header>\n      \n          </Modal>\n        )\n  \n}\n\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}