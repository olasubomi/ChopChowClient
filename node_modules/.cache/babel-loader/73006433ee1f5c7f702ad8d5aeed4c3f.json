{"ast":null,"code":"import _classCallCheck from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/mealMenu/IngredientSection.js\";\nimport React from 'react';\nimport { Popover, PopoverBody } from 'reactstrap';\n\nvar IngredientSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IngredientSection, _React$Component);\n\n  function IngredientSection(props) {\n    var _this;\n\n    _classCallCheck(this, IngredientSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IngredientSection).call(this, props));\n    _this.number = 3;\n    _this.ingredientPopOver = true;\n    _this.stored_ingredients = [{\n      \"Garri\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Water\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Sugar\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Rice- 3 Cups\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Tomatoes x 6\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Onion x 2\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Palm Oil- 2 Cups\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Black Eyed Beans x 1 bag(350mL)\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Onions x 2\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Potatoes - 8\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Garlic- 6 cloves\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Thyme\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Oregano\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Basil\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Parmesan Cheese\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Oil\": {\n        availability: [\"Lizy Gidy\"]\n      },\n      \"Butter\": {\n        availability: [\"Lizy Gidy\"]\n      }\n    }];\n    _this.IngredientInfoToggle = _this.IngredientInfoToggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      ingredientPopOver: false\n    };\n    return _this;\n  }\n\n  _createClass(IngredientSection, [{\n    key: \"IngredientInfoToggle\",\n    value: function IngredientInfoToggle(e) {\n      console.log(\"toggled by:\" + e.target);\n      console.log(); // figure out which popver it is\n      // this.setState({\n      //     ingredientPopOver: !this.state.ingredientPopOver\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var ingredientCount = this.props.selectedMeal.ingredients.length;\n      var mealIngredients = this.props.selectedMeal.ingredients.map(function (ingredient) {\n        return React.createElement(\"li\", {\n          key: ingredient,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \" \", ingredient, \" \\xA0\", React.createElement(\"span\", {\n          id: ingredient,\n          onMouseOver: _this2.IngredientInfoToggle,\n          onMouseOut: _this2.IngredientInfoToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"/images/info_icon.png\",\n          alt: \"Product details not found\",\n          style: {\n            width: '13px',\n            height: '13px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        })));\n      });\n      var i;\n      var popovers;\n\n      for (i = 0; i < ingredientCount; i++) {\n        popovers += React.createElement(Popover, {\n          placement: \"auto\",\n          isOpen: this.ingredientPopOver,\n          target: this.props.selectedMeal.ingredients[i],\n          toggle: this.IngredientInfoToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(PopoverBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"payback-disclaimer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"In Stock in \", this.stored_ingredients, \" store(s)\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Add to WishList\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Add to Cart \"), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }))));\n      } // const popovers = (this.props.selectedMeal.ingredients).map((ingredient)=>\n      //     <Popover placement=\"auto\" isOpen={this.ingredientPopOver} target={ingredient} toggle={this.IngredientInfoToggle}>\n      //         <PopoverBody><div className=\"payback-disclaimer\">\n      //             In Stock in {this.stored_ingredients} store(s)<br></br>\n      //             <hr></hr>\n      //             <button>Add to WishList</button><br></br>\n      //             <button>Add to Cart </button> <br></br>\n      //         </div></PopoverBody>\n      //     </Popover>);\n\n\n      {\n        /* const mealIngredients = <li>{this.props.selectedMeal}</li>;\n        (this.props.selectedMeal.ingredients).map(\n            (ingredient) => \n            <li key={ingredient[0].toString()}> {ingredient} s {ingredient[0]} t\n            <span id=\"Popover2\" onMouseOver={this.IngredientInfoToggle} onMouseOut={this.IngredientInfoToggle} >\n            <img src=\"/images/info_icon.png\" alt=\"info\" style={{width:'13px', height:'13px'}}/> </span></li> ); */\n      }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" \", mealIngredients, \" \"));\n    }\n  }]);\n\n  return IngredientSection;\n}(React.Component);\n\nexport default IngredientSection;","map":{"version":3,"sources":["/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/mealMenu/IngredientSection.js"],"names":["React","Popover","PopoverBody","IngredientSection","props","number","ingredientPopOver","stored_ingredients","availability","IngredientInfoToggle","bind","state","e","console","log","target","ingredientCount","selectedMeal","ingredients","length","mealIngredients","map","ingredient","width","height","i","popovers","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,YAArC;;IAGMC,iB;;;;;AAUF,6BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,2FAAMA,KAAN;AADc,UATlBC,MASkB,GATT,CASS;AAAA,UARlBC,iBAQkB,GARC,IAQD;AAAA,UAPlBC,kBAOkB,GAPE,CAAC;AAAE,eAAS;AAACC,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAAX;AAA0C,eAAS;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAAnD;AAAkF,eAAS;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAA3F;AACzB,sBAAgB;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OADS;AACsB,sBAAgB;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OADtC;AACqE,mBAAa;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OADlF;AAEzB,0BAAoB;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAFK;AAEyB,yCAAmC;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAF5D;AAE2F,oBAAc;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAFzG;AAGzB,sBAAgB;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAHS;AAGsB,0BAAoB;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAH1C;AAIzB,eAAS;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAJgB;AAIe,iBAAW;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAJ1B;AAIyD,eAAS;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OAJlE;AAKzB,yBAAmB;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OALM;AAKyB,aAAO;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf,OALhC;AAK+D,gBAAU;AAACA,QAAAA,YAAY,EAAE,CAAC,WAAD;AAAf;AALzE,KAAD,CAOF;AAEd,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B;AAEA,UAAKC,KAAL,GAAW;AACPL,MAAAA,iBAAiB,EAAE;AADZ,KAAX;AAJc;AAOjB;;;;yCAEoBM,C,EAAG;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcF,CAAC,CAACG,MAA5B;AACAF,MAAAA,OAAO,CAACC,GAAR,GAFoB,CAGpB;AACA;AACA;AACA;AACH;;;6BAEO;AAAA;;AACJ,UAAIE,eAAe,GAAG,KAAKZ,KAAL,CAAWa,YAAX,CAAwBC,WAAxB,CAAoCC,MAA1D;AACC,UAAMC,eAAe,GAAI,KAAKhB,KAAL,CAAWa,YAAX,CAAwBC,WAAzB,CAAsCG,GAAtC,CAA0C,UAACC,UAAD;AAAA,eAC/D;AAAI,UAAA,GAAG,EAAEA,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAuBA,UAAvB,WACI;AAAM,UAAA,EAAE,EAAEA,UAAV;AAAsB,UAAA,WAAW,EAAE,MAAI,CAACb,oBAAxC;AAA8D,UAAA,UAAU,EAAE,MAAI,CAACA,oBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAC,uBAAT;AAAiC,UAAA,GAAG,EAAC,2BAArC;AAAiE,UAAA,KAAK,EAAE;AAACc,YAAAA,KAAK,EAAC,MAAP;AAAeC,YAAAA,MAAM,EAAC;AAAtB,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CAD+D;AAAA,OAA1C,CAAxB;AAQD,UAAIC,CAAJ;AACA,UAAIC,QAAJ;;AACA,WAAID,CAAC,GAAC,CAAN,EAASA,CAAC,GAAET,eAAZ,EAA4BS,CAAC,EAA7B,EAAgC;AAC5BC,QAAAA,QAAQ,IAAG,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,MAAnB;AAA0B,UAAA,MAAM,EAAE,KAAKpB,iBAAvC;AAA0D,UAAA,MAAM,EAAE,KAAKF,KAAL,CAAWa,YAAX,CAAwBC,WAAxB,CAAoCO,CAApC,CAAlE;AAA0G,UAAA,MAAM,EAAE,KAAKhB,oBAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACX,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAa;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACI,KAAKF,kBADT,eACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADrC,EAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFS,EAGT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHS,EAGuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHvB,EAIT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJS,OAIqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJrB,CAAb,CADW,CAAX;AASH,OAtBG,CAuBJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA;AAAC;;;;;;AAK2G;AAExG,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMa,eAAN,MADJ,CADJ;AAiBP;;;;EArF2BpB,KAAK,CAAC2B,S;;AAwFtC,eAAexB,iBAAf","sourcesContent":["import React from 'react';\nimport { Popover, PopoverBody } from 'reactstrap';\n\n\nclass IngredientSection extends React.Component {\n    number = 3;\n    ingredientPopOver= true;\n    stored_ingredients= [{ \"Garri\": {availability: [\"Lizy Gidy\"]}, \"Water\": {availability: [\"Lizy Gidy\"]}, \"Sugar\": {availability: [\"Lizy Gidy\"]},\n\"Rice- 3 Cups\": {availability: [\"Lizy Gidy\"]}, \"Tomatoes x 6\": {availability: [\"Lizy Gidy\"]}, \"Onion x 2\": {availability: [\"Lizy Gidy\"]}, \n\"Palm Oil- 2 Cups\": {availability: [\"Lizy Gidy\"]},\"Black Eyed Beans x 1 bag(350mL)\": {availability: [\"Lizy Gidy\"]}, \"Onions x 2\": {availability: [\"Lizy Gidy\"]},\n\"Potatoes - 8\": {availability: [\"Lizy Gidy\"]}, \"Garlic- 6 cloves\": {availability: [\"Lizy Gidy\"]}, \n\"Thyme\": {availability: [\"Lizy Gidy\"]}, \"Oregano\": {availability: [\"Lizy Gidy\"]}, \"Basil\": {availability: [\"Lizy Gidy\"]},\n\"Parmesan Cheese\": {availability: [\"Lizy Gidy\"]}, \"Oil\": {availability: [\"Lizy Gidy\"]}, \"Butter\": {availability: [\"Lizy Gidy\"]}}];\n\n    constructor(props){\n        super(props);\n        this.IngredientInfoToggle = this.IngredientInfoToggle.bind(this);\n\n        this.state={\n            ingredientPopOver: false,\n        }\n    }\n\n    IngredientInfoToggle(e) {\n        console.log(\"toggled by:\"+e.target);\n        console.log()\n        // figure out which popver it is\n        // this.setState({\n        //     ingredientPopOver: !this.state.ingredientPopOver\n        // });\n    }\n\n    render(){\n        let ingredientCount = this.props.selectedMeal.ingredients.length;\n         const mealIngredients = (this.props.selectedMeal.ingredients).map((ingredient)=>\n            <li key={ingredient}> {ingredient} &nbsp;\n                <span id={ingredient} onMouseOver={this.IngredientInfoToggle} onMouseOut={this.IngredientInfoToggle} >\n                    <img src=\"/images/info_icon.png\" alt=\"Product details not found\" style={{width:'13px', height:'13px'}}/>\n                </span>\n            </li>\n                     );\n\n        var i;\n        var popovers;\n        for(i=0; i< ingredientCount;i++){\n            popovers+= <Popover placement=\"auto\" isOpen={this.ingredientPopOver} target={this.props.selectedMeal.ingredients[i]} toggle={this.IngredientInfoToggle}>\n            <PopoverBody><div className=\"payback-disclaimer\">\n                In Stock in {this.stored_ingredients} store(s)<br></br>\n                <hr></hr>\n                <button>Add to WishList</button><br></br>\n                <button>Add to Cart </button> <br></br>\n                    \n            </div></PopoverBody>\n        </Popover>;\n        }\n        // const popovers = (this.props.selectedMeal.ingredients).map((ingredient)=>\n        //     <Popover placement=\"auto\" isOpen={this.ingredientPopOver} target={ingredient} toggle={this.IngredientInfoToggle}>\n        //         <PopoverBody><div className=\"payback-disclaimer\">\n        //             In Stock in {this.stored_ingredients} store(s)<br></br>\n        //             <hr></hr>\n        //             <button>Add to WishList</button><br></br>\n        //             <button>Add to Cart </button> <br></br>\n                        \n        //         </div></PopoverBody>\n        //     </Popover>);\n        {/* const mealIngredients = <li>{this.props.selectedMeal}</li>;\n         (this.props.selectedMeal.ingredients).map(\n             (ingredient) => \n             <li key={ingredient[0].toString()}> {ingredient} s {ingredient[0]} t\n             <span id=\"Popover2\" onMouseOver={this.IngredientInfoToggle} onMouseOut={this.IngredientInfoToggle} >\n             <img src=\"/images/info_icon.png\" alt=\"info\" style={{width:'13px', height:'13px'}}/> </span></li> ); */}\n\n            return (\n                <div>                    \n                    <ul> {mealIngredients} </ul>\n                    {/* {popovers} */}\n                    {/* <Popover placement=\"auto\" isOpen={this.ingredientPopOver} target={'Garri'} toggle={this.IngredientInfoToggle}>\n            <PopoverBody><div className=\"payback-disclaimer\">\n                In Stock in {this.stored_ingredients} store(s)<br></br>\n                <hr></hr>\n                <button>Add to WishList</button><br></br>\n                <button>Add to Cart </button> <br></br>\n                    \n            </div></PopoverBody>\n        </Popover>; */}\n                    \n                    {/* <button>ADD ALL<br></br>PRODUCTS<br></br>TO CART</button> */}\n                </div>\n        );\n    }\n}\n\nexport default IngredientSection"]},"metadata":{},"sourceType":"module"}