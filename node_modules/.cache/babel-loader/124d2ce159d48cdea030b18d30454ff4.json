{"ast":null,"code":"var _jsxFileName = \"/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/GroceryPage/index.jsx\";\nimport React from 'react';\nimport './style.css';\nimport PageTitle from '../CommonComponents/PageTitle';\nimport { Spinner } from 'react-bootstrap';\nimport { Container, Alert, Card, Col, Row, Form, Button, Modal } from 'react-bootstrap';\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { Link } from 'react-router-dom'; // import { fileLoader } from 'ejs';\n\nexport default class GroceryPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.products = [];\n    this.state = {\n      newcustomerId: '',\n      customerList: null,\n      Authentication: false,\n      customerId: null,\n      email: '',\n      password: '',\n      messageErr: false,\n      messageSuccess: false,\n      messageErrCreate: false,\n      showAlert: false,\n      messageAlert: '',\n      variant: '',\n      productID: '',\n      deletedItemId: null,\n      showGroceryList: true,\n      idsItems: null,\n      deletedItemsId: null,\n      lasIdListState: null,\n      valueProductName: '',\n      valueProductImage: '',\n      valueProductPrice: '',\n      valueProductSize: '',\n      valuePricePerOunce: '',\n      errormsg: ''\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.handleLoginClick = () => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      if (email && password) {\n        fetch('/api/login', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password\n          })\n        }).then(response => {\n          if (response.status === 400 || response.status === 404) {\n            this.setState({\n              messageErr: 'Bad Request , Check username or password ... !!'\n            });\n          } else if (response.status === 401) {\n            this.setState({\n              messageErr: 'you are UnAuthorized'\n            });\n          } else if (response.status >= 500) {\n            this.setState({\n              messageErr: 'Sorry , Internal Server ERROR'\n            });\n          } else {\n            this.setState({\n              messageErr: ''\n            });\n            this.setState({\n              isAuthenticated: true\n            });\n            this.setState({\n              messageSuccess: 'login sucessfully '\n            });\n            return window.location.href = '/grocery';\n          }\n        }).catch(() => {\n          this.setState({\n            messageAlert: 'Internal Server Error while logging in',\n            showAlert: true,\n            variant: 'danger'\n          }, () => setTimeout(() => {\n            this.setState({\n              messageAlert: '',\n              showAlert: false\n            });\n          }, 8000));\n        });\n      } else {\n        this.setState({\n          messageErr: 'Please enter all fields'\n        });\n      }\n    };\n\n    this.handleClose = e => {\n      if (e) e.stopPropagation();\n      this.setState({\n        showGroceryList: false\n      });\n    };\n\n    this.handleShowDeleteItem = productID => {\n      this.setState({\n        deletedItemId: productID\n      });\n      const _this$state2 = this.state,\n            customerId = _this$state2.customerId,\n            deletedItemId = _this$state2.deletedItemId;\n      fetch(\"/api/remove-item/\".concat(productID, \"/\").concat(customerId), {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(response => {\n        this.setState({\n          messageAlert: 'deleted successfully',\n          showAlert: true,\n          variant: 'success'\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: '',\n            showAlert: false\n          });\n        }, 3500));\n        this.setState(prevState => {\n          const newValueData = prevState.customerList.filter( // do we need catch sttmnt for filter\n          item => item.id !== deletedItemId);\n          return {\n            customerList: newValueData\n          };\n        });\n      }).catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while deleting item',\n          showAlert: true,\n          variant: 'danger'\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: '',\n            showAlert: false\n          });\n        }, 8000));\n      });\n    };\n\n    this.handleShowDeleteList = idsItems => {\n      const customerId = this.state.customerId;\n      fetch(\"/api/get-ids-items/\".concat(customerId), {\n        method: 'GET',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(response => {\n        if (response) {\n          let arrResItemDelete = response.data;\n          arrResItemDelete.map(resDelete => this.setState({\n            deletedItemsId: resDelete\n          }));\n        }\n      }).catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while getting item id',\n          showAlert: true,\n          variant: 'danger'\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: '',\n            showAlert: false\n          });\n        }, 8000));\n      });\n      fetch(\"/api/remove-list/\".concat(customerId), {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(response => {\n        this.setState({\n          messageAlert: 'deleted successfully',\n          showAlert: true,\n          variant: 'success'\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: '',\n            showAlert: false\n          });\n        }, 3500));\n        this.setState({\n          customerList: []\n        });\n      }).catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while deleting list',\n          showAlert: true,\n          variant: 'danger'\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: '',\n            showAlert: false\n          });\n        }, 8000));\n      });\n    };\n\n    this.handleShowGroceryList = () => {\n      this.setState({\n        showGroceryList: true\n      });\n    };\n\n    this.handleClickTypeahead = selected => {//add to grocery list\n    };\n  }\n\n  componentDidMount() {\n    // checks if user is already logged in in app.\n    const auth = this.props.auth;\n    this.setState({\n      Authentication: auth\n    }); // if (!auth || auth === undefined){}\n    // api grocery calls authenticationVerify,isAuthenticated\n\n    fetch('/api/grocery', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(response => {\n      console.log(\"api/grocery response:\");\n      console.log(response);\n\n      if (response.success && response.data) {\n        this.setState({\n          Authentication: true\n        });\n      } else {\n        this.setState({\n          Authenticated: false\n        });\n      }\n\n      this.setState({\n        customerId: response.data\n      });\n      const customerId = this.state.customerId;\n      fetch(\"/api/getList/\".concat(customerId), {\n        method: 'GET',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        return res.json();\n      }).then(response => {\n        if (response) {\n          this.setState({\n            customerList: response.data\n          });\n        }\n      }).catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while getting users grocery list...',\n          showAlert: true,\n          variant: 'danger'\n        }, () => setTimeout(() => {\n          this.setState({\n            messageAlert: '',\n            showAlert: false\n          });\n        }, 8000));\n      });\n    });\n    fetch('/api/get-ids-list', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(response => {\n      let arrResponse = response.data;\n      const lasIdList = arrResponse[arrResponse.length - 1];\n      this.setState({\n        lasIdListState: lasIdList + 1\n      });\n    });\n    fetch('/api/get-ids-customers', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(response => {\n      let arrResponse = response.data;\n      const lasIdCustomer = arrResponse[arrResponse.length - 1];\n      this.setState({\n        newcustomerId: lasIdCustomer + 1\n      });\n    }).catch(() => {\n      this.setState({\n        messageAlert: 'Internal Server Error while getting customer ids',\n        showAlert: true,\n        variant: 'danger'\n      }, () => setTimeout(() => {\n        this.setState({\n          messageAlert: '',\n          showAlert: false\n        });\n      }, 8000));\n    }); // var url = \"https://chopchowdev.herokuapp.com/api/get-all-products\";\n\n    var url = \"http://localhost:5000/api/get-all-products\";\n    fetch(url).then(res => res.text()).then(body => {\n      // console.log(\"should print body\");\n      // console.log(body);\n      var productsList = JSON.parse(body);\n      console.log(productsList);\n\n      if (productsList && productsList.data.length !== 0) {\n        console.log(\"shows products does return\");\n        console.log(productsList.data.length);\n\n        for (var i = 0; i < productsList.data.length; i++) {\n          this.products.push(productsList.data[i]);\n        }\n\n        console.log(this.products); // this.entries = Object.entries(this.products);\n        // console.log(entries);\n      } else {\n        console.log(\"shows products do not return\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          email = _this$state3.email,\n          password = _this$state3.password,\n          showAlert = _this$state3.showAlert,\n          variant = _this$state3.variant,\n          messageAlert = _this$state3.messageAlert,\n          customerList = _this$state3.customerList,\n          idsItems = _this$state3.idsItems,\n          messageErr = _this$state3.messageErr,\n          messageSuccess = _this$state3.messageSuccess; // const { showGroceryList, valueProductName, valueProductImage, valueProductSize, valueProductPrice, valuePricePerOunce, lasIdListState, messageErrCreate } = this.state;\n\n    const dataTypeaheadProps = this.props.dataTypeaheadProps;\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(Typeahead, {\n        multiple: true,\n        options: this.products,\n        placeholder: \"Find Meals (and Ingredients) here..\",\n        id: \"typeahead\",\n        onChange: this.handleClickTypeahead // onChange={(selected) => {\n        //   // Handle selections...\n        // }}\n        ,\n        filterBy: \"product_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 7\n        }\n      }), this.state.Authentication ?\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(PageTitle, {\n        title: \" Your Grocery List\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(Alert, {\n        show: showAlert,\n        key: 1,\n        variant: variant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      }, messageAlert),\n      /*#__PURE__*/\n      React.createElement(Container, {\n        className: \"page__container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }\n      }, customerList && customerList.length !== 0 ?\n      /*#__PURE__*/\n      React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Button, {\n        className: \"yourlist__buttonDeleteList\",\n        variant: \"danger\",\n        onClick: e => {\n          e.stopPropagation();\n          this.handleShowDeleteList(idsItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 19\n        }\n      }, \"Delete All Items\"), dataTypeaheadProps ?\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null, dataTypeaheadProps.map(ingredient_item_grocery_search => {\n        return (\n          /*#__PURE__*/\n          React.createElement(React.Fragment, null,\n          /*#__PURE__*/\n          React.createElement(Col, {\n            xs: 12,\n            md: 12,\n            lg: 12,\n            key: ingredient_item_grocery_search.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 27\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: \"/images/products/\".concat(ingredient_item_grocery_search.product_image),\n            className: \"dataTypeahead__card-img\",\n            alt: \"product_img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 29\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"dataTypeahead__card-div\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 29\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Header, {\n            className: \"dataTypeahead__grocery_item_card-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 31\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"dataTypeahead__header__name-product\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 33\n            }\n          }, \"Product Name: \", ingredient_item_grocery_search.product_name)),\n          /*#__PURE__*/\n          React.createElement(Card.Text, {\n            className: \"dataTypeahead__grocery_item_card-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 31\n            }\n          }, \"Product Price :  \", ingredient_item_grocery_search && ingredient_item_grocery_search.product_price),\n          /*#__PURE__*/\n          React.createElement(Card.Text, {\n            className: \"dataTypeahead__grocery_item_card-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 31\n            }\n          }, \"Product Size : \", ingredient_item_grocery_search.sizes)),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"dataTypeahead__buttonAdd\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 29\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Button, {\n            onClick: e => {\n              e.stopPropagation();\n              this.handleShowAddItem(ingredient_item_grocery_search.id);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 71\n            }\n          }, \" Add To Cart\"), \" \"),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"dataTypeahead__buttonDelete\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"i\", {\n            class: \"fa fa-remove\",\n            onClick: e => {\n              e.stopPropagation();\n              this.handleShowDeleteItem(ingredient_item_grocery_search.id);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 74\n            }\n          }))))\n        );\n      })) : null, customerList ? customerList.map(customer_grocery_product_item => {\n        let productID = customer_grocery_product_item.id;\n        return (\n          /*#__PURE__*/\n          React.createElement(React.Fragment, null,\n          /*#__PURE__*/\n          React.createElement(Col, {\n            xs: 12,\n            md: 12,\n            lg: 12,\n            key: customer_grocery_product_item.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 25\n            }\n          }, customer_grocery_product_item.product_image.startsWith('http://') || customer_grocery_product_item.product_image.startsWith('data') ?\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: \"\".concat(customer_grocery_product_item.product_image),\n            alt: \"product_img \",\n            className: \"card-img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }\n          }) :\n          /*#__PURE__*/\n          React.createElement(\"img\", {\n            src: \"/images/products/\".concat(customer_grocery_product_item.product_image),\n            alt: \"product_img \",\n            className: \"card-img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 31\n            }\n          }),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"grocery_item_card-div\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 27\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Card.Header, {\n            className: \"grocery_item_card-header\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"header__name-product\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 31\n            }\n          }, \" Product Name : \", customer_grocery_product_item.product_name)),\n          /*#__PURE__*/\n          React.createElement(Card.Text, {\n            className: \"grocery_item_card-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }\n          }, \"Product Price :  \", customer_grocery_product_item && customer_grocery_product_item.product_price),\n          /*#__PURE__*/\n          React.createElement(Card.Text, {\n            className: \"grocery_item_card-text\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }\n          }, \"Product Size : \", customer_grocery_product_item.sizes)),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"yourlist__buttonAdd\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 27\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(Button, {\n            onClick: e => {\n              e.stopPropagation();\n              this.handleShowAddItem(productID);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 64\n            }\n          }, \" Add To Cart\"), \" \"),\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            className: \"yourlist__buttonDelete\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 27\n            }\n          },\n          /*#__PURE__*/\n          React.createElement(\"i\", {\n            className: \"fa fa-remove\",\n            onClick: e => {\n              e.stopPropagation();\n              this.handleShowDeleteItem(customer_grocery_product_item.id);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 67\n            }\n          }))))\n        );\n      }) :\n      /*#__PURE__*/\n      React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 23\n        }\n      })) :\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null), \";\")) :\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }\n      }, \"Log in as guest or user to load your grocery list\"),\n      /*#__PURE__*/\n      React.createElement(Button, {\n        className: \"yourlist__button-create\",\n        onClick: this.handleShowGroceryList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }\n      }, \"create list\"),\n      /*#__PURE__*/\n      React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Modal, {\n        show: true,\n        onHide: this.handleClose,\n        className: \"modal loginformmm\",\n        backdrop: \"static\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form, {\n        className: \"login__form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"login__form-div-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h2\", {\n        className: \"login__form-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 25\n        }\n      }, \"Log in to View Grocery\")),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"vl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"vl-innertext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 25\n        }\n      }, \"or\")),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        className: \"fb btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"fa fa-facebook fa-fw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 27\n        }\n      }), \" Login with Facebook\"),\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        className: \"google btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"fa fa-google fa-fw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 56\n        }\n      }), \" Login with Google+\")),\n      /*#__PURE__*/\n      React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form.Label, {\n        className: \"login__form__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 25\n        }\n      }, \"Email\"),\n      /*#__PURE__*/\n      React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        placeholder: \"Enter your email\",\n        onChange: this.handleChange,\n        className: \"login__form__input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 25\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Form.Label, {\n        className: \"login__form__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 25\n        }\n      }, \"Password\"),\n      /*#__PURE__*/\n      React.createElement(Form.Control, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        placeholder: \"Enter your password\",\n        onChange: this.handleChange,\n        className: \"login__form__input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 25\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"msg-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 23\n        }\n      }, messageSuccess),\n      /*#__PURE__*/\n      React.createElement(\"p\", {\n        className: \"msg-err\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 23\n        }\n      }, messageErr),\n      /*#__PURE__*/\n      React.createElement(Link, {\n        to: \"/forgotpass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"link-forgot-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 25\n        }\n      }, \"Forget Password  ?\")),\n      /*#__PURE__*/\n      React.createElement(Button, {\n        type: \"button\",\n        className: \"login__form-btn\",\n        onClick: this.handleLoginClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 23\n        }\n      }, \"Log in\"),\n      /*#__PURE__*/\n      React.createElement(Form.Text, {\n        className: \"login__form__text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 23\n        }\n      }, \"Don\\u2019t have an account? \", '',\n      /*#__PURE__*/\n      React.createElement(Link, {\n        className: \"link-signup-word\",\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 25\n        }\n      }, \"Sign Up\"),\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 25\n        }\n      }), \"or\",\n      /*#__PURE__*/\n      React.createElement(Link, {\n        className: \"link-guest-word\",\n        to: \"/v2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 26\n        }\n      }, \"continue as guest\"))))))))\n    );\n    /* Move Create List option to suggest meal */\n\n    /* <Container>\n              {showGroceryList ? (\n                <Modal show={showGroceryList} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                  <Modal.Body className=\"modal-create__body\">\n                    <Form.Group>\n                      <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductName\"\n                        value={valueProductName}\n                        placeholder=\"Enter name list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductImage\"\n                        value={valueProductImage}\n                        placeholder=\"Enter image list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valueProductPrice\"\n                        value={valueProductPrice}\n                        placeholder=\"Enter price list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductSize\"\n                        value={valueProductSize}\n                        placeholder=\"Enter size list\"\n                        onChange={this.handleChange}\n                       />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valuePricePerOunce\"\n                        value={valuePricePerOunce}\n                        placeholder=\"Enter Price Per Ounce list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {messageErrCreate ? (\n                      <p className=\"create__msg-err\">{messageErrCreate}</p>\n                    ) : null}\n                  </Modal.Body>\n                  <Modal.Footer className=\"confirm__success\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={this.handleClose}\n                    >\n                      Close\n                    </Button>\n                    <Button\n                      className='create-button'\n                      variant=\"success\"\n                      onClick={this.handleCreateList}\n                    >\n                      create\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              ) : <div>No list to show</div>}\n                    </Container> \n                  \n                    handleCreateList = () => {\n    const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n    // if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n    //   if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n     const { customerId } = this.state;\n    const productID = lasIdListState;\n    fetch(`/api/create-list/${productID}/${customerId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        valueProductName,\n        valueProductImage,\n        valueProductPrice,\n        valueProductSize,\n        valuePricePerOunce,\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response) {\n          const { customerList } = this.state;\n          this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n        }\n      })\n     //     } else {\n    //     this.setState({ messageErrCreate: 'should be the image start word  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n    //   }\n    // } else {\n    //   this.setState({ messageErrCreate: 'should be sure fill all fields ' })\n    // }\n    }\n    */\n  }\n\n}","map":{"version":3,"sources":["/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/GroceryPage/index.jsx"],"names":["React","PageTitle","Spinner","Container","Alert","Card","Col","Row","Form","Button","Modal","Typeahead","Link","GroceryPage","Component","products","state","newcustomerId","customerList","Authentication","customerId","email","password","messageErr","messageSuccess","messageErrCreate","showAlert","messageAlert","variant","productID","deletedItemId","showGroceryList","idsItems","deletedItemsId","lasIdListState","valueProductName","valueProductImage","valueProductPrice","valueProductSize","valuePricePerOunce","errormsg","handleChange","target","value","name","setState","handleLoginClick","fetch","method","credentials","headers","body","JSON","stringify","then","response","status","isAuthenticated","window","location","href","catch","setTimeout","handleClose","e","stopPropagation","handleShowDeleteItem","Accept","res","json","prevState","newValueData","filter","item","id","handleShowDeleteList","arrResItemDelete","data","map","resDelete","handleShowGroceryList","handleClickTypeahead","selected","componentDidMount","auth","props","console","log","success","Authenticated","arrResponse","lasIdList","length","lasIdCustomer","url","text","productsList","parse","i","push","err","render","dataTypeaheadProps","ingredient_item_grocery_search","product_image","product_name","product_price","sizes","handleShowAddItem","customer_grocery_product_item","startsWith"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './style.css';\nimport PageTitle from '../CommonComponents/PageTitle'\nimport { Spinner } from 'react-bootstrap'\nimport { Container, Alert, Card, Col, Row, Form, Button, Modal } from 'react-bootstrap'\nimport { Typeahead } from \"react-bootstrap-typeahead\";\n\nimport { Link } from 'react-router-dom';\n// import { fileLoader } from 'ejs';\nexport default class GroceryPage extends React.Component {\n  // Mongo\n  products = [];\n\n  state = {\n    newcustomerId: '',\n    customerList: null,\n    Authentication: false,\n    customerId: null,\n    email: '',\n    password: '',\n\n    messageErr: false,\n    messageSuccess: false,\n    messageErrCreate: false,\n    showAlert: false,\n    messageAlert: '',\n\n    variant: '',\n    productID: '',\n    deletedItemId: null,\n    showGroceryList: true,\n    idsItems: null,\n    deletedItemsId: null,\n    lasIdListState: null,\n    valueProductName: '',\n    valueProductImage: '',\n    valueProductPrice: '',\n    valueProductSize: '',\n    valuePricePerOunce: '',\n    errormsg: '',\n  }\n\n  handleChange = ({ target: { value, name } }) =>\n    this.setState({ [name]: value });\n\n  componentDidMount() {\n    // checks if user is already logged in in app.\n    const { auth } = this.props;\n    this.setState({ Authentication: auth })\n    // if (!auth || auth === undefined){}\n\n    // api grocery calls authenticationVerify,isAuthenticated\n    fetch('/api/grocery', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        console.log(\"api/grocery response:\")\n        console.log(response);\n        if (response.success && response.data) {\n          this.setState({ Authentication: true });\n        } else {\n          this.setState({ Authenticated: false })\n        }\n\n        this.setState({ customerId: response.data })\n        const { customerId } = this.state;\n        fetch(`/api/getList/${customerId}`, {\n          method: 'GET',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n\n        })\n          .then(res => {\n            return res.json()\n          })\n          .then(response => {\n            if (response) {\n              this.setState({ customerList: response.data })\n            }\n          })\n          .catch(() => {\n            this.setState({\n              messageAlert: 'Internal Server Error while getting users grocery list...',\n              showAlert: true,\n              variant: 'danger'\n            },\n              () =>\n                setTimeout(() => {\n                  this.setState({ messageAlert: '', showAlert: false })\n                }, 8000)\n            )\n          })\n      })\n\n    fetch('/api/get-ids-list', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        let arrResponse = response.data;\n        const lasIdList = arrResponse[arrResponse.length - 1]\n        this.setState({ lasIdListState: lasIdList + 1 })\n      })\n\n    fetch('/api/get-ids-customers', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        let arrResponse = response.data;\n        const lasIdCustomer = arrResponse[arrResponse.length - 1]\n        this.setState({ newcustomerId: lasIdCustomer + 1 })\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while getting customer ids',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n\n      // var url = \"https://chopchowdev.herokuapp.com/api/get-all-products\";\n      var url = \"http://localhost:5000/api/get-all-products\"\n  \n      fetch(url)\n        .then(res => res.text())\n        .then(body => {\n          // console.log(\"should print body\");\n          // console.log(body);\n          var productsList = JSON.parse(body);\n          console.log(productsList);\n          if(productsList && productsList.data.length !== 0){\n            console.log(\"shows products does return\");\n            console.log(productsList.data.length);\n            for (var i = 0; i < productsList.data.length; i++) {\n              this.products.push(productsList.data[i]);\n            }\n            console.log(this.products);\n            // this.entries = Object.entries(this.products);\n            // console.log(entries);\n          }\n          else{\n            console.log(\"shows products do not return\");\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n\n  }\n\n  handleLoginClick = () => {\n    const { email, password } = this.state;\n    if (email && password) {\n      fetch('/api/login', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      })\n        .then(response => {\n          if (response.status === 400 || response.status === 404) {\n            this.setState({ messageErr: 'Bad Request , Check username or password ... !!' });\n          } else if (response.status === 401) {\n            this.setState({ messageErr: 'you are UnAuthorized' });\n          } else if (response.status >= 500) {\n            this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n          } else {\n            this.setState({ messageErr: '' });\n            this.setState({ isAuthenticated: true })\n            this.setState({ messageSuccess: 'login sucessfully ' });\n            return window.location.href = '/grocery'\n          }\n        })\n        .catch(() => {\n          this.setState({\n            messageAlert: 'Internal Server Error while logging in',\n            showAlert: true,\n            variant: 'danger'\n          },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: '', showAlert: false })\n              }, 8000)\n          )\n        })\n    } else {\n      this.setState({ messageErr: 'Please enter all fields' });\n    }\n  };\n\n  handleClose = e => {\n    if (e) e.stopPropagation();\n    this.setState({ showGroceryList: false });\n  };\n\n  handleShowDeleteItem = (productID) => {\n    this.setState({ deletedItemId: productID });\n    const { customerId, deletedItemId } = this.state;\n    fetch(`/api/remove-item/${productID}/${customerId}`, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => {\n        return res.json()\n\n      })\n      .then(response => {\n        this.setState({\n          messageAlert: 'deleted successfully',\n          showAlert: true,\n          variant: 'success'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 3500)\n        )\n        this.setState(prevState => {\n          const newValueData = prevState.customerList.filter(\n            // do we need catch sttmnt for filter\n            item => item.id !== deletedItemId\n          );\n          return { customerList: newValueData };\n        });\n\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while deleting item',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n  }\n\n  // handleShowAddItem = (productID) => {\n  //   window.location.href = `cart-page/${productID}`\n  // }\n\n  handleShowDeleteList = (idsItems) => {\n    const { customerId } = this.state;\n    fetch(`/api/get-ids-items/${customerId}`, {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => res.json())\n      .then(response => {\n        if (response) {\n          let arrResItemDelete = response.data\n          arrResItemDelete.map((resDelete) =>\n            this.setState({ deletedItemsId: resDelete })\n          )\n        }\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while getting item id',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n\n    fetch(`/api/remove-list/${customerId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        this.setState({\n          messageAlert: 'deleted successfully',\n          showAlert: true,\n          variant: 'success'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 3500)\n        )\n\n        this.setState({ customerList: [] });\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error while deleting list',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n  }\n\n  handleShowGroceryList = () => {\n    this.setState({ showGroceryList: true })\n  }\n\n  handleClickTypeahead=(selected)=>{\n    //add to grocery list\n\n  }\n\n  render() {\n    const { email, password, showAlert, variant, messageAlert, customerList, idsItems, messageErr, messageSuccess } = this.state;\n    // const { showGroceryList, valueProductName, valueProductImage, valueProductSize, valueProductPrice, valuePricePerOunce, lasIdListState, messageErrCreate } = this.state;\n    const { dataTypeaheadProps } = this.props;\n\n    return (\n      <>\n      <Typeahead\n                    multiple\n                    options={this.products}\n                    placeholder=\"Find Meals (and Ingredients) here..\"\n                    id=\"typeahead\"\n                    onChange={this.handleClickTypeahead}\n\n                    // onChange={(selected) => {\n                    //   // Handle selections...\n                    // }}\n                  filterBy={\"product_name\"}\n                  />\n\n                  {/*<Typeahead\n                    onChange={this.handleClickTypeahead}\n                    multiple\n                    options={this.products}\n                    placeholder=\"Find Meals (and Ingredients) here..\"\n                    id=\"typeahead\"\n                />\n                 <Alert show={showAlert} key={1} variant={variant}>\n                    {messageAlert}\n                </Alert>\n\n                {this.state.messageVisible ? (\n                    <div>you can not add in this item because it is already in customers grocery list</div>\n                ) : null} */}\n        {this.state.Authentication ? (\n          <>\n            <PageTitle title=\" Your Grocery List\" />\n            {/* Display alert if there is any issue loading grocery page */}\n            <Alert show={showAlert} key={1} variant={variant}>\n              {messageAlert}\n            </Alert>\n\n\n            {/* display grocery page typeahead functionalities */}\n            <Container className=\"page__container\">\n            \n              {customerList && customerList.length !== 0 ? (\n                <Row>\n                  <Button className='yourlist__buttonDeleteList'\n                    variant=\"danger\"\n                    onClick={e => {\n                      e.stopPropagation();\n                      this.handleShowDeleteList(idsItems);\n                    }}\n                  >\n                    Delete All Items\n                  </Button>\n                  \n\n                  {/* display searchbar typeahead items if they exist */}\n                  {dataTypeaheadProps ? (\n                    <>\n                      {/* create all search bar options from typeahead's display on grocery list ? */}\n                      {dataTypeaheadProps.map(ingredient_item_grocery_search => {\n                        return <>\n                          <Col xs={12} md={12} lg={12} key={ingredient_item_grocery_search.id}>\n                            <img src={`/images/products/${ingredient_item_grocery_search.product_image}`} className=\"dataTypeahead__card-img\" alt=\"product_img\" />\n                            <div className=\"dataTypeahead__card-div\">\n                              <Card.Header className=\"dataTypeahead__grocery_item_card-header\">\n                                <div className=\"dataTypeahead__header__name-product\">Product Name: {ingredient_item_grocery_search.product_name}</div>\n                              </Card.Header>\n                              <Card.Text className=\"dataTypeahead__grocery_item_card-text\">\n                                Product Price :  {ingredient_item_grocery_search && ingredient_item_grocery_search.product_price}\n                              </Card.Text>\n                              <Card.Text className=\"dataTypeahead__grocery_item_card-text\">\n                                Product Size : {ingredient_item_grocery_search.sizes}\n                              </Card.Text>\n                            </div>\n                            <div className=\"dataTypeahead__buttonAdd\"><Button onClick={e => {\n                              e.stopPropagation();\n                              this.handleShowAddItem(ingredient_item_grocery_search.id);\n                            }}> Add To Cart</Button> </div>\n\n                            <div className=\"dataTypeahead__buttonDelete\"><i class=\"fa fa-remove\" onClick={e => {\n                              e.stopPropagation();\n                              this.handleShowDeleteItem(ingredient_item_grocery_search.id);\n\n                            }} ></i></div>\n                          </Col>\n                        </>\n                      })}\n                    </>\n                  ) : null}\n                  {/* display grocery list, for any authenticated customer */}\n                  {customerList ? (\n                    customerList.map((customer_grocery_product_item) => {\n                      let productID = customer_grocery_product_item.id;\n                      return <>\n                        <Col xs={12} md={12} lg={12} key={customer_grocery_product_item.id}>\n                          {customer_grocery_product_item.product_image.startsWith('http://') || customer_grocery_product_item.product_image.startsWith('data') ? (\n                            <img src={`${customer_grocery_product_item.product_image}`} alt=\"product_img \" className=\"card-img\" />\n                          ) : (\n                              <img src={`/images/products/${customer_grocery_product_item.product_image}`} alt=\"product_img \" className=\"card-img\" />\n                            )}\n                          <div className=\"grocery_item_card-div\">\n                            <Card.Header className=\"grocery_item_card-header\">\n                              <div className=\"header__name-product\"> Product Name : {customer_grocery_product_item.product_name}</div>\n                            </Card.Header>\n                            <Card.Text className=\"grocery_item_card-text\">\n                              Product Price :  {customer_grocery_product_item && customer_grocery_product_item.product_price}\n                            </Card.Text>\n                            <Card.Text className=\"grocery_item_card-text\">\n                              Product Size : {customer_grocery_product_item.sizes}\n                            </Card.Text>\n                          </div>\n                          <div className=\"yourlist__buttonAdd\"><Button onClick={e => {\n                            e.stopPropagation();\n                            this.handleShowAddItem(productID);\n                          }}> Add To Cart</Button> </div>\n                          <div className=\"yourlist__buttonDelete\"><i className=\"fa fa-remove\" onClick={e => {\n                            e.stopPropagation();\n                            this.handleShowDeleteItem(customer_grocery_product_item.id);\n                          }} ></i></div>\n                        </Col>\n                      </>\n                    })\n                  ) : <Spinner animation=\"border\" variant=\"info\" />}\n                </Row>\n              ) : (\n                  <></>\n                )};\n             </Container>\n          </>\n        ) : (\n            <>\n              {/* display create list option if customer has no grocery list */}\n              <div>Log in as guest or user to load your grocery list</div>\n              <Button className=\"yourlist__button-create\" onClick={this.handleShowGroceryList}>create list</Button>\n              {/* display log in pop-up on grocery page. (May be best to separate this into its own fileLoader, to be used on any page) */}\n              <Container>\n                <Modal show={true} onHide={this.handleClose} className=\"modal loginformmm\" backdrop=\"static\">\n                  <Modal.Body>\n                    <Form className=\"login__form\">\n                      <div className=\"login__form-div-title\">\n                        <h2 className=\"login__form-title\">Log in to View Grocery</h2>\n                      </div>\n                      <div className=\"vl\">\n                        <span className=\"vl-innertext\">or</span>\n                      </div>\n                      <div className=\"col\">\n                        <button className=\"fb btn\">\n                          <i className=\"fa fa-facebook fa-fw\"></i> Login with Facebook\n                        </button>\n                        <button className=\"google btn\"><i className=\"fa fa-google fa-fw\">\n                        </i> Login with Google+\n                        </button>\n                      </div>\n\n                      <Form.Group>\n                        <Form.Label className=\"login__form__label\">Email</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"email\"\n                          value={email}\n                          placeholder=\"Enter your email\"\n                          onChange={this.handleChange}\n                          className='login__form__input'\n                        />\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Label className=\"login__form__label\">Password</Form.Label>\n                        <Form.Control\n                          type=\"password\"\n                          name=\"password\"\n                          value={password}\n                          placeholder=\"Enter your password\"\n                          onChange={this.handleChange}\n                          className='login__form__input'\n\n                        />\n                      </Form.Group>\n                      <p className=\"msg-success\">{messageSuccess}</p>\n                      <p className=\"msg-err\">{messageErr}</p>\n                      <Link to=\"/forgotpass\">\n                        <span className=\"link-forgot-password\">Forget Password  ?</span>\n                      </Link>\n\n                      <Button\n                        type=\"button\"\n                        className=\"login__form-btn\"\n                        onClick={this.handleLoginClick}\n                      >\n                        Log in\n                          </Button>\n                      <Form.Text className=\"login__form__text-muted\">\n                        Don’t have an account? {''}\n                        <Link className=\"link-signup-word\" to=\"/signup\">\n                          Sign Up\n                        </Link>\n                        <br />\n                        or\n                         <Link className=\"link-guest-word\" to=\"/v2\">\n                          continue as guest\n                        </Link>\n                      </Form.Text>\n                    </Form>\n                  </Modal.Body>\n                </Modal>\n              </Container>\n            </>\n          )}\n      </>\n    )\n\n    /* Move Create List option to suggest meal */\n    /* <Container>\n              {showGroceryList ? (\n                <Modal show={showGroceryList} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                  <Modal.Body className=\"modal-create__body\">\n                    <Form.Group>\n                      <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductName\"\n                        value={valueProductName}\n                        placeholder=\"Enter name list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group >\n                      <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductImage\"\n                        value={valueProductImage}\n                        placeholder=\"Enter image list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valueProductPrice\"\n                        value={valueProductPrice}\n                        placeholder=\"Enter price list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"text\"\n                        name=\"valueProductSize\"\n                        value={valueProductSize}\n                        placeholder=\"Enter size list\"\n                        onChange={this.handleChange}\n\n                      />\n                    </Form.Group>\n                    <Form.Group className=\"yourlist__group-label\">\n                      <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                      <Form.Control\n                        className='create-input'\n                        type=\"number\"\n                        name=\"valuePricePerOunce\"\n                        value={valuePricePerOunce}\n                        placeholder=\"Enter Price Per Ounce list\"\n                        onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    {messageErrCreate ? (\n                      <p className=\"create__msg-err\">{messageErrCreate}</p>\n                    ) : null}\n                  </Modal.Body>\n                  <Modal.Footer className=\"confirm__success\">\n                    <Button\n                      variant=\"secondary\"\n                      onClick={this.handleClose}\n                    >\n                      Close\n                    </Button>\n                    <Button\n                      className='create-button'\n                      variant=\"success\"\n                      onClick={this.handleCreateList}\n                    >\n                      create\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              ) : <div>No list to show</div>}\n                    </Container> \n                  \n                    handleCreateList = () => {\n    const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n    // if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n    //   if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n\n    const { customerId } = this.state;\n    const productID = lasIdListState;\n    fetch(`/api/create-list/${productID}/${customerId}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        valueProductName,\n        valueProductImage,\n        valueProductPrice,\n        valueProductSize,\n        valuePricePerOunce,\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(response => {\n        if (response) {\n          const { customerList } = this.state;\n          this.setState({ customerList: [...customerList, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n        }\n      })\n\n    //     } else {\n    //     this.setState({ messageErrCreate: 'should be the image start word  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n    //   }\n    // } else {\n    //   this.setState({ messageErrCreate: 'should be sure fill all fields ' })\n    // }\n\n  }\n*/}\n}"]},"metadata":{},"sourceType":"module"}