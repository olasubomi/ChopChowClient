{"ast":null,"code":"var _jsxFileName = \"/Users/olasubomiawokoya/Documents/projects/ChopChowClient/src/components/mealsPage/Mymodal.js\";\nimport React, { Component } from \"react\"; // import Modal from \"react-modal\";\n// import HeartCheckbox from 'react-heart-checkbox';\n// import Slider from \"react-animated-slider\";\n// import \"react-animated-slider/build/horizontal.css\";\n// import { Carousel } from 'react-responsive-carousel';\n// import ImagePopup from \"./ImagePopup\";\n\nimport { Modal } from \"react-bootstrap\"; // import {Button} from 'react-bootstrap/Button';\n\nimport TextSlider from \"../../text_slide\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"./App.css\";\nconst content = [1, 2];\n\nclass MyModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.decrease = () => {\n      if (this.state.increment > 0) {\n        this.setState(prevState => ({\n          increment: prevState.increment - 1\n        }));\n      }\n    };\n\n    this.onClick = (evnet, props) => {\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n\n    this.increase = () => {\n      this.setState({\n        increment: this.state.increment + 1\n      });\n    };\n\n    this.state = {\n      modalIsOpen: false,\n      increment: 0,\n      checked: false,\n      index: 0\n    };\n    this.openModal = this.openModal.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  } // afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   this.subtitle.style.color = \"#f00\";\n  // }\n\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  handleSelect(selectedIndex, e) {\n    this.setState({\n      index: selectedIndex\n    });\n  }\n\n  render() {\n    // const { checked } = this.state;\n    const _this$props = this.props,\n          value = _this$props.value,\n          mealPrep = _this$props.mealPrep,\n          ingredientsList = _this$props.ingredientsList;\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        id: value.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"orange\",\n          color: \"white\"\n        },\n        key: value.id + value.label,\n        onClick: this.openModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"View Steps\")),\n      /*#__PURE__*/\n      React.createElement(Modal, {\n        show: this.state.modalIsOpen // onAfterOpen={this.afterOpenModal}\n        ,\n        onHide: this.closeModal // style={{'backgroundColor': '#bfbfbf'}}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Modal.Body, {\n        style: {\n          padding: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"col-md-5 col-xs-12\",\n        style: {\n          background: \"white\",\n          paddingLeft: \"0px\",\n          paddingRight: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Carousel, {\n        showThumbs: false,\n        infiniteLoop: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, content.map(index =>\n      /*#__PURE__*/\n      React.createElement(\"img\", {\n        style: {\n          height: \"300px\"\n        },\n        alt: \"pp\",\n        key: index,\n        src: value.imageSrc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }\n      }))),\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"col-md-12 col-xs-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, \" \", value.label),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, value.readTime, \" | \", value.cookTime),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        style: {\n          \"margin-left\": \"50%\",\n          backgroundColor: \"grey\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }, \"Compare items\")),\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }))),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \" col-md-7 col-xs-12\",\n        style: {\n          paddingLeft: \"25px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Modal.Header, {\n        closeButton: true,\n        style: {\n          'borderBottom': '20px',\n          'padding': '0px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, \"Meal Quantity \\xA0\",\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"def-number-input number-input\",\n        style: {\n          backgroundColor: \"lightgrey\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        onClick: this.decrease,\n        className: \"minus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        className: \"quantity\",\n        name: \"quantity\",\n        value: this.state.increment,\n        onChange: () => console.log(\"change\"),\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        onClick: this.increase,\n        className: \"plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 23\n        }\n      })), \"\\u2003\",\n      /*#__PURE__*/\n      React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"green\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, \"Add to Cart\")),\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, \"Ingredients\")),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, ingredientsList.map(ingredient =>\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: value.label + ingredient,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 23\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }), ingredient,\n      /*#__PURE__*/\n      React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      })))),\n      /*#__PURE__*/\n      React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(TextSlider, {\n        mealPrep1: mealPrep,\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      })))))))\n    );\n  }\n\n}\n\nexport default MyModal;","map":{"version":3,"sources":["/Users/olasubomiawokoya/Documents/projects/ChopChowClient/src/components/mealsPage/Mymodal.js"],"names":["React","Component","Modal","TextSlider","Carousel","content","MyModal","constructor","props","decrease","state","increment","setState","prevState","onClick","evnet","checked","increase","modalIsOpen","index","openModal","bind","handleSelect","closeModal","selectedIndex","e","render","value","mealPrep","ingredientsList","name","backgroundColor","color","id","label","padding","background","paddingLeft","paddingRight","map","height","imageSrc","readTime","cookTime","console","log","ingredient"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import Modal from \"react-modal\";\n// import HeartCheckbox from 'react-heart-checkbox';\n// import Slider from \"react-animated-slider\";\n// import \"react-animated-slider/build/horizontal.css\";\n// import { Carousel } from 'react-responsive-carousel';\n// import ImagePopup from \"./ImagePopup\";\nimport { Modal } from \"react-bootstrap\";\n// import {Button} from 'react-bootstrap/Button';\nimport TextSlider from \"../../text_slide\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nimport \"./App.css\";\nconst content = [1, 2];\nclass MyModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      increment: 0,\n      checked: false,\n      index: 0\n    };\n    this.openModal = this.openModal.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n  decrease = () => {\n    if (this.state.increment > 0) {\n      this.setState(prevState => ({ increment: prevState.increment - 1 }));\n    }\n  };\n\n  onClick = (evnet, props) => {\n    this.setState({ checked: !this.state.checked });\n  };\n\n  increase = () => {\n    this.setState({ increment: this.state.increment + 1 });\n  };\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  // afterOpenModal() {\n  //   // references are now sync'd and can be accessed.\n  //   this.subtitle.style.color = \"#f00\";\n  // }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  handleSelect(selectedIndex, e) {\n    this.setState({ index: selectedIndex });\n  }\n  render() {\n    // const { checked } = this.state;\n    const { value, mealPrep, ingredientsList } = this.props;\n    return (\n      <>\n        <div id ={value.name}>\n          <button\n          style={{\n            backgroundColor: \"orange\",\n            color: \"white\"\n          }}\n          key={value.id+value.label} onClick={this.openModal}>\n            View Steps\n          </button>\n        </div>\n        <Modal\n          show={this.state.modalIsOpen}\n          // onAfterOpen={this.afterOpenModal}\n          onHide={this.closeModal}\n          // style={{'backgroundColor': '#bfbfbf'}}\n        >\n          {/* <Modal.Header closeButton/> */}\n          {/* setting position to fixed solves the browser sizing issue on modal body, but then backkkground breaks on modal */}\n          <Modal.Body style={{ padding: \"0px\" }}> \n            <div className=\"container\">\n              <div className=\"row\">\n                <div\n                  className=\"col-md-5 col-xs-12\"\n                  style={{\n                    background: \"white\",\n                    paddingLeft: \"0px\",\n                    paddingRight: \"0px\"\n                  }}\n                >\n                  <Carousel showThumbs={false} infiniteLoop={true}>\n                    {content.map(index => (\n                      <img\n                        style={{ height: \"300px\" }}\n                        alt=\"pp\"\n                        key={index}\n                        src={value.imageSrc}\n                      />\n                    ))}\n                  </Carousel>\n                  <br />\n                  <div className=\"col-md-12 col-xs-12\">\n                    <h3> {value.label}</h3>\n                    <div>\n                      {value.readTime} | {value.cookTime}\n                      {/* <HeartCheckbox checked={checked} onClick={this.onClick} /> */}\n                    </div>\n                    <div>\n                      <button\n                        style={{\n                          \"margin-left\": \"50%\",\n                          backgroundColor: \"grey\",\n                          color: \"white\"\n                        }}\n                      >\n                        Compare items\n                      </button>\n                    </div>\n                    <br />\n                  </div>\n                </div>\n                <div\n                  className=\" col-md-7 col-xs-12\"\n                  style={{ paddingLeft: \"25px\" }}\n                >\n                  <Modal.Header closeButton style={{'borderBottom': '20px', 'padding': '0px'}}/> \n                  <div className=\"row\">\n                    Meal Quantity &nbsp;\n                    <div\n                      className=\"def-number-input number-input\"\n                      style={{ backgroundColor: \"lightgrey\" }}\n                    >\n                      <button\n                        onClick={this.decrease}\n                        className=\"minus\"\n                      ></button>\n                      <input\n                        className=\"quantity\"\n                        name=\"quantity\"\n                        value={this.state.increment}\n                        onChange={() => console.log(\"change\")}\n                        type=\"number\"\n                      />\n                      <button onClick={this.increase} className=\"plus\"></button>\n                    </div>\n                    &emsp;\n                    <button\n                      style={{ backgroundColor: \"green\", color: \"white\" }}\n                    >\n                      Add to Cart\n                    </button>\n                  </div>\n                  <br />\n                  <div className=\"row\">\n                    <b>Ingredients</b>\n                  </div>\n                  <div className=\"row\">\n                    {ingredientsList.map(ingredient => (\n                      <div className=\"col-md-6\" key={value.label + ingredient}>\n                        <input type=\"checkbox\" value=\"\" />\n                        {ingredient}\n                        <br />\n                      </div>\n                    ))}\n                  </div>\n                  <hr></hr>\n                    <TextSlider mealPrep1={mealPrep} value={value} />\n                </div>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default MyModal;\n"]},"metadata":{},"sourceType":"module"}