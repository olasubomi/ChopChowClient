{"ast":null,"code":"import * as yup from 'yup';\nvar signupValidation = yup.object().shape({\n  confPassword: yup.string().oneOf([yup.ref('password'), null], 'Password did not match: Please try again...').max(254).min(5).required(),\n  password: yup.string().max(254).min(5, 'Password is too short - should be 5 chars minimum.').required(),\n  email: yup.string().max(254).email().required(),\n  firstname: yup.string().max(254).min(3).required(),\n  lastname: yup.string().max(254).min(3).required(),\n  phoneNumber: yup.number().required(),\n  street: yup.string().max(254).min(3).required(),\n  city: yup.string().max(254).min(3).required(),\n  zipCode: yup.number().required(),\n  ipsid: yup.number().required()\n});\nexport default signupValidation;","map":{"version":3,"sources":["/Users/olasubomiawokoya/Documents/projects/chop_chow_sd/client/src/components/GroceryPage/validationSignup.js"],"names":["yup","signupValidation","object","shape","confPassword","string","oneOf","ref","max","min","required","password","email","firstname","lastname","phoneNumber","number","street","city","zipCode","ipsid"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,IAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,YAAY,EAAEJ,GAAG,CACZK,MADS,GAETC,KAFS,CAGN,CAACN,GAAG,CAACO,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAHM,EAIN,6CAJM,EAMTC,GANS,CAML,GANK,EAOTC,GAPS,CAOL,CAPK,EAQTC,QARS,EAD0B;AAUxCC,EAAAA,QAAQ,EAAEX,GAAG,CACRK,MADK,GAELG,GAFK,CAED,GAFC,EAGLC,GAHK,CAGD,CAHC,EAGE,oDAHF,EAILC,QAJK,EAV8B;AAexCE,EAAAA,KAAK,EAAEZ,GAAG,CACLK,MADE,GAEFG,GAFE,CAEE,GAFF,EAGFI,KAHE,GAIFF,QAJE,EAfiC;AAoBxCG,EAAAA,SAAS,EAAEb,GAAG,CACTK,MADM,GAENG,GAFM,CAEF,GAFE,EAGNC,GAHM,CAGF,CAHE,EAINC,QAJM,EApB6B;AAyBxCI,EAAAA,QAAQ,EAAEd,GAAG,CACRK,MADK,GAELG,GAFK,CAED,GAFC,EAGLC,GAHK,CAGD,CAHC,EAILC,QAJK,EAzB8B;AA8BxCK,EAAAA,WAAW,EAAEf,GAAG,CACXgB,MADQ,GAERN,QAFQ,EA9B2B;AAiCxCO,EAAAA,MAAM,EAAEjB,GAAG,CACNK,MADG,GAEHG,GAFG,CAEC,GAFD,EAGHC,GAHG,CAGC,CAHD,EAIHC,QAJG,EAjCgC;AAsCxCQ,EAAAA,IAAI,EAAElB,GAAG,CACJK,MADC,GAEDG,GAFC,CAEG,GAFH,EAGDC,GAHC,CAGG,CAHH,EAIDC,QAJC,EAtCkC;AA2CxCS,EAAAA,OAAO,EAAEnB,GAAG,CACPgB,MADI,GAEJN,QAFI,EA3C+B;AA8CxCU,EAAAA,KAAK,EAAEpB,GAAG,CACLgB,MADE,GAEFN,QAFE;AA9CiC,CAAnB,CAAzB;AAmDA,eAAeT,gBAAf","sourcesContent":["import * as yup from 'yup';\n\nconst signupValidation = yup.object().shape({\n    confPassword: yup\n        .string()\n        .oneOf(\n            [yup.ref('password'), null],\n            'Password did not match: Please try again...'\n        )\n        .max(254)\n        .min(5)\n        .required(),\n    password: yup\n        .string()\n        .max(254)\n        .min(5, 'Password is too short - should be 5 chars minimum.')\n        .required(),\n    email: yup\n        .string()\n        .max(254)\n        .email()\n        .required(),\n    firstname: yup\n        .string()\n        .max(254)\n        .min(3)\n        .required(),\n    lastname: yup\n        .string()\n        .max(254)\n        .min(3)\n        .required(),\n    phoneNumber: yup\n        .number()\n        .required(),\n    street: yup\n        .string()\n        .max(254)\n        .min(3)\n        .required(),\n    city: yup\n        .string()\n        .max(254)\n        .min(3)\n        .required(),\n    zipCode: yup\n        .number()\n        .required(),\n    ipsid: yup\n        .number()\n        .required(),\n\n});\nexport default signupValidation;"]},"metadata":{},"sourceType":"module"}